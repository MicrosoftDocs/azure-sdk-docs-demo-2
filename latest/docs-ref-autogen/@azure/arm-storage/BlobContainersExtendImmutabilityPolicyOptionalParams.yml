### YamlMime:TSType
name: BlobContainersExtendImmutabilityPolicyOptionalParams
uid: '@azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams'
package: '@azure/arm-storage'
summary: Optional Parameters.
fullName: BlobContainersExtendImmutabilityPolicyOptionalParams
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: abortSignal
    uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.abortSignal
    package: '@azure/arm-storage'
    summary: The signal which can be used to abort requests.
    fullName: abortSignal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        description: ''
        type: AbortSignalLike
  - name: allowProtectedAppendWrites
    uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.allowProtectedAppendWrites
    package: '@azure/arm-storage'
    summary: >-
      This property can only be changed for unlocked time-based retention
      policies. When enabled,

      new blocks can be written to an append blob while maintaining immutability
      protection and

      compliance. Only new blocks can be added and any existing blocks cannot be
      modified or

      deleted. This property cannot be changed with ExtendImmutabilityPolicy API
    fullName: allowProtectedAppendWrites
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowProtectedAppendWrites?: undefined | false | true'
      return:
        description: ''
        type: undefined | false | true
  - name: customHeaders
    uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.customHeaders
    package: '@azure/arm-storage'
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    fullName: customHeaders
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        description: ''
        type: 'undefined | [key: string]: string'
  - name: immutabilityPeriodSinceCreationInDays
    uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.immutabilityPeriodSinceCreationInDays
    package: '@azure/arm-storage'
    summary: >-
      The immutability period for the blobs in the container since the policy
      creation, in days.
    fullName: immutabilityPeriodSinceCreationInDays
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'immutabilityPeriodSinceCreationInDays?: undefined | number'
      return:
        description: ''
        type: undefined | number
  - name: onDownloadProgress
    uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.onDownloadProgress
    package: '@azure/arm-storage'
    summary: Callback which fires upon download progress.
    fullName: onDownloadProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        description: ''
        type: 'undefined | (progress: TransferProgressEvent) =&gt; void'
  - name: onUploadProgress
    uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.onUploadProgress
    package: '@azure/arm-storage'
    summary: Callback which fires upon upload progress.
    fullName: onUploadProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        description: ''
        type: 'undefined | (progress: TransferProgressEvent) =&gt; void'
  - name: timeout
    uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.timeout
    package: '@azure/arm-storage'
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    fullName: timeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeout?: undefined | number'
      return:
        description: ''
        type: undefined | number
extends: RequestOptionsBase
