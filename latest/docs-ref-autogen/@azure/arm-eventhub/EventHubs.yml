### YamlMime:TSType
name: EventHubs
uid: '@azure/arm-eventhub.EventHubs'
package: '@azure/arm-eventhub'
summary: Class representing a EventHubs.
fullName: EventHubs
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: EventHubs(EventHubManagementClientContext)
    uid: '@azure/arm-eventhub.EventHubs.constructor'
    package: '@azure/arm-eventhub'
    summary: Create a EventHubs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new EventHubs(client: EventHubManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-eventhub.EventHubManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, Eventhub,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.EventHubs.createOrUpdate'
    package: '@azure/arm-eventhub'
    summary: >-
      Creates or updates a new Event Hub as a nested resource within a
      Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, parameters: Eventhub, options?:
        msRest.RequestOptionsBase):
        Promise<Models.EventHubsCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.Eventhub" />
          description: Parameters supplied to create an Event Hub resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EventHubsCreateOrUpdateResponse>
        type: Promise&lt;<xref uid="Models.EventHubsCreateOrUpdateResponse" />&gt;
  - name: >-
      createOrUpdate(string, string, string, Eventhub, RequestOptionsBase,
      ServiceCallback<Eventhub>)
    uid: '@azure/arm-eventhub.EventHubs.createOrUpdate_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, parameters: Eventhub, options:
        RequestOptionsBase, callback: ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.Eventhub" />
          description: Parameters supplied to create an Event Hub resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-eventhub.Eventhub" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, Eventhub,
      ServiceCallback<Eventhub>)
    uid: '@azure/arm-eventhub.EventHubs.createOrUpdate_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, parameters: Eventhub, callback:
        ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.Eventhub" />
          description: Parameters supplied to create an Event Hub resource.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-eventhub.Eventhub" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string, string,
      AuthorizationRule, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.EventHubs.createOrUpdateAuthorizationRule'
    package: '@azure/arm-eventhub'
    summary: >-
      Creates or updates an AuthorizationRule for the specified Event Hub.
      Creation/update of the

      AuthorizationRule will take a few seconds to take effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, parameters: AuthorizationRule, options?:
        msRest.RequestOptionsBase):
        Promise<Models.EventHubsCreateOrUpdateAuthorizationRuleResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.AuthorizationRule" />
          description: The shared access AuthorizationRule.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EventHubsCreateOrUpdateAuthorizationRuleResponse>
        type: >-
          Promise&lt;<xref
          uid="Models.EventHubsCreateOrUpdateAuthorizationRuleResponse" />&gt;
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string, string,
      AuthorizationRule, RequestOptionsBase, ServiceCallback<AuthorizationRule>)
    uid: '@azure/arm-eventhub.EventHubs.createOrUpdateAuthorizationRule_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, parameters: AuthorizationRule, options: RequestOptionsBase,
        callback: ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.AuthorizationRule" />
          description: The shared access AuthorizationRule.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AuthorizationRule"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string, string,
      AuthorizationRule, ServiceCallback<AuthorizationRule>)
    uid: '@azure/arm-eventhub.EventHubs.createOrUpdateAuthorizationRule_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, parameters: AuthorizationRule, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.AuthorizationRule" />
          description: The shared access AuthorizationRule.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AuthorizationRule"
            />&gt;
          description: |
            The callback
  - name: >-
      deleteAuthorizationRule(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.EventHubs.deleteAuthorizationRule'
    package: '@azure/arm-eventhub'
    summary: Deletes an Event Hub AuthorizationRule.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, options?: msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: >-
      deleteAuthorizationRule(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-eventhub.EventHubs.deleteAuthorizationRule_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteAuthorizationRule(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-eventhub.EventHubs.deleteAuthorizationRule_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-eventhub.EventHubs.deleteMethod'
    package: '@azure/arm-eventhub'
    summary: Deletes an Event Hub from the specified Namespace and resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options?: msRest.RequestOptionsBase):
        Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: >-
      deleteMethod(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-eventhub.EventHubs.deleteMethod_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-eventhub.EventHubs.deleteMethod_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-eventhub.EventHubs.get'
    package: '@azure/arm-eventhub'
    summary: Gets an Event Hubs description for the specified Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options?: msRest.RequestOptionsBase):
        Promise<Models.EventHubsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EventHubsGetResponse>
        type: Promise&lt;<xref uid="Models.EventHubsGetResponse" />&gt;
  - name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<Eventhub>)'
    uid: '@azure/arm-eventhub.EventHubs.get_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options: RequestOptionsBase, callback:
        ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-eventhub.Eventhub" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<Eventhub>)'
    uid: '@azure/arm-eventhub.EventHubs.get_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, callback: ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-eventhub.Eventhub" />&gt;
          description: |
            The callback
  - name: >-
      getAuthorizationRule(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.EventHubs.getAuthorizationRule'
    package: '@azure/arm-eventhub'
    summary: Gets an AuthorizationRule for an Event Hub by rule name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.EventHubsGetAuthorizationRuleResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EventHubsGetAuthorizationRuleResponse>
        type: >-
          Promise&lt;<xref uid="Models.EventHubsGetAuthorizationRuleResponse"
          />&gt;
  - name: >-
      getAuthorizationRule(string, string, string, string, RequestOptionsBase,
      ServiceCallback<AuthorizationRule>)
    uid: '@azure/arm-eventhub.EventHubs.getAuthorizationRule_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, options:
        RequestOptionsBase, callback: ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AuthorizationRule"
            />&gt;
          description: |
            The callback
  - name: >-
      getAuthorizationRule(string, string, string, string,
      ServiceCallback<AuthorizationRule>)
    uid: '@azure/arm-eventhub.EventHubs.getAuthorizationRule_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AuthorizationRule"
            />&gt;
          description: |
            The callback
  - name: 'listAuthorizationRules(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRules'
    package: '@azure/arm-eventhub'
    summary: Gets the authorization rules for an Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, eventHubName: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.EventHubsListAuthorizationRulesResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EventHubsListAuthorizationRulesResponse>
        type: >-
          Promise&lt;<xref uid="Models.EventHubsListAuthorizationRulesResponse"
          />&gt;
  - name: >-
      listAuthorizationRules(string, string, string, RequestOptionsBase,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRules_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, eventHubName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: |
            The callback
  - name: >-
      listAuthorizationRules(string, string, string,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRules_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, eventHubName: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: |
            The callback
  - name: 'listAuthorizationRulesNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRulesNext'
    package: '@azure/arm-eventhub'
    summary: Gets the authorization rules for an Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.EventHubsListAuthorizationRulesNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EventHubsListAuthorizationRulesNextResponse>
        type: >-
          Promise&lt;<xref
          uid="Models.EventHubsListAuthorizationRulesNextResponse" />&gt;
  - name: >-
      listAuthorizationRulesNext(string, RequestOptionsBase,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRulesNext_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: |
            The callback
  - name: >-
      listAuthorizationRulesNext(string,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: '@azure/arm-eventhub.EventHubs.listAuthorizationRulesNext_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByNamespace(string, string, EventHubsListByNamespaceOptionalParams,
      ServiceCallback<EventHubListResult>)
    uid: '@azure/arm-eventhub.EventHubs.listByNamespace_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, options: EventHubsListByNamespaceOptionalParams, callback:
        ServiceCallback<EventHubListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventhub.EventHubsListByNamespaceOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EventHubListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByNamespace(string, string,
      Models.EventHubsListByNamespaceOptionalParams)
    uid: '@azure/arm-eventhub.EventHubs.listByNamespace'
    package: '@azure/arm-eventhub'
    summary: Gets all the Event Hubs in a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, options?: Models.EventHubsListByNamespaceOptionalParams):
        Promise<Models.EventHubsListByNamespaceResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: <xref uid="Models.EventHubsListByNamespaceOptionalParams" />
          description: ''
      return:
        description: Promise<Models.EventHubsListByNamespaceResponse>
        type: Promise&lt;<xref uid="Models.EventHubsListByNamespaceResponse" />&gt;
  - name: 'listByNamespace(string, string, ServiceCallback<EventHubListResult>)'
    uid: '@azure/arm-eventhub.EventHubs.listByNamespace_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, callback: ServiceCallback<EventHubListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EventHubListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByNamespaceNext(string, EventHubsListByNamespaceNextOptionalParams,
      ServiceCallback<EventHubListResult>)
    uid: '@azure/arm-eventhub.EventHubs.listByNamespaceNext_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespaceNext(nextPageLink: string, options:
        EventHubsListByNamespaceNextOptionalParams, callback:
        ServiceCallback<EventHubListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventhub.EventHubsListByNamespaceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EventHubListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByNamespaceNext(string,
      Models.EventHubsListByNamespaceNextOptionalParams)
    uid: '@azure/arm-eventhub.EventHubs.listByNamespaceNext'
    package: '@azure/arm-eventhub'
    summary: Gets all the Event Hubs in a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespaceNext(nextPageLink: string, options?:
        Models.EventHubsListByNamespaceNextOptionalParams):
        Promise<Models.EventHubsListByNamespaceNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.EventHubsListByNamespaceNextOptionalParams" />
          description: ''
      return:
        description: Promise<Models.EventHubsListByNamespaceNextResponse>
        type: >-
          Promise&lt;<xref uid="Models.EventHubsListByNamespaceNextResponse"
          />&gt;
  - name: 'listByNamespaceNext(string, ServiceCallback<EventHubListResult>)'
    uid: '@azure/arm-eventhub.EventHubs.listByNamespaceNext_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespaceNext(nextPageLink: string, callback:
        ServiceCallback<EventHubListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EventHubListResult" />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-eventhub.EventHubs.listKeys'
    package: '@azure/arm-eventhub'
    summary: Gets the ACS and SAS connection strings for the Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        eventHubName: string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase): Promise<Models.EventHubsListKeysResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EventHubsListKeysResponse>
        type: Promise&lt;<xref uid="Models.EventHubsListKeysResponse" />&gt;
  - name: >-
      listKeys(string, string, string, string, RequestOptionsBase,
      ServiceCallback<AccessKeys>)
    uid: '@azure/arm-eventhub.EventHubs.listKeys_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        eventHubName: string, authorizationRuleName: string, options:
        RequestOptionsBase, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AccessKeys" />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, string, string, ServiceCallback<AccessKeys>)'
    uid: '@azure/arm-eventhub.EventHubs.listKeys_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        eventHubName: string, authorizationRuleName: string, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AccessKeys" />&gt;
          description: |
            The callback
  - name: >-
      regenerateKeys(string, string, string, string,
      RegenerateAccessKeyParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.EventHubs.regenerateKeys'
    package: '@azure/arm-eventhub'
    summary: Regenerates the ACS and SAS connection strings for the Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options?: msRest.RequestOptionsBase):
        Promise<Models.EventHubsRegenerateKeysResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.RegenerateAccessKeyParameters" />
          description: |-
            Parameters supplied to regenerate the AuthorizationRule Keys
            (PrimaryKey/SecondaryKey).
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EventHubsRegenerateKeysResponse>
        type: Promise&lt;<xref uid="Models.EventHubsRegenerateKeysResponse" />&gt;
  - name: >-
      regenerateKeys(string, string, string, string,
      RegenerateAccessKeyParameters, RequestOptionsBase,
      ServiceCallback<AccessKeys>)
    uid: '@azure/arm-eventhub.EventHubs.regenerateKeys_2'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options: RequestOptionsBase, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.RegenerateAccessKeyParameters" />
          description: |-
            Parameters supplied to regenerate the AuthorizationRule Keys
            (PrimaryKey/SecondaryKey).
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AccessKeys" />&gt;
          description: |
            The callback
  - name: >-
      regenerateKeys(string, string, string, string,
      RegenerateAccessKeyParameters, ServiceCallback<AccessKeys>)
    uid: '@azure/arm-eventhub.EventHubs.regenerateKeys_1'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: eventHubName
          type: string
          description: The Event Hub name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.RegenerateAccessKeyParameters" />
          description: |-
            Parameters supplied to regenerate the AuthorizationRule Keys
            (PrimaryKey/SecondaryKey).
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AccessKeys" />&gt;
          description: |
            The callback
