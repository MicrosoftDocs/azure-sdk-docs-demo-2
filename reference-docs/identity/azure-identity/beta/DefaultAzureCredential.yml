### YamlMime:TSType
name: DefaultAzureCredential
uid: '@azure/identity.DefaultAzureCredential|beta'
package: '@azure/identity|beta'
summary: >-
  Provides a default <xref:@azure/identity.ChainedTokenCredential|beta>
  configuration that should

  work for most applications that use the Azure SDK.
fullName: DefaultAzureCredential
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: DefaultAzureCredential(DefaultAzureCredentialClientIdOptions)
    uid: '@azure/identity.DefaultAzureCredential.constructor|beta'
    package: '@azure/identity|beta'
    summary: >-
      Creates an instance of the DefaultAzureCredential class with
      <xref:@azure/identity.DefaultAzureCredentialClientIdOptions|beta>

      This credential provides a default
      <xref:@azure/identity.ChainedTokenCredential|beta> configuration that
      should

      work for most applications that use the Azure SDK.


      The following credential types will be tried, in order:


      - <xref:@azure/identity.EnvironmentCredential|beta>

      - <xref:@azure/identity.ManagedIdentityCredential|beta>

      - <xref:@azure/identity.VisualStudioCodeCredential|beta>

      - <xref:@azure/identity.AzureCliCredential|beta>

      - <xref:@azure/identity.AzurePowerShellCredential|beta>


      Consult the documentation of these credential types for more information

      on how they attempt authentication.


      **Note**: `VisualStudioCodeCredential` is provided by a plugin package:

      `@azure/identity-vscode`. If this package is not installed and registered

      using the plugin API (`useIdentityPlugin`), then authentication using

      `VisualStudioCodeCredential` will not be available.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new DefaultAzureCredential(options?:
        DefaultAzureCredentialClientIdOptions)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/identity.DefaultAzureCredentialClientIdOptions|beta" />
          description: >
            Optional parameters. See
            <xref:@azure/identity.DefaultAzureCredentialClientIdOptions|beta>.
  - name: DefaultAzureCredential(DefaultAzureCredentialOptions)
    uid: '@azure/identity.DefaultAzureCredential.constructor_2|beta'
    package: '@azure/identity|beta'
    summary: >
      Creates an instance of the DefaultAzureCredential class with
      <xref:@azure/identity.DefaultAzureCredentialOptions|beta>

      This credential provides a default
      <xref:@azure/identity.ChainedTokenCredential|beta> configuration that
      should

      work for most applications that use the Azure SDK.


      The following credential types will be tried, in order:


      - <xref:@azure/identity.EnvironmentCredential|beta>

      - <xref:@azure/identity.ManagedIdentityCredential|beta>

      - <xref:@azure/identity.VisualStudioCodeCredential|beta>

      - <xref:@azure/identity.AzureCliCredential|beta>

      - <xref:@azure/identity.AzurePowerShellCredential|beta>


      Consult the documentation of these credential types for more information

      on how they attempt authentication.


      **Note**: `VisualStudioCodeCredential` is provided by a plugin package:

      `@azure/identity-vscode`. If this package is not installed and registered

      using the plugin API (`useIdentityPlugin`), then authentication using

      `VisualStudioCodeCredential` will not be available.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new DefaultAzureCredential(options?: DefaultAzureCredentialOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/identity.DefaultAzureCredentialOptions|beta" />
          description: >
            Optional parameters. See
            <xref:@azure/identity.DefaultAzureCredentialClientIdOptions|beta>.
  - name: DefaultAzureCredential(DefaultAzureCredentialResourceIdOptions)
    uid: '@azure/identity.DefaultAzureCredential.constructor_1|beta'
    package: '@azure/identity|beta'
    summary: >2-
       Creates an instance of the DefaultAzureCredential class with <xref:@azure/identity.DefaultAzureCredentialResourceIdOptions|beta>
      This credential provides a default
      <xref:@azure/identity.ChainedTokenCredential|beta> configuration that
      should

      work for most applications that use the Azure SDK.


      The following credential types will be tried, in order:


      - <xref:@azure/identity.EnvironmentCredential|beta>

      - <xref:@azure/identity.ManagedIdentityCredential|beta>

      - <xref:@azure/identity.VisualStudioCodeCredential|beta>

      - <xref:@azure/identity.AzureCliCredential|beta>

      - <xref:@azure/identity.AzurePowerShellCredential|beta>


      Consult the documentation of these credential types for more information

      on how they attempt authentication.


      **Note**: `VisualStudioCodeCredential` is provided by a plugin package:

      `@azure/identity-vscode`. If this package is not installed and registered

      using the plugin API (`useIdentityPlugin`), then authentication using

      `VisualStudioCodeCredential` will not be available.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new DefaultAzureCredential(options?:
        DefaultAzureCredentialResourceIdOptions)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/identity.DefaultAzureCredentialResourceIdOptions|beta"
            />
          description: >
            Optional parameters. See
            <xref:@azure/identity.DefaultAzureCredentialClientIdOptions|beta>.
inheritedMethods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@azure/identity.DefaultAzureCredential.getToken|beta'
    package: '@azure/identity|beta'
    summary: >
      Returns the first access token returned by one of the chained

      `TokenCredential` implementations.  Throws an
      <xref:@azure/identity.AggregateAuthenticationError|beta>

      when one or more credentials throws an
      <xref:@azure/identity.AggregateAuthenticationError|beta> and

      no credentials have returned an access token.

      This method is called automatically by Azure SDK client libraries. You may
      call this method

      directly, but you must also handle token caching and token refreshing.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: GetTokenOptions
          description: |
            The options used to configure any requests this
                           `TokenCredential` implementation might make.
      return:
        description: ''
        type: Promise&lt;AccessToken&gt;
extends: <xref uid="@azure/identity.ChainedTokenCredential|beta" />
