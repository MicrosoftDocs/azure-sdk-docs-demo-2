### YamlMime:TSType
name: InteractiveCredentialOptions
uid: '@azure/identity.InteractiveCredentialOptions|beta'
package: '@azure/identity|beta'
summary: >-
  Common constructor options for the Identity credentials that requires user
  interaction.
fullName: InteractiveCredentialOptions
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: additionalPolicies
    uid: '@azure/identity.InteractiveCredentialOptions.additionalPolicies|beta'
    package: '@azure/identity|beta'
    summary: Additional policies to include in the HTTP pipeline.
    fullName: additionalPolicies
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'additionalPolicies?: AdditionalPolicyConfig[]'
      return:
        description: ''
        type: AdditionalPolicyConfig[]
  - name: allowInsecureConnection
    uid: '@azure/identity.InteractiveCredentialOptions.allowInsecureConnection|beta'
    package: '@azure/identity|beta'
    summary: Set to true if the request is sent over HTTP instead of HTTPS
    fullName: allowInsecureConnection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowInsecureConnection?: boolean'
      return:
        description: ''
        type: boolean
  - name: authenticationRecord
    uid: '@azure/identity.InteractiveCredentialOptions.authenticationRecord|beta'
    package: '@azure/identity|beta'
    summary: >+
      Result of a previous authentication that can be used to retrieve the
      cached credentials of each individual account.

      This is necessary to provide in case the application wants to work with
      more than one account per

      Client ID and Tenant ID pair.

      This record can be retrieved by calling to the credential's
      `authenticate()` method, as follows:

          const authenticationRecord = await credential.authenticate();

    fullName: authenticationRecord
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'authenticationRecord?: AuthenticationRecord'
      return:
        description: ''
        type: <xref uid="@azure/identity.AuthenticationRecord|beta" />
  - name: authorityHost
    uid: '@azure/identity.InteractiveCredentialOptions.authorityHost|beta'
    package: '@azure/identity|beta'
    summary: >-
      The authority host to use for authentication requests.

      Possible values are available through
      <xref:@azure/identity.AzureAuthorityHosts|beta>.

      The default is "https://login.microsoftonline.com".
    fullName: authorityHost
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'authorityHost?: string'
      return:
        description: ''
        type: string
  - name: disableAutomaticAuthentication
    uid: >-
      @azure/identity.InteractiveCredentialOptions.disableAutomaticAuthentication|beta
    package: '@azure/identity|beta'
    summary: >-
      Makes getToken throw if a manual authentication is necessary.

      Developers will need to call to `authenticate()` to control when to
      manually authenticate.
    fullName: disableAutomaticAuthentication
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disableAutomaticAuthentication?: boolean'
      return:
        description: ''
        type: boolean
  - name: httpClient
    uid: '@azure/identity.InteractiveCredentialOptions.httpClient|beta'
    package: '@azure/identity|beta'
    summary: The HttpClient that will be used to send HTTP requests.
    fullName: httpClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'httpClient?: HttpClient'
      return:
        description: ''
        type: HttpClient
  - name: loggingOptions
    uid: '@azure/identity.InteractiveCredentialOptions.loggingOptions|beta'
    package: '@azure/identity|beta'
    summary: Allows logging account information once the authentication flow succeeds.
    fullName: loggingOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        loggingOptions?: LogPolicyOptions & { allowLoggingAccountIdentifiers?:
        boolean }
      return:
        description: ''
        type: 'LogPolicyOptions & { allowLoggingAccountIdentifiers?: boolean }'
  - name: proxyOptions
    uid: '@azure/identity.InteractiveCredentialOptions.proxyOptions|beta'
    package: '@azure/identity|beta'
    summary: Options to configure a proxy for outgoing requests.
    fullName: proxyOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'proxyOptions?: ProxySettings'
      return:
        description: ''
        type: ProxySettings
  - name: redirectOptions
    uid: '@azure/identity.InteractiveCredentialOptions.redirectOptions|beta'
    package: '@azure/identity|beta'
    summary: Options for how redirect responses are handled.
    fullName: redirectOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'redirectOptions?: RedirectPolicyOptions'
      return:
        description: ''
        type: RedirectPolicyOptions
  - name: retryOptions
    uid: '@azure/identity.InteractiveCredentialOptions.retryOptions|beta'
    package: '@azure/identity|beta'
    summary: Options that control how to retry failed requests.
    fullName: retryOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'retryOptions?: PipelineRetryOptions'
      return:
        description: ''
        type: PipelineRetryOptions
  - name: userAgentOptions
    uid: '@azure/identity.InteractiveCredentialOptions.userAgentOptions|beta'
    package: '@azure/identity|beta'
    summary: Options for adding user agent details to outgoing requests.
    fullName: userAgentOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userAgentOptions?: UserAgentPolicyOptions'
      return:
        description: ''
        type: UserAgentPolicyOptions
extends: <xref uid="@azure/identity.TokenCredentialOptions|beta" />
