### YamlMime:TSType
name: DeviceCodeCredentialOptions
uid: '@azure/identity.DeviceCodeCredentialOptions|stable'
package: '@azure/identity|stable'
summary: Defines options for the InteractiveBrowserCredential class for Node.js.
fullName: DeviceCodeCredentialOptions
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: allowInsecureConnection
    uid: '@azure/identity.DeviceCodeCredentialOptions.allowInsecureConnection|stable'
    package: '@azure/identity|stable'
    summary: Set to true if the request is sent over HTTP instead of HTTPS
    fullName: allowInsecureConnection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowInsecureConnection?: boolean'
      return:
        description: ''
        type: boolean
  - name: authenticationRecord
    uid: '@azure/identity.DeviceCodeCredentialOptions.authenticationRecord|stable'
    package: '@azure/identity|stable'
    summary: >+
      Result of a previous authentication that can be used to retrieve the
      cached credentials of each individual account.

      This is necessary to provide in case the application wants to work with
      more than one account per

      Client ID and Tenant ID pair.

      This record can be retrieved by calling to the credential's
      `authenticate()` method, as follows:

          const authenticationRecord = await credential.authenticate();

    fullName: authenticationRecord
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'authenticationRecord?: AuthenticationRecord'
      return:
        description: ''
        type: <xref uid="@azure/identity.AuthenticationRecord|stable" />
  - name: authorityHost
    uid: '@azure/identity.DeviceCodeCredentialOptions.authorityHost|stable'
    package: '@azure/identity|stable'
    summary: >-
      The authority host to use for authentication requests.

      Possible values are available through
      <xref:@azure/identity.AzureAuthorityHosts|stable>.

      The default is "https://login.microsoftonline.com".
    fullName: authorityHost
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'authorityHost?: string'
      return:
        description: ''
        type: string
  - name: clientId
    uid: '@azure/identity.DeviceCodeCredentialOptions.clientId|stable'
    package: '@azure/identity|stable'
    summary: The client (application) ID of an App Registration in the tenant.
    fullName: clientId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clientId?: string'
      return:
        description: ''
        type: string
  - name: disableAutomaticAuthentication
    uid: >-
      @azure/identity.DeviceCodeCredentialOptions.disableAutomaticAuthentication|stable
    package: '@azure/identity|stable'
    summary: >-
      Makes getToken throw if a manual authentication is necessary.

      Developers will need to call to `authenticate()` to control when to
      manually authenticate.
    fullName: disableAutomaticAuthentication
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disableAutomaticAuthentication?: boolean'
      return:
        description: ''
        type: boolean
  - name: httpClient
    uid: '@azure/identity.DeviceCodeCredentialOptions.httpClient|stable'
    package: '@azure/identity|stable'
    summary: The HttpClient that will be used to send HTTP requests.
    fullName: httpClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'httpClient?: HttpClient'
      return:
        description: ''
        type: HttpClient
  - name: proxyOptions
    uid: '@azure/identity.DeviceCodeCredentialOptions.proxyOptions|stable'
    package: '@azure/identity|stable'
    summary: Options to configure a proxy for outgoing requests.
    fullName: proxyOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'proxyOptions?: ProxySettings'
      return:
        description: ''
        type: ProxySettings
  - name: redirectOptions
    uid: '@azure/identity.DeviceCodeCredentialOptions.redirectOptions|stable'
    package: '@azure/identity|stable'
    summary: Options for how redirect responses are handled.
    fullName: redirectOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'redirectOptions?: RedirectPolicyOptions'
      return:
        description: ''
        type: RedirectPolicyOptions
  - name: retryOptions
    uid: '@azure/identity.DeviceCodeCredentialOptions.retryOptions|stable'
    package: '@azure/identity|stable'
    summary: Options that control how to retry failed requests.
    fullName: retryOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'retryOptions?: ExponentialRetryPolicyOptions'
      return:
        description: ''
        type: ExponentialRetryPolicyOptions
  - name: tenantId
    uid: '@azure/identity.DeviceCodeCredentialOptions.tenantId|stable'
    package: '@azure/identity|stable'
    summary: The Azure Active Directory tenant (directory) ID.
    fullName: tenantId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tenantId?: string'
      return:
        description: ''
        type: string
  - name: tokenCachePersistenceOptions
    uid: >-
      @azure/identity.DeviceCodeCredentialOptions.tokenCachePersistenceOptions|stable
    package: '@azure/identity|stable'
    summary: >
      Options to provide to the persistence layer (if one is available) when

      storing credentials.

      You must first register a persistence provider plugin. See the

      `@azure/identity-cache-persistence` package on NPM.


      Example:


      ```javascript

      import { cachePersistencePlugin } from
      "@azure/identity-cache-persistence";

      import { useIdentityPlugin, DeviceCodeCredential } from "@azure/identity";


      useIdentityPlugin(cachePersistencePlugin);


      async function main() {
        const credential = new DeviceCodeCredential({
          tokenCachePersistenceOptions: {
            enabled: true
          }
        });
      }


      main().catch((error) => {
        console.error("An error occured:", error);
        process.exit(1);
      });

      ```
    fullName: tokenCachePersistenceOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tokenCachePersistenceOptions?: TokenCachePersistenceOptions'
      return:
        description: ''
        type: <xref uid="@azure/identity.TokenCachePersistenceOptions|stable" />
  - name: userAgentOptions
    uid: '@azure/identity.DeviceCodeCredentialOptions.userAgentOptions|stable'
    package: '@azure/identity|stable'
    summary: Options for adding user agent details to outgoing requests.
    fullName: userAgentOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userAgentOptions?: UserAgentPolicyOptions'
      return:
        description: ''
        type: UserAgentPolicyOptions
  - name: userPromptCallback
    uid: '@azure/identity.DeviceCodeCredentialOptions.userPromptCallback|stable'
    package: '@azure/identity|stable'
    summary: >-
      A callback function that will be invoked to show
      <xref:@azure/identity.DeviceCodeInfo|stable> to the user.

      If left unassigned, we will automatically log the device code information

      and the authentication instructions in the console.
    fullName: userPromptCallback
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userPromptCallback?: DeviceCodePromptCallback'
      return:
        description: ''
        type: <xref uid="@azure/identity.DeviceCodePromptCallback|stable" />
extends: <xref uid="@azure/identity.InteractiveCredentialOptions|stable" />
