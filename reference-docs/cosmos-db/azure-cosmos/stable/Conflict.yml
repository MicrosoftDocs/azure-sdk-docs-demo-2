### YamlMime:TSType
name: Conflict
uid: '@azure/cosmos.Conflict|stable'
package: '@azure/cosmos|stable'
summary: |-
  Use to read or delete a given <xref:@azure/cosmos.Conflict|stable> by id.

  See <xref:@azure/cosmos.Conflicts|stable> to query or read all conflicts.
fullName: Conflict
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: container
    uid: '@azure/cosmos.Conflict.container|stable'
    package: '@azure/cosmos|stable'
    summary: ''
    fullName: container
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'container: Container'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.Container|stable" />
  - name: id
    uid: '@azure/cosmos.Conflict.id|stable'
    package: '@azure/cosmos|stable'
    summary: ''
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        description: ''
        type: string
  - name: url
    uid: '@azure/cosmos.Conflict.url|stable'
    package: '@azure/cosmos|stable'
    summary: Returns a reference URL to the resource. Used for linking in Permissions.
    fullName: url
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string url
      return:
        description: ''
        type: string
methods:
  - name: delete(RequestOptions)
    uid: '@azure/cosmos.Conflict.delete|stable'
    package: '@azure/cosmos|stable'
    summary: Delete the given <xref:@azure/cosmos.ConflictDefinition|stable>.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delete(options?: RequestOptions): Promise<ConflictResponse>'
      parameters:
        - id: options
          type: <xref uid="@azure/cosmos.RequestOptions|stable" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/cosmos.ConflictResponse|stable" />&gt;
  - name: read(RequestOptions)
    uid: '@azure/cosmos.Conflict.read|stable'
    package: '@azure/cosmos|stable'
    summary: >-
      Read the <xref:@azure/cosmos.ConflictDefinition|stable> for the given
      <xref:@azure/cosmos.Conflict|stable>.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function read(options?: RequestOptions): Promise<ConflictResponse>'
      parameters:
        - id: options
          type: <xref uid="@azure/cosmos.RequestOptions|stable" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/cosmos.ConflictResponse|stable" />&gt;
