### YamlMime:TSType
name: EntityGetByUniqueAttributes
uid: '@azure-rest/purview-catalog.EntityGetByUniqueAttributes|beta'
package: '@azure-rest/purview-catalog|beta'
summary: ''
fullName: EntityGetByUniqueAttributes
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: delete(EntityDeleteByUniqueAttributeParameters)
    uid: '@azure-rest/purview-catalog.EntityGetByUniqueAttributes.delete|beta'
    package: '@azure-rest/purview-catalog|beta'
    summary: >-
      Delete an entity identified by its type and unique attributes.

      In addition to the typeName path parameter, attribute key-value pair(s)
      can be provided in the following format:

      attr:\<attrName>=\<attrValue>.

      NOTE: The attrName and attrValue should be unique across entities, eg.
      qualifiedName.

      The REST request would look something like this:

      DELETE
      /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function delete(options?: EntityDeleteByUniqueAttributeParameters):
        Promise<EntityDeleteByUniqueAttribute200Response |
        EntityDeleteByUniqueAttributedefaultResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure-rest/purview-catalog.EntityDeleteByUniqueAttributeParameters|beta"
            />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure-rest/purview-catalog.EntityDeleteByUniqueAttribute200Response|beta"
          /> | <xref
          uid="@azure-rest/purview-catalog.EntityDeleteByUniqueAttributedefaultResponse|beta"
          />&gt;
  - name: get(EntityGetByUniqueAttributesParameters)
    uid: '@azure-rest/purview-catalog.EntityGetByUniqueAttributes.get|beta'
    package: '@azure-rest/purview-catalog|beta'
    summary: >-
      Get complete definition of an entity given its type and unique attribute.

      In addition to the typeName path parameter, attribute key-value pair(s)
      can be provided in the following format:

      attr:\<attrName>=<attrValue>.

      NOTE: The attrName and attrValue should be unique across entities, eg.
      qualifiedName.

      The REST request would look something like this:

      GET /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(options?: EntityGetByUniqueAttributesParameters):
        Promise<EntityGetByUniqueAttributes200Response |
        EntityGetByUniqueAttributesdefaultResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure-rest/purview-catalog.EntityGetByUniqueAttributesParameters|beta"
            />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure-rest/purview-catalog.EntityGetByUniqueAttributes200Response|beta"
          /> | <xref
          uid="@azure-rest/purview-catalog.EntityGetByUniqueAttributesdefaultResponse|beta"
          />&gt;
  - name: put(EntityPartialUpdateEntityByUniqueAttributesParameters)
    uid: '@azure-rest/purview-catalog.EntityGetByUniqueAttributes.put|beta'
    package: '@azure-rest/purview-catalog|beta'
    summary: >-
      Update entity partially - Allow a subset of attributes to be updated on

      an entity which is identified by its type and unique attribute  eg:
      Referenceable.qualifiedName.

      Null updates are not possible.

      In addition to the typeName path parameter, attribute key-value pair(s)
      can be provided in the following format:

      attr:<attrName>=<attrValue>.

      NOTE: The attrName and attrValue should be unique across entities, eg.
      qualifiedName.

      The REST request would look something like this:

      PUT /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function put(options:
        EntityPartialUpdateEntityByUniqueAttributesParameters):
        Promise<EntityPartialUpdateEntityByUniqueAttributes200Response |
        EntityPartialUpdateEntityByUniqueAttributesdefaultResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure-rest/purview-catalog.EntityPartialUpdateEntityByUniqueAttributesParameters|beta"
            />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure-rest/purview-catalog.EntityPartialUpdateEntityByUniqueAttributes200Response|beta"
          /> | <xref
          uid="@azure-rest/purview-catalog.EntityPartialUpdateEntityByUniqueAttributesdefaultResponse|beta"
          />&gt;
