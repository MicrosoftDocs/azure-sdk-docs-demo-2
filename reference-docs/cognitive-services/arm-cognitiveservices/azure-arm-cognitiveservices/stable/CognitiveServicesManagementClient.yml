### YamlMime:TSType
name: CognitiveServicesManagementClient
uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient|stable'
package: '@azure/arm-cognitiveservices|stable'
summary: ''
fullName: CognitiveServicesManagementClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      CognitiveServicesManagementClient(ServiceClientCredentials |
      TokenCredential, string, Models.CognitiveServicesManagementClientOptions)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.constructor|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: Initializes a new instance of the CognitiveServicesManagementClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new CognitiveServicesManagementClient(credentials:
        ServiceClientCredentials | TokenCredential, subscriptionId: string,
        options?: Models.CognitiveServicesManagementClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials | TokenCredential
          description: >-
            Credentials needed for the client to connect to Azure. Credentials

            implementing the TokenCredential interface from the @azure/identity
            package are recommended. For

            more information about these credentials, see

            https://www.npmjs.com/package/@azure/identity. Credentials
            implementing the

            ServiceClientCredentials interface from the older packages
            @azure/ms-rest-nodeauth and
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.CognitiveServicesManagementClientOptions|stable"
            />
          description: ''
properties:
  - name: acceptLanguage
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.acceptLanguage|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: acceptLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acceptLanguage: string'
      return:
        description: ''
        type: string
  - name: accounts
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.accounts|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: accounts
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'accounts: Accounts'
      return:
        description: ''
        type: <xref uid="@azure/arm-cognitiveservices.Accounts|stable" />
  - name: apiVersion
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.apiVersion|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: apiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: commitmentPlans
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.commitmentPlans|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: commitmentPlans
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'commitmentPlans: CommitmentPlans'
      return:
        description: ''
        type: <xref uid="@azure/arm-cognitiveservices.CommitmentPlans|stable" />
  - name: commitmentTiers
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.commitmentTiers|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: commitmentTiers
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'commitmentTiers: CommitmentTiers'
      return:
        description: ''
        type: <xref uid="@azure/arm-cognitiveservices.CommitmentTiers|stable" />
  - name: credentials
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.credentials|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials | TokenCredential'
      return:
        description: ''
        type: ServiceClientCredentials | TokenCredential
  - name: deletedAccounts
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.deletedAccounts|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: deletedAccounts
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deletedAccounts: DeletedAccounts'
      return:
        description: ''
        type: <xref uid="@azure/arm-cognitiveservices.DeletedAccounts|stable" />
  - name: deployments
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.deployments|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: deployments
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deployments: Deployments'
      return:
        description: ''
        type: <xref uid="@azure/arm-cognitiveservices.Deployments|stable" />
  - name: longRunningOperationRetryTimeout
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.longRunningOperationRetryTimeout|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    fullName: longRunningOperationRetryTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        description: ''
        type: undefined | number
  - name: operations
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.operations|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: operations
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'operations: Operations'
      return:
        description: ''
        type: <xref uid="@azure/arm-cognitiveservices.Operations|stable" />
  - name: privateEndpointConnections
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.privateEndpointConnections|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: privateEndpointConnections
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'privateEndpointConnections: PrivateEndpointConnections'
      return:
        description: ''
        type: >-
          <xref
          uid="@azure/arm-cognitiveservices.PrivateEndpointConnections|stable"
          />
  - name: privateLinkResources
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.privateLinkResources|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: privateLinkResources
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'privateLinkResources: PrivateLinkResources'
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-cognitiveservices.PrivateLinkResources|stable"
          />
  - name: resourceSkus
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.resourceSkus|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: resourceSkus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resourceSkus: ResourceSkus'
      return:
        description: ''
        type: <xref uid="@azure/arm-cognitiveservices.ResourceSkus|stable" />
  - name: subscriptionId
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.subscriptionId|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    fullName: subscriptionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscriptionId: string'
      return:
        description: ''
        type: string
methods:
  - name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.beginLongRunningRequest|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
        type: Promise&lt;LROPoller&gt;
  - name: >-
      checkDomainAvailability(string, string,
      CognitiveServicesManagementClientCheckDomainAvailabilityOptionalParams,
      ServiceCallback<DomainAvailability>)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.checkDomainAvailability_2|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkDomainAvailability(subdomainName: string, type: string,
        options:
        CognitiveServicesManagementClientCheckDomainAvailabilityOptionalParams,
        callback: ServiceCallback<DomainAvailability>)
      parameters:
        - id: subdomainName
          type: string
          description: The subdomain name to use.
        - id: type
          type: string
          description: The Type of the resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.CognitiveServicesManagementClientCheckDomainAvailabilityOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cognitiveservices.DomainAvailability|stable" />&gt;
          description: |
            The callback
  - name: >-
      checkDomainAvailability(string, string,
      Models.CognitiveServicesManagementClientCheckDomainAvailabilityOptionalParams)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.checkDomainAvailability|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: Check whether a domain is available.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkDomainAvailability(subdomainName: string, type: string,
        options?:
        Models.CognitiveServicesManagementClientCheckDomainAvailabilityOptionalParams):
        Promise<Models.CheckDomainAvailabilityResponse>
      parameters:
        - id: subdomainName
          type: string
          description: The subdomain name to use.
        - id: type
          type: string
          description: The Type of the resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.CognitiveServicesManagementClientCheckDomainAvailabilityOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.CheckDomainAvailabilityResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cognitiveservices.CheckDomainAvailabilityResponse|stable"
          />&gt;
  - name: >-
      checkDomainAvailability(string, string,
      ServiceCallback<DomainAvailability>)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.checkDomainAvailability_1|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkDomainAvailability(subdomainName: string, type: string,
        callback: ServiceCallback<DomainAvailability>)
      parameters:
        - id: subdomainName
          type: string
          description: The subdomain name to use.
        - id: type
          type: string
          description: The Type of the resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cognitiveservices.DomainAvailability|stable" />&gt;
          description: |
            The callback
  - name: >-
      checkSkuAvailability(string, string[], string, string,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.checkSkuAvailability|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: Check available SKUs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkSkuAvailability(location: string, skus: string[], kind:
        string, type: string, options?: msRest.RequestOptionsBase):
        Promise<Models.CheckSkuAvailabilityResponse>
      parameters:
        - id: location
          type: string
          description: Resource location.
        - id: skus
          type: string[]
          description: The SKU of the resource.
        - id: kind
          type: string
          description: The Kind of the resource.
        - id: type
          type: string
          description: The Type of the resource.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.CheckSkuAvailabilityResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cognitiveservices.CheckSkuAvailabilityResponse|stable"
          />&gt;
  - name: >-
      checkSkuAvailability(string, string[], string, string, RequestOptionsBase,
      ServiceCallback<SkuAvailabilityListResult>)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.checkSkuAvailability_2|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkSkuAvailability(location: string, skus: string[], kind:
        string, type: string, options: RequestOptionsBase, callback:
        ServiceCallback<SkuAvailabilityListResult>)
      parameters:
        - id: location
          type: string
          description: Resource location.
        - id: skus
          type: string[]
          description: The SKU of the resource.
        - id: kind
          type: string
          description: The Kind of the resource.
        - id: type
          type: string
          description: The Type of the resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cognitiveservices.SkuAvailabilityListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      checkSkuAvailability(string, string[], string, string,
      ServiceCallback<SkuAvailabilityListResult>)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.checkSkuAvailability_1|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkSkuAvailability(location: string, skus: string[], kind:
        string, type: string, callback:
        ServiceCallback<SkuAvailabilityListResult>)
      parameters:
        - id: location
          type: string
          description: Resource location.
        - id: skus
          type: string[]
          description: The SKU of the resource.
        - id: kind
          type: string
          description: The Kind of the resource.
        - id: type
          type: string
          description: The Type of the resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cognitiveservices.SkuAvailabilityListResult|stable"
            />&gt;
          description: |
            The callback
  - name: restoreLROPoller(LROPollState)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.restoreLROPoller|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState): LROPoller'
      parameters:
        - id: lroPollState
          type: LROPollState
          description: ''
      return:
        description: ''
        type: LROPoller
  - name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendLongRunningRequest|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase):
        Promise<HttpOperationResponse>
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
        type: Promise&lt;HttpOperationResponse&gt;
  - name: sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendLRORequest|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase):
        Promise<LROPoller>
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type: OperationSpec
          description: The specification for the operation.
        - id: options
          type: RequestOptionsBase
          description: Additional options to be sent while making the request.
      return:
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
        type: Promise&lt;LROPoller&gt;
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendOperationRequest|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>):
        Promise<RestResponse>
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        description: ''
        type: Promise&lt;RestResponse&gt;
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: >-
      @azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendRequest|stable
    package: '@azure/arm-cognitiveservices|stable'
    summary: Send the provided httpRequest.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest(options: RequestPrepareOptions | WebResourceLike):
        Promise<HttpOperationResponse>
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        description: ''
        type: Promise&lt;HttpOperationResponse&gt;
extends: >-
  <xref
  uid="@azure/arm-cognitiveservices.CognitiveServicesManagementClientContext|stable"
  />
