### YamlMime:TSType
name: ListManagementImage
uid: '@azure/cognitiveservices-contentmoderator.ListManagementImage|stable'
package: '@azure/cognitiveservices-contentmoderator|stable'
summary: Class representing a ListManagementImage.
fullName: ListManagementImage
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ListManagementImage(ContentModeratorClientContext)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.constructor|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: Create a ListManagementImage.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ListManagementImage(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext|stable"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      addImage(string, ListManagementImageAddImageOptionalParams,
      ServiceCallback<Image>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImage_2|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addImage(listId: string, options:
        ListManagementImageAddImageOptionalParams, callback:
        ServiceCallback<Image>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ListManagementImageAddImageOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.Image|stable" />&gt;
          description: |
            The callback
  - name: addImage(string, Models.ListManagementImageAddImageOptionalParams)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImage|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: Add an image to the list with list Id equal to list Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addImage(listId: string, options?:
        Models.ListManagementImageAddImageOptionalParams):
        Promise<Models.ListManagementImageAddImageResponse>
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ListManagementImageAddImageOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.ListManagementImageAddImageResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ListManagementImageAddImageResponse|stable"
          />&gt;
  - name: addImage(string, ServiceCallback<Image>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImage_1|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addImage(listId: string, callback: ServiceCallback<Image>)'
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.Image|stable" />&gt;
          description: |
            The callback
  - name: >-
      addImageFileInput(string, msRest.HttpRequestBody,
      ListManagementImageAddImageFileInputOptionalParams,
      ServiceCallback<Image>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageFileInput_2|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addImageFileInput(listId: string, imageStream:
        msRest.HttpRequestBody, options:
        ListManagementImageAddImageFileInputOptionalParams, callback:
        ServiceCallback<Image>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: imageStream
          type: msRest.HttpRequestBody
          description: The image file.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ListManagementImageAddImageFileInputOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.Image|stable" />&gt;
          description: |
            The callback
  - name: >-
      addImageFileInput(string, msRest.HttpRequestBody,
      Models.ListManagementImageAddImageFileInputOptionalParams)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageFileInput|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: Add an image to the list with list Id equal to list Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addImageFileInput(listId: string, imageStream:
        msRest.HttpRequestBody, options?:
        Models.ListManagementImageAddImageFileInputOptionalParams):
        Promise<Models.ListManagementImageAddImageFileInputResponse>
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: imageStream
          type: msRest.HttpRequestBody
          description: The image file.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ListManagementImageAddImageFileInputOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.ListManagementImageAddImageFileInputResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ListManagementImageAddImageFileInputResponse|stable"
          />&gt;
  - name: addImageFileInput(string, msRest.HttpRequestBody, ServiceCallback<Image>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageFileInput_1|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addImageFileInput(listId: string, imageStream:
        msRest.HttpRequestBody, callback: ServiceCallback<Image>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: imageStream
          type: msRest.HttpRequestBody
          description: The image file.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.Image|stable" />&gt;
          description: |
            The callback
  - name: >-
      addImageUrlInput(string, string, ImageUrl,
      ListManagementImageAddImageUrlInputOptionalParams, ServiceCallback<Image>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageUrlInput_2|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addImageUrlInput(listId: string, contentType: string, imageUrl:
        ImageUrl, options: ListManagementImageAddImageUrlInputOptionalParams,
        callback: ServiceCallback<Image>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: contentType
          type: string
          description: The content type.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ImageUrl|stable" />
          description: The image url.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ListManagementImageAddImageUrlInputOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.Image|stable" />&gt;
          description: |
            The callback
  - name: >-
      addImageUrlInput(string, string, ImageUrl,
      Models.ListManagementImageAddImageUrlInputOptionalParams)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageUrlInput|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: Add an image to the list with list Id equal to list Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addImageUrlInput(listId: string, contentType: string, imageUrl:
        ImageUrl, options?:
        Models.ListManagementImageAddImageUrlInputOptionalParams):
        Promise<Models.ListManagementImageAddImageUrlInputResponse>
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: contentType
          type: string
          description: The content type.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ImageUrl|stable" />
          description: The image url.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ListManagementImageAddImageUrlInputOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.ListManagementImageAddImageUrlInputResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ListManagementImageAddImageUrlInputResponse|stable"
          />&gt;
  - name: addImageUrlInput(string, string, ImageUrl, ServiceCallback<Image>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.addImageUrlInput_1|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addImageUrlInput(listId: string, contentType: string, imageUrl:
        ImageUrl, callback: ServiceCallback<Image>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: contentType
          type: string
          description: The content type.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ImageUrl|stable" />
          description: The image url.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.Image|stable" />&gt;
          description: |
            The callback
  - name: deleteAllImages(string, msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteAllImages|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: Deletes all images from the list with list Id equal to list Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAllImages(listId: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ListManagementImageDeleteAllImagesResponse>
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.ListManagementImageDeleteAllImagesResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ListManagementImageDeleteAllImagesResponse|stable"
          />&gt;
  - name: deleteAllImages(string, RequestOptionsBase, ServiceCallback<string>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteAllImages_2|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAllImages(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: deleteAllImages(string, ServiceCallback<string>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteAllImages_1|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAllImages(listId: string, callback:
        ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: deleteImage(string, string, msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteImage|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: Deletes an image from the list with list Id and image Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImage(listId: string, imageId: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ListManagementImageDeleteImageResponse>
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: imageId
          type: string
          description: Id of the image.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.ListManagementImageDeleteImageResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ListManagementImageDeleteImageResponse|stable"
          />&gt;
  - name: deleteImage(string, string, RequestOptionsBase, ServiceCallback<string>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteImage_2|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImage(listId: string, imageId: string, options:
        RequestOptionsBase, callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: imageId
          type: string
          description: Id of the image.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: deleteImage(string, string, ServiceCallback<string>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.deleteImage_1|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImage(listId: string, imageId: string, callback:
        ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: imageId
          type: string
          description: Id of the image.
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: getAllImageIds(string, msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.getAllImageIds|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: Gets all image Ids from the list with list Id equal to list Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAllImageIds(listId: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ListManagementImageGetAllImageIdsResponse>
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.ListManagementImageGetAllImageIdsResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ListManagementImageGetAllImageIdsResponse|stable"
          />&gt;
  - name: getAllImageIds(string, RequestOptionsBase, ServiceCallback<ImageIds>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.getAllImageIds_2|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAllImageIds(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ImageIds>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.ImageIds|stable"
            />&gt;
          description: |
            The callback
  - name: getAllImageIds(string, ServiceCallback<ImageIds>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementImage.getAllImageIds_1|stable
    package: '@azure/cognitiveservices-contentmoderator|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAllImageIds(listId: string, callback:
        ServiceCallback<ImageIds>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.ImageIds|stable"
            />&gt;
          description: |
            The callback
