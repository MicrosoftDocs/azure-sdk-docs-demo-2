### YamlMime:TSType
name: Knowledgebase
uid: '@azure/cognitiveservices-qnamaker.Knowledgebase|stable'
package: '@azure/cognitiveservices-qnamaker|stable'
summary: Class representing a Knowledgebase.
fullName: Knowledgebase
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Knowledgebase(QnAMakerClientContext)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.constructor|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: Create a Knowledgebase.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Knowledgebase(client: QnAMakerClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/cognitiveservices-qnamaker.QnAMakerClientContext|stable"
            />
          description: |
            Reference to the service client.
methods:
  - name: create(CreateKbDTO, msRest.RequestOptionsBase)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.create|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(createKbPayload: CreateKbDTO, options?:
        msRest.RequestOptionsBase): Promise<Models.KnowledgebaseCreateResponse>
      parameters:
        - id: createKbPayload
          type: <xref uid="@azure/cognitiveservices-qnamaker.CreateKbDTO|stable" />
          description: Post body of the request.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.KnowledgebaseCreateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-qnamaker.KnowledgebaseCreateResponse|stable"
          />&gt;
  - name: create(CreateKbDTO, RequestOptionsBase, ServiceCallback<Operation>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.create_2|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(createKbPayload: CreateKbDTO, options:
        RequestOptionsBase, callback: ServiceCallback<Operation>)
      parameters:
        - id: createKbPayload
          type: <xref uid="@azure/cognitiveservices-qnamaker.CreateKbDTO|stable" />
          description: Post body of the request.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.Operation|stable" />&gt;
          description: |
            The callback
  - name: create(CreateKbDTO, ServiceCallback<Operation>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.create_1|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(createKbPayload: CreateKbDTO, callback:
        ServiceCallback<Operation>)
      parameters:
        - id: createKbPayload
          type: <xref uid="@azure/cognitiveservices-qnamaker.CreateKbDTO|stable" />
          description: Post body of the request.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.Operation|stable" />&gt;
          description: |
            The callback
  - name: deleteMethod(string, msRest.RequestOptionsBase)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.deleteMethod|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(kbId: string, options?:
        msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.deleteMethod_2|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(kbId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: deleteMethod(string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.deleteMethod_1|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteMethod(kbId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      download(string, Models.EnvironmentType,
      KnowledgebaseDownloadOptionalParams, ServiceCallback<QnADocumentsDTO>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.download_2|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function download(kbId: string, environment: Models.EnvironmentType,
        options: KnowledgebaseDownloadOptionalParams, callback:
        ServiceCallback<QnADocumentsDTO>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: environment
          type: >-
            <xref uid="@azure/cognitiveservices-qnamaker.EnvironmentType|stable"
            />
          description: >-
            Specifies whether environment is Test or Prod. Possible values
            include:

            'Prod', 'Test'
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-qnamaker.KnowledgebaseDownloadOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.QnADocumentsDTO|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      download(string, Models.EnvironmentType,
      Models.KnowledgebaseDownloadOptionalParams)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.download|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function download(kbId: string, environment: Models.EnvironmentType,
        options?: Models.KnowledgebaseDownloadOptionalParams):
        Promise<Models.KnowledgebaseDownloadResponse>
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: environment
          type: >-
            <xref uid="@azure/cognitiveservices-qnamaker.EnvironmentType|stable"
            />
          description: >-
            Specifies whether environment is Test or Prod. Possible values
            include:

            'Prod', 'Test'
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-qnamaker.KnowledgebaseDownloadOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.KnowledgebaseDownloadResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-qnamaker.KnowledgebaseDownloadResponse|stable"
          />&gt;
  - name: download(string, Models.EnvironmentType, ServiceCallback<QnADocumentsDTO>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.download_1|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function download(kbId: string, environment: Models.EnvironmentType,
        callback: ServiceCallback<QnADocumentsDTO>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: environment
          type: >-
            <xref uid="@azure/cognitiveservices-qnamaker.EnvironmentType|stable"
            />
          description: >-
            Specifies whether environment is Test or Prod. Possible values
            include:

            'Prod', 'Test'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.QnADocumentsDTO|stable"
            />&gt;
          description: |
            The callback
  - name: generateAnswer(string, QueryDTO, msRest.RequestOptionsBase)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.generateAnswer|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateAnswer(kbId: string, generateAnswerPayload: QueryDTO,
        options?: msRest.RequestOptionsBase):
        Promise<Models.KnowledgebaseGenerateAnswerResponse>
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: generateAnswerPayload
          type: <xref uid="@azure/cognitiveservices-qnamaker.QueryDTO|stable" />
          description: Post body of the request.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.KnowledgebaseGenerateAnswerResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-qnamaker.KnowledgebaseGenerateAnswerResponse|stable"
          />&gt;
  - name: >-
      generateAnswer(string, QueryDTO, RequestOptionsBase,
      ServiceCallback<QnASearchResultList>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.generateAnswer_2|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateAnswer(kbId: string, generateAnswerPayload: QueryDTO,
        options: RequestOptionsBase, callback:
        ServiceCallback<QnASearchResultList>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: generateAnswerPayload
          type: <xref uid="@azure/cognitiveservices-qnamaker.QueryDTO|stable" />
          description: Post body of the request.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.QnASearchResultList|stable"
            />&gt;
          description: |
            The callback
  - name: generateAnswer(string, QueryDTO, ServiceCallback<QnASearchResultList>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.generateAnswer_1|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateAnswer(kbId: string, generateAnswerPayload: QueryDTO,
        callback: ServiceCallback<QnASearchResultList>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: generateAnswerPayload
          type: <xref uid="@azure/cognitiveservices-qnamaker.QueryDTO|stable" />
          description: Post body of the request.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.QnASearchResultList|stable"
            />&gt;
          description: |
            The callback
  - name: getDetails(string, msRest.RequestOptionsBase)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.getDetails|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDetails(kbId: string, options?: msRest.RequestOptionsBase):
        Promise<Models.KnowledgebaseGetDetailsResponse>
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.KnowledgebaseGetDetailsResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-qnamaker.KnowledgebaseGetDetailsResponse|stable"
          />&gt;
  - name: getDetails(string, RequestOptionsBase, ServiceCallback<KnowledgebaseDTO>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.getDetails_2|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDetails(kbId: string, options: RequestOptionsBase, callback:
        ServiceCallback<KnowledgebaseDTO>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.KnowledgebaseDTO|stable"
            />&gt;
          description: |
            The callback
  - name: getDetails(string, ServiceCallback<KnowledgebaseDTO>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.getDetails_1|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDetails(kbId: string, callback:
        ServiceCallback<KnowledgebaseDTO>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.KnowledgebaseDTO|stable"
            />&gt;
          description: |
            The callback
  - name: listAll(msRest.RequestOptionsBase)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.listAll|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAll(options?: msRest.RequestOptionsBase):
        Promise<Models.KnowledgebaseListAllResponse>
      parameters:
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.KnowledgebaseListAllResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-qnamaker.KnowledgebaseListAllResponse|stable"
          />&gt;
  - name: listAll(RequestOptionsBase, ServiceCallback<KnowledgebasesDTO>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.listAll_2|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAll(options: RequestOptionsBase, callback:
        ServiceCallback<KnowledgebasesDTO>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.KnowledgebasesDTO|stable"
            />&gt;
          description: |
            The callback
  - name: listAll(ServiceCallback<KnowledgebasesDTO>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.listAll_1|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listAll(callback: ServiceCallback<KnowledgebasesDTO>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.KnowledgebasesDTO|stable"
            />&gt;
          description: |
            The callback
  - name: publish(string, msRest.RequestOptionsBase)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.publish|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function publish(kbId: string, options?: msRest.RequestOptionsBase):
        Promise<RestResponse>
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: publish(string, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.publish_2|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function publish(kbId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: publish(string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.publish_1|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function publish(kbId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: replace(string, ReplaceKbDTO, msRest.RequestOptionsBase)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.replace|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function replace(kbId: string, replaceKb: ReplaceKbDTO, options?:
        msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: replaceKb
          type: <xref uid="@azure/cognitiveservices-qnamaker.ReplaceKbDTO|stable" />
          description: >-
            An instance of ReplaceKbDTO which contains list of qnas to be
            uploaded
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: replace(string, ReplaceKbDTO, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.replace_2|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function replace(kbId: string, replaceKb: ReplaceKbDTO, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: replaceKb
          type: <xref uid="@azure/cognitiveservices-qnamaker.ReplaceKbDTO|stable" />
          description: >-
            An instance of ReplaceKbDTO which contains list of qnas to be
            uploaded
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: replace(string, ReplaceKbDTO, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.replace_1|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function replace(kbId: string, replaceKb: ReplaceKbDTO, callback:
        ServiceCallback<void>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: replaceKb
          type: <xref uid="@azure/cognitiveservices-qnamaker.ReplaceKbDTO|stable" />
          description: >-
            An instance of ReplaceKbDTO which contains list of qnas to be
            uploaded
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: train(string, FeedbackRecordsDTO, msRest.RequestOptionsBase)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.train|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function train(kbId: string, trainPayload: FeedbackRecordsDTO, options?:
        msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: trainPayload
          type: >-
            <xref
            uid="@azure/cognitiveservices-qnamaker.FeedbackRecordsDTO|stable" />
          description: Post body of the request.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: >-
      train(string, FeedbackRecordsDTO, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.train_2|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function train(kbId: string, trainPayload: FeedbackRecordsDTO, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: trainPayload
          type: >-
            <xref
            uid="@azure/cognitiveservices-qnamaker.FeedbackRecordsDTO|stable" />
          description: Post body of the request.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: train(string, FeedbackRecordsDTO, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.train_1|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function train(kbId: string, trainPayload: FeedbackRecordsDTO, callback:
        ServiceCallback<void>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: trainPayload
          type: >-
            <xref
            uid="@azure/cognitiveservices-qnamaker.FeedbackRecordsDTO|stable" />
          description: Post body of the request.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: update(string, UpdateKbOperationDTO, msRest.RequestOptionsBase)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.update|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(kbId: string, updateKb: UpdateKbOperationDTO, options?:
        msRest.RequestOptionsBase): Promise<Models.KnowledgebaseUpdateResponse>
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: updateKb
          type: >-
            <xref
            uid="@azure/cognitiveservices-qnamaker.UpdateKbOperationDTO|stable"
            />
          description: Post body of the request.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.KnowledgebaseUpdateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-qnamaker.KnowledgebaseUpdateResponse|stable"
          />&gt;
  - name: >-
      update(string, UpdateKbOperationDTO, RequestOptionsBase,
      ServiceCallback<Operation>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.update_2|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(kbId: string, updateKb: UpdateKbOperationDTO, options:
        RequestOptionsBase, callback: ServiceCallback<Operation>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: updateKb
          type: >-
            <xref
            uid="@azure/cognitiveservices-qnamaker.UpdateKbOperationDTO|stable"
            />
          description: Post body of the request.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.Operation|stable" />&gt;
          description: |
            The callback
  - name: update(string, UpdateKbOperationDTO, ServiceCallback<Operation>)
    uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.update_1|stable'
    package: '@azure/cognitiveservices-qnamaker|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(kbId: string, updateKb: UpdateKbOperationDTO, callback:
        ServiceCallback<Operation>)
      parameters:
        - id: kbId
          type: string
          description: Knowledgebase id.
        - id: updateKb
          type: >-
            <xref
            uid="@azure/cognitiveservices-qnamaker.UpdateKbOperationDTO|stable"
            />
          description: Post body of the request.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-qnamaker.Operation|stable" />&gt;
          description: |
            The callback
