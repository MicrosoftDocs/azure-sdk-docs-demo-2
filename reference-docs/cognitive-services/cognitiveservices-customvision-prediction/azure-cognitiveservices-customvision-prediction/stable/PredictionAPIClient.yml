### YamlMime:TSType
name: PredictionAPIClient
uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient|stable'
package: '@azure/cognitiveservices-customvision-prediction|stable'
summary: ''
fullName: PredictionAPIClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      PredictionAPIClient(ServiceClientCredentials, string,
      msRest.ServiceClientOptions)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: Initializes a new instance of the PredictionAPIClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new PredictionAPIClient(credentials: ServiceClientCredentials, endpoint:
        string, options?: msRest.ServiceClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials
          description: >-
            Subscription credentials which uniquely identify client
            subscription.
        - id: endpoint
          type: string
          description: Supported Cognitive Services endpoints.
        - id: options
          type: msRest.ServiceClientOptions
          description: ''
properties:
  - name: credentials
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.credentials|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        description: ''
        type: ServiceClientCredentials
  - name: endpoint
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    fullName: endpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        description: ''
        type: string
inheritedMethods:
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>):
        Promise<RestResponse>
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        description: ''
        type: Promise&lt;RestResponse&gt;
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: Send the provided httpRequest.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest(options: RequestPrepareOptions | WebResourceLike):
        Promise<HttpOperationResponse>
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        description: ''
        type: Promise&lt;HttpOperationResponse&gt;
methods:
  - name: >-
      classifyImage(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientClassifyImageOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientClassifyImageOptionalParams):
        Promise<Models.ClassifyImageResponse>
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.ClassifyImageResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-customvision-prediction.ClassifyImageResponse|stable"
          />&gt;
  - name: >-
      classifyImage(string, string, msRest.HttpRequestBody,
      PredictionAPIClientClassifyImageOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientClassifyImageOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImage(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageUrl(string, string, ImageUrl,
      Models.PredictionAPIClientClassifyImageUrlOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientClassifyImageUrlOptionalParams):
        Promise<Models.ClassifyImageUrlResponse>
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.ClassifyImageUrlResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-customvision-prediction.ClassifyImageUrlResponse|stable"
          />&gt;
  - name: >-
      classifyImageUrl(string, string, ImageUrl,
      PredictionAPIClientClassifyImageUrlOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options:
        PredictionAPIClientClassifyImageUrlOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageUrl(string, string, ImageUrl,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageUrlWithNoStore(string, string, ImageUrl,
      Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams):
        Promise<Models.ClassifyImageUrlWithNoStoreResponse>
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.ClassifyImageUrlWithNoStoreResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-customvision-prediction.ClassifyImageUrlWithNoStoreResponse|stable"
          />&gt;
  - name: >-
      classifyImageUrlWithNoStore(string, string, ImageUrl,
      PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options:
        PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageUrlWithNoStore(string, string, ImageUrl,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageWithNoStore(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams):
        Promise<Models.ClassifyImageWithNoStoreResponse>
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.ClassifyImageWithNoStoreResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-customvision-prediction.ClassifyImageWithNoStoreResponse|stable"
          />&gt;
  - name: >-
      classifyImageWithNoStore(string, string, msRest.HttpRequestBody,
      PredictionAPIClientClassifyImageWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientClassifyImageWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageWithNoStore(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImage(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientDetectImageOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientDetectImageOptionalParams):
        Promise<Models.DetectImageResponse>
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.DetectImageResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-customvision-prediction.DetectImageResponse|stable"
          />&gt;
  - name: >-
      detectImage(string, string, msRest.HttpRequestBody,
      PredictionAPIClientDetectImageOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientDetectImageOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImage(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImageUrl(string, string, ImageUrl,
      Models.PredictionAPIClientDetectImageUrlOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientDetectImageUrlOptionalParams):
        Promise<Models.DetectImageUrlResponse>
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.DetectImageUrlResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-customvision-prediction.DetectImageUrlResponse|stable"
          />&gt;
  - name: >-
      detectImageUrl(string, string, ImageUrl,
      PredictionAPIClientDetectImageUrlOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options:
        PredictionAPIClientDetectImageUrlOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: detectImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImageUrlWithNoStore(string, string, ImageUrl,
      Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams):
        Promise<Models.DetectImageUrlWithNoStoreResponse>
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.DetectImageUrlWithNoStoreResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-customvision-prediction.DetectImageUrlWithNoStoreResponse|stable"
          />&gt;
  - name: >-
      detectImageUrlWithNoStore(string, string, ImageUrl,
      PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options:
        PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImageUrlWithNoStore(string, string, ImageUrl,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl|stable"
            />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImageWithNoStore(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams):
        Promise<Models.DetectImageWithNoStoreResponse>
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.DetectImageWithNoStoreResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-customvision-prediction.DetectImageWithNoStoreResponse|stable"
          />&gt;
  - name: >-
      detectImageWithNoStore(string, string, msRest.HttpRequestBody,
      PredictionAPIClientDetectImageWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientDetectImageWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImageWithNoStore(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1|stable
    package: '@azure/cognitiveservices-customvision-prediction|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: msRest.HttpRequestBody
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction|stable"
            />&gt;
          description: |
            The callback
extends: >-
  <xref
  uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext|stable"
  />
