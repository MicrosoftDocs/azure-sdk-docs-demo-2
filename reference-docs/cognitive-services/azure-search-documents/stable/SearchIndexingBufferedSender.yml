### YamlMime:TSType
name: SearchIndexingBufferedSender
uid: '@azure/search-documents.SearchIndexingBufferedSender|stable'
package: '@azure/search-documents|stable'
summary: |-
  Class used to perform buffered operations against a search index,
  including adding, updating, and removing them.
fullName: SearchIndexingBufferedSender<T>
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      SearchIndexingBufferedSender(IndexDocumentsClient<T>, (document: T) =>
      string, SearchIndexingBufferedSenderOptions)
    uid: '@azure/search-documents.SearchIndexingBufferedSender.constructor|stable'
    package: '@azure/search-documents|stable'
    summary: Creates a new instance of SearchIndexingBufferedSender.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new SearchIndexingBufferedSender(client: IndexDocumentsClient<T>,
        documentKeyRetriever: (document: T) => string, options?:
        SearchIndexingBufferedSenderOptions)
      parameters:
        - id: client
          type: >-
            <xref uid="@azure/search-documents.IndexDocumentsClient|stable"
            />&lt;T&gt;
          description: Search Client used to call the underlying IndexBatch operations.
        - id: documentKeyRetriever
          type: '(document: T) =&gt; string'
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/search-documents.SearchIndexingBufferedSenderOptions|stable"
            />
          description: |+
            Options to modify auto flush.

methods:
  - name: deleteDocuments(T[], SearchIndexingBufferedSenderDeleteDocumentsOptions)
    uid: >-
      @azure/search-documents.SearchIndexingBufferedSender.deleteDocuments|stable
    package: '@azure/search-documents|stable'
    summary: Deletes the documents/Adds the documents to the delete queue.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDocuments(documents: T[], options?:
        SearchIndexingBufferedSenderDeleteDocumentsOptions): Promise<void>
      parameters:
        - id: documents
          type: T[]
          description: Documents to be deleted.
        - id: options
          type: >-
            <xref
            uid="@azure/search-documents.SearchIndexingBufferedSenderDeleteDocumentsOptions|stable"
            />
          description: |
            Upload options.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: dispose()
    uid: '@azure/search-documents.SearchIndexingBufferedSender.dispose|stable'
    package: '@azure/search-documents|stable'
    summary: 'If using autoFlush: true, call this to cleanup the autoflush timer.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function dispose(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: flush(SearchIndexingBufferedSenderFlushDocumentsOptions)
    uid: '@azure/search-documents.SearchIndexingBufferedSender.flush|stable'
    package: '@azure/search-documents|stable'
    summary: Flushes the queue manually.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function flush(options?:
        SearchIndexingBufferedSenderFlushDocumentsOptions): Promise<void>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/search-documents.SearchIndexingBufferedSenderFlushDocumentsOptions|stable"
            />
          description: |
            Flush options.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: mergeDocuments(T[], SearchIndexingBufferedSenderMergeDocumentsOptions)
    uid: '@azure/search-documents.SearchIndexingBufferedSender.mergeDocuments|stable'
    package: '@azure/search-documents|stable'
    summary: Merges the documents/Adds the documents to the merge queue.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function mergeDocuments(documents: T[], options?:
        SearchIndexingBufferedSenderMergeDocumentsOptions): Promise<void>
      parameters:
        - id: documents
          type: T[]
          description: Documents to be merged.
        - id: options
          type: >-
            <xref
            uid="@azure/search-documents.SearchIndexingBufferedSenderMergeDocumentsOptions|stable"
            />
          description: |
            Upload options.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      mergeOrUploadDocuments(T[],
      SearchIndexingBufferedSenderMergeOrUploadDocumentsOptions)
    uid: >-
      @azure/search-documents.SearchIndexingBufferedSender.mergeOrUploadDocuments|stable
    package: '@azure/search-documents|stable'
    summary: Merges/Uploads the documents/Adds the documents to the merge/upload queue.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function mergeOrUploadDocuments(documents: T[], options?:
        SearchIndexingBufferedSenderMergeOrUploadDocumentsOptions):
        Promise<void>
      parameters:
        - id: documents
          type: T[]
          description: Documents to be merged/uploaded.
        - id: options
          type: >-
            <xref
            uid="@azure/search-documents.SearchIndexingBufferedSenderMergeOrUploadDocumentsOptions|stable"
            />
          description: |
            Upload options.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'off("batchAdded", (e: { action: string, documents: T[] }) => void)'
    uid: '@azure/search-documents.SearchIndexingBufferedSender.off|stable'
    package: '@azure/search-documents|stable'
    summary: Detach Batch Added Event
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "batchAdded", listener: (e: { action: string,
        documents: T[] }) => void)
      parameters:
        - id: event
          type: '"batchAdded"'
          description: Event to be emitted
        - id: listener
          type: '(e: { action: string, documents: T[] }) =&gt; void'
          description: |
            Event Listener
  - name: 'off("batchFailed", (e: RestError) => void)'
    uid: '@azure/search-documents.SearchIndexingBufferedSender.off_3|stable'
    package: '@azure/search-documents|stable'
    summary: Detach Batch Failed Event
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "batchFailed", listener: (e: RestError) => void)'
      parameters:
        - id: event
          type: '"batchFailed"'
          description: Event to be emitted
        - id: listener
          type: '(e: RestError) =&gt; void'
          description: |
            Event Listener
  - name: 'off("batchSucceeded", (e: IndexDocumentsResult) => void)'
    uid: '@azure/search-documents.SearchIndexingBufferedSender.off_2|stable'
    package: '@azure/search-documents|stable'
    summary: Detach Batch Succeeded Event
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "batchSucceeded", listener: (e:
        IndexDocumentsResult) => void)
      parameters:
        - id: event
          type: '"batchSucceeded"'
          description: Event to be emitted
        - id: listener
          type: '(e: IndexDocumentsResult) =&gt; void'
          description: |
            Event Listener
  - name: 'off("beforeDocumentSent", (e: IndexDocumentsAction<T>) => void)'
    uid: '@azure/search-documents.SearchIndexingBufferedSender.off_1|stable'
    package: '@azure/search-documents|stable'
    summary: Detach Batch Sent Event
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "beforeDocumentSent", listener: (e:
        IndexDocumentsAction<T>) => void)
      parameters:
        - id: event
          type: '"beforeDocumentSent"'
          description: Event to be emitted
        - id: listener
          type: '(e: IndexDocumentsAction&lt;T&gt;) =&gt; void'
          description: |
            Event Listener
  - name: 'on("batchAdded", (e: { action: string, documents: T[] }) => void)'
    uid: '@azure/search-documents.SearchIndexingBufferedSender.on|stable'
    package: '@azure/search-documents|stable'
    summary: Attach Batch Added Event
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "batchAdded", listener: (e: { action: string,
        documents: T[] }) => void)
      parameters:
        - id: event
          type: '"batchAdded"'
          description: Event to be emitted
        - id: listener
          type: '(e: { action: string, documents: T[] }) =&gt; void'
          description: |
            Event Listener
  - name: 'on("batchFailed", (e: RestError) => void)'
    uid: '@azure/search-documents.SearchIndexingBufferedSender.on_3|stable'
    package: '@azure/search-documents|stable'
    summary: Attach Batch Failed Event
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "batchFailed", listener: (e: RestError) => void)'
      parameters:
        - id: event
          type: '"batchFailed"'
          description: Event to be emitted
        - id: listener
          type: '(e: RestError) =&gt; void'
          description: |
            Event Listener
  - name: 'on("batchSucceeded", (e: IndexDocumentsResult) => void)'
    uid: '@azure/search-documents.SearchIndexingBufferedSender.on_2|stable'
    package: '@azure/search-documents|stable'
    summary: Attach Batch Succeeded Event
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "batchSucceeded", listener: (e: IndexDocumentsResult)
        => void)
      parameters:
        - id: event
          type: '"batchSucceeded"'
          description: Event to be emitted
        - id: listener
          type: '(e: IndexDocumentsResult) =&gt; void'
          description: |
            Event Listener
  - name: 'on("beforeDocumentSent", (e: IndexDocumentsAction<T>) => void)'
    uid: '@azure/search-documents.SearchIndexingBufferedSender.on_1|stable'
    package: '@azure/search-documents|stable'
    summary: Attach Batch Sent Event
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "beforeDocumentSent", listener: (e:
        IndexDocumentsAction<T>) => void)
      parameters:
        - id: event
          type: '"beforeDocumentSent"'
          description: Event to be emitted
        - id: listener
          type: '(e: IndexDocumentsAction&lt;T&gt;) =&gt; void'
          description: |
            Event Listener
  - name: uploadDocuments(T[], SearchIndexingBufferedSenderUploadDocumentsOptions)
    uid: >-
      @azure/search-documents.SearchIndexingBufferedSender.uploadDocuments|stable
    package: '@azure/search-documents|stable'
    summary: Uploads the documents/Adds the documents to the upload queue.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function uploadDocuments(documents: T[], options?:
        SearchIndexingBufferedSenderUploadDocumentsOptions): Promise<void>
      parameters:
        - id: documents
          type: T[]
          description: Documents to be uploaded.
        - id: options
          type: >-
            <xref
            uid="@azure/search-documents.SearchIndexingBufferedSenderUploadDocumentsOptions|stable"
            />
          description: |
            Upload options.
      return:
        description: ''
        type: Promise&lt;void&gt;
