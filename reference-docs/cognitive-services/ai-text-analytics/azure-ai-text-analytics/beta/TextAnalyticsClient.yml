### YamlMime:TSType
name: TextAnalyticsClient
uid: '@azure/ai-text-analytics.TextAnalyticsClient|beta'
package: '@azure/ai-text-analytics|beta'
summary: Client class for interacting with Azure Text Analytics.
fullName: TextAnalyticsClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      TextAnalyticsClient(string, TokenCredential | KeyCredential,
      TextAnalyticsClientOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.constructor|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Creates an instance of TextAnalyticsClient.

      Example usage:

      ```ts

      import { TextAnalyticsClient, AzureKeyCredential } from
      "@azure/ai-text-analytics";


      const client = new TextAnalyticsClient(
         "<service endpoint>",
         new AzureKeyCredential("<api key>")
      );

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new TextAnalyticsClient(endpointUrl: string, credential: TokenCredential
        | KeyCredential, options?: TextAnalyticsClientOptions)
      parameters:
        - id: endpointUrl
          type: string
          description: The URL to the TextAnalytics endpoint
        - id: credential
          type: TokenCredential | KeyCredential
          description: Used to authenticate requests to the service.
        - id: options
          type: >-
            <xref uid="@azure/ai-text-analytics.TextAnalyticsClientOptions|beta"
            />
          description: |
            Used to configure the TextAnalytics client.
properties:
  - name: defaultCountryHint
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.defaultCountryHint|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: The default country hint to use. Defaults to "us".
    fullName: defaultCountryHint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultCountryHint: string'
      return:
        description: ''
        type: string
  - name: defaultLanguage
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.defaultLanguage|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: The default language to use. Defaults to "en".
    fullName: defaultLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultLanguage: string'
      return:
        description: ''
        type: string
  - name: endpointUrl
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.endpointUrl|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: The URL to the TextAnalytics endpoint
    fullName: endpointUrl
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpointUrl: string'
      return:
        description: ''
        type: string
methods:
  - name: analyzeSentiment(string[], string, AnalyzeSentimentOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.analyzeSentiment|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a predictive model to identify the positive, negative, neutral, or
      mixed

      sentiment contained in the input strings, as well as scores indicating

      the model's confidence in each of the predicted sentiments. Optionally it

      can also identify targets in the text and assessments about it through

      opinion mining. For a list of languages supported by this operation, @see

      https://docs.microsoft.com/azure/cognitive-services/text-analytics/language-support.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function analyzeSentiment(documents: string[], language?: string,
        options?: AnalyzeSentimentOptions): Promise<AnalyzeSentimentResultArray>
      parameters:
        - id: documents
          type: string[]
          description: The input strings to analyze.
        - id: language
          type: string
          description: |-
            The language that all the input strings are
            written in. If unspecified, this value will be set to the default
            language in `TextAnalyticsClientOptions`.
            If set to an empty string, the service will apply a model
            where the lanuage is explicitly set to "None".
        - id: options
          type: <xref uid="@azure/ai-text-analytics.AnalyzeSentimentOptions|beta" />
          description: |
            Optional parameters that includes enabling opinion mining.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.AnalyzeSentimentResultArray|beta" />&gt;
  - name: analyzeSentiment(TextDocumentInput[], AnalyzeSentimentOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.analyzeSentiment_1|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a predictive model to identify the positive, negative or neutral, or
      mixed

      sentiment contained in the input documents, as well as scores indicating

      the model's confidence in each of the predicted sentiments.Optionally it

      can also identify targets in the text and assessments about it through

      opinion mining. For a list of languages supported by this operation, @see

      https://docs.microsoft.com/azure/cognitive-services/text-analytics/language-support.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function analyzeSentiment(documents: TextDocumentInput[], options?:
        AnalyzeSentimentOptions): Promise<AnalyzeSentimentResultArray>
      parameters:
        - id: documents
          type: <xref uid="@azure/ai-text-analytics.TextDocumentInput|beta" />[]
          description: The input documents to analyze.
        - id: options
          type: <xref uid="@azure/ai-text-analytics.AnalyzeSentimentOptions|beta" />
          description: |
            Optional parameters that includes enabling opinion mining.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.AnalyzeSentimentResultArray|beta" />&gt;
  - name: >-
      beginAnalyzeActions(string[], TextAnalyticsActions, string,
      BeginAnalyzeActionsOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.beginAnalyzeActions|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Submit a collection of text documents for analysis. Specify one or more
      unique actions to be executed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginAnalyzeActions(documents: string[], actions:
        TextAnalyticsActions, language?: string, options?:
        BeginAnalyzeActionsOptions): Promise<AnalyzeActionsPollerLike>
      parameters:
        - id: documents
          type: string[]
          description: Collection of documents to analyze
        - id: actions
          type: <xref uid="@azure/ai-text-analytics.TextAnalyticsActions|beta" />
          description: TextAnalyticsActions to execute.
        - id: language
          type: string
          description: |-
            The language that all the input strings are
            written in. If unspecified, this value will be set to the default
            language in `TextAnalyticsClientOptions`.
            If set to an empty string, the service will apply a model
            where the language is explicitly set to "None".
        - id: options
          type: >-
            <xref uid="@azure/ai-text-analytics.BeginAnalyzeActionsOptions|beta"
            />
          description: |
            Options for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.AnalyzeActionsPollerLike|beta" />&gt;
  - name: >-
      beginAnalyzeActions(TextDocumentInput[], TextAnalyticsActions,
      BeginAnalyzeActionsOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.beginAnalyzeActions_1|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Submit a collection of text documents for analysis. Specify one or more
      unique actions to be executed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginAnalyzeActions(documents: TextDocumentInput[], actions:
        TextAnalyticsActions, options?: BeginAnalyzeActionsOptions):
        Promise<AnalyzeActionsPollerLike>
      parameters:
        - id: documents
          type: <xref uid="@azure/ai-text-analytics.TextDocumentInput|beta" />[]
          description: Collection of documents to analyze
        - id: actions
          type: <xref uid="@azure/ai-text-analytics.TextAnalyticsActions|beta" />
          description: TextAnalyticsActions to execute.
        - id: options
          type: >-
            <xref uid="@azure/ai-text-analytics.BeginAnalyzeActionsOptions|beta"
            />
          description: |
            Options for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.AnalyzeActionsPollerLike|beta" />&gt;
  - name: >-
      beginAnalyzeHealthcareEntities(string[], string,
      BeginAnalyzeHealthcareEntitiesOptions)
    uid: >-
      @azure/ai-text-analytics.TextAnalyticsClient.beginAnalyzeHealthcareEntities|beta
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Start a healthcare analysis operation to recognize healthcare related
      entities (drugs, conditions,

      symptoms, etc) and their relations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginAnalyzeHealthcareEntities(documents: string[], language?:
        string, options?: BeginAnalyzeHealthcareEntitiesOptions):
        Promise<AnalyzeHealthcareEntitiesPollerLike>
      parameters:
        - id: documents
          type: string[]
          description: Collection of documents to analyze.
        - id: language
          type: string
          description: |-
            The language that all the input strings are
            written in. If unspecified, this value will be set to the default
            language in `TextAnalyticsClientOptions`.
            If set to an empty string, the service will apply a model
            where the language is explicitly set to "None".
        - id: options
          type: >-
            <xref
            uid="@azure/ai-text-analytics.BeginAnalyzeHealthcareEntitiesOptions|beta"
            />
          description: |
            Options for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.AnalyzeHealthcareEntitiesPollerLike|beta"
          />&gt;
  - name: >-
      beginAnalyzeHealthcareEntities(TextDocumentInput[],
      BeginAnalyzeHealthcareEntitiesOptions)
    uid: >-
      @azure/ai-text-analytics.TextAnalyticsClient.beginAnalyzeHealthcareEntities_1|beta
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Start a healthcare analysis operation to recognize healthcare related
      entities (drugs, conditions,

      symptoms, etc) and their relations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginAnalyzeHealthcareEntities(documents: TextDocumentInput[],
        options?: BeginAnalyzeHealthcareEntitiesOptions):
        Promise<AnalyzeHealthcareEntitiesPollerLike>
      parameters:
        - id: documents
          type: <xref uid="@azure/ai-text-analytics.TextDocumentInput|beta" />[]
          description: Collection of documents to analyze.
        - id: options
          type: >-
            <xref
            uid="@azure/ai-text-analytics.BeginAnalyzeHealthcareEntitiesOptions|beta"
            />
          description: |
            Options for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.AnalyzeHealthcareEntitiesPollerLike|beta"
          />&gt;
  - name: detectLanguage(DetectLanguageInput[], DetectLanguageOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.detectLanguage_1|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a predictive model to determine the language that the passed-in

      input document are written in, and returns, for each one, the detected

      language as well as a score indicating the model's confidence that the

      inferred language is correct.  Scores close to 1 indicate high certainty
      in

      the result.  120 languages are supported.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectLanguage(documents: DetectLanguageInput[], options?:
        DetectLanguageOptions): Promise<DetectLanguageResultArray>
      parameters:
        - id: documents
          type: <xref uid="@azure/ai-text-analytics.DetectLanguageInput|beta" />[]
          description: A collection of input documents to analyze.
        - id: options
          type: <xref uid="@azure/ai-text-analytics.DetectLanguageOptions|beta" />
          description: |
            Optional parameters for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.DetectLanguageResultArray|beta" />&gt;
  - name: detectLanguage(string[], string, DetectLanguageOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.detectLanguage|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a predictive model to determine the language that the passed-in

      input strings are written in, and returns, for each one, the detected

      language as well as a score indicating the model's confidence that the

      inferred language is correct.  Scores close to 1 indicate high certainty
      in

      the result.  120 languages are supported.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectLanguage(documents: string[], countryHint?: string,
        options?: DetectLanguageOptions): Promise<DetectLanguageResultArray>
      parameters:
        - id: documents
          type: string[]
          description: A collection of input strings to analyze.
        - id: countryHint
          type: string
          description: |-
            Indicates the country of origin for all of
              the input strings to assist the text analytics model in predicting
              the language they are written in.  If unspecified, this value will be
              set to the default country hint in `TextAnalyticsClientOptions`.
              If set to an empty string, or the string "none", the service will apply a
              model where the country is explicitly unset.
              The same country hint is applied to all strings in the input collection.
        - id: options
          type: <xref uid="@azure/ai-text-analytics.DetectLanguageOptions|beta" />
          description: |
            Optional parameters for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.DetectLanguageResultArray|beta" />&gt;
  - name: extractKeyPhrases(string[], string, ExtractKeyPhrasesOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.extractKeyPhrases|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a model to identify a collection of significant phrases

      found in the passed-in input strings.

      For a list of languages supported by this operation, @see

      https://docs.microsoft.com/azure/cognitive-services/text-analytics/language-support.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function extractKeyPhrases(documents: string[], language?: string,
        options?: ExtractKeyPhrasesOptions):
        Promise<ExtractKeyPhrasesResultArray>
      parameters:
        - id: documents
          type: string[]
          description: The input strings to analyze.
        - id: language
          type: string
          description: |-
            The language that all the input strings are
            written in. If unspecified, this value will be set to the default
            language in `TextAnalyticsClientOptions`.
            If set to an empty string, the service will apply a model
            where the language is explicitly set to "None".
        - id: options
          type: >-
            <xref uid="@azure/ai-text-analytics.ExtractKeyPhrasesOptions|beta"
            />
          description: |
            Options for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.ExtractKeyPhrasesResultArray|beta"
          />&gt;
  - name: extractKeyPhrases(TextDocumentInput[], ExtractKeyPhrasesOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.extractKeyPhrases_1|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a model to identify a collection of significant phrases

      found in the passed-in input documents.

      For a list of languages supported by this operation, @see

      https://docs.microsoft.com/azure/cognitive-services/text-analytics/language-support.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function extractKeyPhrases(documents: TextDocumentInput[], options?:
        ExtractKeyPhrasesOptions): Promise<ExtractKeyPhrasesResultArray>
      parameters:
        - id: documents
          type: <xref uid="@azure/ai-text-analytics.TextDocumentInput|beta" />[]
          description: The input documents to analyze.
        - id: options
          type: >-
            <xref uid="@azure/ai-text-analytics.ExtractKeyPhrasesOptions|beta"
            />
          description: |
            Options for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.ExtractKeyPhrasesResultArray|beta"
          />&gt;
  - name: recognizeEntities(string[], string, RecognizeCategorizedEntitiesOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.recognizeEntities|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a predictive model to identify a collection of named entities

      in the passed-in input strings, and categorize those entities into types

      such as person, location, or organization.  For more information on

      available categories, @see

      https://docs.microsoft.com/azure/cognitive-services/Text-Analytics/named-entity-types.

      For a list of languages supported by this operation, @see

      https://docs.microsoft.com/azure/cognitive-services/text-analytics/language-support.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognizeEntities(documents: string[], language?: string,
        options?: RecognizeCategorizedEntitiesOptions):
        Promise<RecognizeCategorizedEntitiesResultArray>
      parameters:
        - id: documents
          type: string[]
          description: The input strings to analyze.
        - id: language
          type: string
          description: |-
            The language that all the input strings are
            written in. If unspecified, this value will be set to the default
            language in `TextAnalyticsClientOptions`.
            If set to an empty string, the service will apply a model
            where the language is explicitly set to "None".
        - id: options
          type: >-
            <xref
            uid="@azure/ai-text-analytics.RecognizeCategorizedEntitiesOptions|beta"
            />
          description: |
            Optional parameters for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.RecognizeCategorizedEntitiesResultArray|beta"
          />&gt;
  - name: >-
      recognizeEntities(TextDocumentInput[],
      RecognizeCategorizedEntitiesOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.recognizeEntities_1|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a predictive model to identify a collection of named entities

      in the passed-in input documents, and categorize those entities into types

      such as person, location, or organization.  For more information on

      available categories, @see

      https://docs.microsoft.com/azure/cognitive-services/Text-Analytics/named-entity-types.

      For a list of languages supported by this operation, @see

      https://docs.microsoft.com/azure/cognitive-services/text-analytics/language-support.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognizeEntities(documents: TextDocumentInput[], options?:
        RecognizeCategorizedEntitiesOptions):
        Promise<RecognizeCategorizedEntitiesResultArray>
      parameters:
        - id: documents
          type: <xref uid="@azure/ai-text-analytics.TextDocumentInput|beta" />[]
          description: The input documents to analyze.
        - id: options
          type: >-
            <xref
            uid="@azure/ai-text-analytics.RecognizeCategorizedEntitiesOptions|beta"
            />
          description: |
            Optional parameters for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.RecognizeCategorizedEntitiesResultArray|beta"
          />&gt;
  - name: recognizeLinkedEntities(string[], string, RecognizeLinkedEntitiesOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.recognizeLinkedEntities|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a predictive model to identify a collection of entities

      found in the passed-in input strings, and include information linking the

      entities to their corresponding entries in a well-known knowledge base.

      For a list of languages supported by this operation, @see

      https://docs.microsoft.com/azure/cognitive-services/text-analytics/language-support.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognizeLinkedEntities(documents: string[], language?: string,
        options?: RecognizeLinkedEntitiesOptions):
        Promise<RecognizeLinkedEntitiesResultArray>
      parameters:
        - id: documents
          type: string[]
          description: The input strings to analyze.
        - id: language
          type: string
          description: |-
            The language that all the input strings are
            written in. If unspecified, this value will be set to the default
            language in `TextAnalyticsClientOptions`.
            If set to an empty string, the service will apply a model
            where the language is explicitly set to "None".
        - id: options
          type: >-
            <xref
            uid="@azure/ai-text-analytics.RecognizeLinkedEntitiesOptions|beta"
            />
          description: |
            Options for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.RecognizeLinkedEntitiesResultArray|beta"
          />&gt;
  - name: >-
      recognizeLinkedEntities(TextDocumentInput[],
      RecognizeLinkedEntitiesOptions)
    uid: >-
      @azure/ai-text-analytics.TextAnalyticsClient.recognizeLinkedEntities_1|beta
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a predictive model to identify a collection of entities

      found in the passed-in input documents, and include information linking
      the

      entities to their corresponding entries in a well-known knowledge base.

      For a list of languages supported by this operation, @see

      https://docs.microsoft.com/azure/cognitive-services/text-analytics/language-support.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognizeLinkedEntities(documents: TextDocumentInput[],
        options?: RecognizeLinkedEntitiesOptions):
        Promise<RecognizeLinkedEntitiesResultArray>
      parameters:
        - id: documents
          type: <xref uid="@azure/ai-text-analytics.TextDocumentInput|beta" />[]
          description: The input documents to analyze.
        - id: options
          type: >-
            <xref
            uid="@azure/ai-text-analytics.RecognizeLinkedEntitiesOptions|beta"
            />
          description: |
            Options for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.RecognizeLinkedEntitiesResultArray|beta"
          />&gt;
  - name: recognizePiiEntities(string[], string, RecognizePiiEntitiesOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.recognizePiiEntities|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a predictive model to identify a collection of entities containing

      personally identifiable information found in the passed-in input strings,

      and categorize those entities into types such as US social security

      number, drivers license number, or credit card number.

      For a list of languages supported by this operation, @see

      https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/language-support.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognizePiiEntities(inputs: string[], language?: string,
        options?: RecognizePiiEntitiesOptions):
        Promise<RecognizePiiEntitiesResultArray>
      parameters:
        - id: inputs
          type: string[]
          description: The input strings to analyze.
        - id: language
          type: string
          description: |-
            The language that all the input strings are
            written in. If unspecified, this value will be set to the default
            language in `TextAnalyticsClientOptions`.
            If set to an empty string, the service will apply a model
            where the language is explicitly set to "None".
        - id: options
          type: >-
            <xref
            uid="@azure/ai-text-analytics.RecognizePiiEntitiesOptions|beta" />
          description: |
            Options for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.RecognizePiiEntitiesResultArray|beta"
          />&gt;
  - name: recognizePiiEntities(TextDocumentInput[], RecognizePiiEntitiesOptions)
    uid: '@azure/ai-text-analytics.TextAnalyticsClient.recognizePiiEntities_1|beta'
    package: '@azure/ai-text-analytics|beta'
    summary: >-
      Runs a predictive model to identify a collection of entities containing

      personally identifiable information found in the passed-in input
      documents,

      and categorize those entities into types such as US social security

      number, drivers license number, or credit card number.

      For a list of languages supported by this operation, @see

      https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/language-support.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognizePiiEntities(inputs: TextDocumentInput[], options?:
        RecognizePiiEntitiesOptions): Promise<RecognizePiiEntitiesResultArray>
      parameters:
        - id: inputs
          type: <xref uid="@azure/ai-text-analytics.TextDocumentInput|beta" />[]
          description: The input documents to analyze.
        - id: options
          type: >-
            <xref
            uid="@azure/ai-text-analytics.RecognizePiiEntitiesOptions|beta" />
          description: |
            Optional parameters for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-text-analytics.RecognizePiiEntitiesResultArray|beta"
          />&gt;
