### YamlMime:TSType
name: PathDeleteIfExistsResponse
uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse|beta'
package: '@azure/storage-file-datalake|beta'
summary: >-
  Contains response data for the
  <xref:@azure/storage-file-datalake.DataLakePathClient.deleteIfExists>
  operation.
fullName: PathDeleteIfExistsResponse
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: continuation
    uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.continuation|beta'
    package: '@azure/storage-file-datalake|beta'
    summary: >-
      When deleting a directory, the number of paths that are deleted with each
      invocation is limited.  If the number of paths to be deleted exceeds this
      limit, a continuation token is returned in this response header.  When a
      continuation token is returned in the response, it must be specified in a
      subsequent invocation of the delete operation to continue deleting the
      directory.
    fullName: continuation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'continuation?: string'
      return:
        description: ''
        type: string
  - name: date
    uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.date|beta'
    package: '@azure/storage-file-datalake|beta'
    summary: >-
      A UTC date/time value generated by the service that indicates the time at
      which the response was initiated.
    fullName: date
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'date?: Date'
      return:
        description: ''
        type: Date
  - name: deletionId
    uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.deletionId|beta'
    package: '@azure/storage-file-datalake|beta'
    summary: >-
      Returned only for hierarchical namespace space enabled accounts when soft
      delete is enabled. A unique identifier for the entity that can be used to
      restore it. See the Undelete REST API for more information.
    fullName: deletionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deletionId?: string'
      return:
        description: ''
        type: string
  - name: errorCode
    uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.errorCode|beta'
    package: '@azure/storage-file-datalake|beta'
    summary: Error Code
    fullName: errorCode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'errorCode?: string'
      return:
        description: ''
        type: string
  - name: requestId
    uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.requestId|beta'
    package: '@azure/storage-file-datalake|beta'
    summary: >-
      A server-generated UUID recorded in the analytics logs for troubleshooting
      and correlation.
    fullName: requestId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'requestId?: string'
      return:
        description: ''
        type: string
  - name: succeeded
    uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.succeeded|beta'
    package: '@azure/storage-file-datalake|beta'
    summary: >-
      Indicate whether the directory/file is successfully deleted. Is false if
      the directory/file doesn't exist in the first place.
    fullName: succeeded
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'succeeded: boolean'
      return:
        description: ''
        type: boolean
  - name: version
    uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.version|beta'
    package: '@azure/storage-file-datalake|beta'
    summary: The version of the REST protocol used to process the request.
    fullName: version
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'version?: string'
      return:
        description: ''
        type: string
extends: >-
  <xref uid="@azure/storage-file-datalake.PathDeleteHeaders|beta" /> & {
  _response: HttpResponse & { parsedHeaders: PathDeleteHeaders } }
