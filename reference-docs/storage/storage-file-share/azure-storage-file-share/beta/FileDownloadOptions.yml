### YamlMime:TSType
name: FileDownloadOptions
uid: '@azure/storage-file-share.FileDownloadOptions|beta'
package: '@azure/storage-file-share|beta'
summary: |
  Options to configure File - Download operations.
  See:
  - <xref:@azure/storage-file-share.ShareFileClient.download>
  - <xref:@azure/storage-file-share.ShareFileClient.downloadToFile>
fullName: FileDownloadOptions
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: abortSignal
    uid: '@azure/storage-file-share.FileDownloadOptions.abortSignal|beta'
    package: '@azure/storage-file-share|beta'
    summary: >-
      An implementation of the `AbortSignalLike` interface to signal the request
      to cancel the operation.

      For example, use the &commat;azure/abort-controller to create an
      `AbortSignal`.
    fullName: abortSignal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        description: ''
        type: AbortSignalLike
  - name: leaseAccessConditions
    uid: '@azure/storage-file-share.FileDownloadOptions.leaseAccessConditions|beta'
    package: '@azure/storage-file-share|beta'
    summary: Lease access conditions.
    fullName: leaseAccessConditions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'leaseAccessConditions?: LeaseAccessConditions'
      return:
        description: ''
        type: <xref uid="@azure/storage-file-share.LeaseAccessConditions|beta" />
  - name: maxRetryRequests
    uid: '@azure/storage-file-share.FileDownloadOptions.maxRetryRequests|beta'
    package: '@azure/storage-file-share|beta'
    summary: >
      Optional. ONLY AVAILABLE IN NODE.JS.

      How many retries will perform when original body download stream
      unexpected ends.

      Above kind of ends will not trigger retry policy defined in a pipeline,

      because they doesn't emit network errors.


      With this option, every additional retry means an additional
      ShareFileClient.download() request will be made

      from the broken point, until the requested range has been successfully
      downloaded or maxRetryRequests is reached.


      Default value is 5, please set a larger value when loading large files in
      poor network.
    fullName: maxRetryRequests
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxRetryRequests?: number'
      return:
        description: ''
        type: number
  - name: onProgress
    uid: '@azure/storage-file-share.FileDownloadOptions.onProgress|beta'
    package: '@azure/storage-file-share|beta'
    summary: Download progress updating event handler.
    fullName: onProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onProgress?: (progress: TransferProgressEvent) => void'
      return:
        description: ''
        type: '(progress: TransferProgressEvent) =&gt; void'
  - name: rangeGetContentMD5
    uid: '@azure/storage-file-share.FileDownloadOptions.rangeGetContentMD5|beta'
    package: '@azure/storage-file-share|beta'
    summary: |-
      When this header is set to true and
      specified together with the Range header, the service returns the MD5 hash
      for the range, as long as the range is less than or equal to 4 MB in size.
    fullName: rangeGetContentMD5
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rangeGetContentMD5?: boolean'
      return:
        description: ''
        type: boolean
  - name: tracingOptions
    uid: '@azure/storage-file-share.FileDownloadOptions.tracingOptions|beta'
    package: '@azure/storage-file-share|beta'
    summary: ''
    fullName: tracingOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tracingOptions?: OperationTracingOptions'
      return:
        description: ''
        type: OperationTracingOptions
extends: <xref uid="@azure/storage-file-share.CommonOptions|beta" />
