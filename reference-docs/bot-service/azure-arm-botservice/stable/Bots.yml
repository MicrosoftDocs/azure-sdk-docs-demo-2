### YamlMime:TSType
name: Bots
uid: '@azure/arm-botservice.Bots|stable'
package: '@azure/arm-botservice|stable'
summary: Class representing a Bots.
fullName: Bots
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Bots(AzureBotServiceContext)
    uid: '@azure/arm-botservice.Bots.constructor|stable'
    package: '@azure/arm-botservice|stable'
    summary: Create a Bots.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Bots(client: AzureBotServiceContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-botservice.AzureBotServiceContext|stable" />
          description: |
            Reference to the service client.
methods:
  - name: create(string, string, Bot, msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Bots.create|stable'
    package: '@azure/arm-botservice|stable'
    summary: Creates a Bot Service. Bot Service is a resource group wide resource type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, resourceName: string,
        parameters: Bot, options?: msRest.RequestOptionsBase):
        Promise<Models.BotsCreateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: parameters
          type: <xref uid="@azure/arm-botservice.Bot|stable" />
          description: The parameters to provide for the created bot.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.BotsCreateResponse>
        type: >-
          Promise&lt;<xref uid="@azure/arm-botservice.BotsCreateResponse|stable"
          />&gt;
  - name: create(string, string, Bot, RequestOptionsBase, ServiceCallback<Bot>)
    uid: '@azure/arm-botservice.Bots.create_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, resourceName: string,
        parameters: Bot, options: RequestOptionsBase, callback:
        ServiceCallback<Bot>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: parameters
          type: <xref uid="@azure/arm-botservice.Bot|stable" />
          description: The parameters to provide for the created bot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-botservice.Bot|stable"
            />&gt;
          description: |
            The callback
  - name: create(string, string, Bot, ServiceCallback<Bot>)
    uid: '@azure/arm-botservice.Bots.create_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, resourceName: string,
        parameters: Bot, callback: ServiceCallback<Bot>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: parameters
          type: <xref uid="@azure/arm-botservice.Bot|stable" />
          description: The parameters to provide for the created bot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-botservice.Bot|stable"
            />&gt;
          description: |
            The callback
  - name: deleteMethod(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Bots.deleteMethod|stable'
    package: '@azure/arm-botservice|stable'
    summary: Deletes a Bot Service from the resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, resourceName: string,
        options?: msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-botservice.Bots.deleteMethod_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, resourceName: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: deleteMethod(string, string, ServiceCallback<void>)
    uid: '@azure/arm-botservice.Bots.deleteMethod_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, resourceName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: get(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Bots.get|stable'
    package: '@azure/arm-botservice|stable'
    summary: Returns a BotService specified by the parameters.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string, options?:
        msRest.RequestOptionsBase): Promise<Models.BotsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.BotsGetResponse>
        type: >-
          Promise&lt;<xref uid="@azure/arm-botservice.BotsGetResponse|stable"
          />&gt;
  - name: get(string, string, RequestOptionsBase, ServiceCallback<Bot>)
    uid: '@azure/arm-botservice.Bots.get_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Bot>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-botservice.Bot|stable"
            />&gt;
          description: |
            The callback
  - name: get(string, string, ServiceCallback<Bot>)
    uid: '@azure/arm-botservice.Bots.get_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string, callback:
        ServiceCallback<Bot>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-botservice.Bot|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      getCheckNameAvailability(CheckNameAvailabilityRequestBody,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Bots.getCheckNameAvailability|stable'
    package: '@azure/arm-botservice|stable'
    summary: Check whether a bot name is available.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCheckNameAvailability(parameters:
        CheckNameAvailabilityRequestBody, options?: msRest.RequestOptionsBase):
        Promise<Models.BotsGetCheckNameAvailabilityResponse>
      parameters:
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-botservice.CheckNameAvailabilityRequestBody|stable"
            />
          description: >-
            The request body parameters to provide for the check name
            availability request
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.BotsGetCheckNameAvailabilityResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-botservice.BotsGetCheckNameAvailabilityResponse|stable"
          />&gt;
  - name: >-
      getCheckNameAvailability(CheckNameAvailabilityRequestBody,
      RequestOptionsBase, ServiceCallback<CheckNameAvailabilityResponseBody>)
    uid: '@azure/arm-botservice.Bots.getCheckNameAvailability_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCheckNameAvailability(parameters:
        CheckNameAvailabilityRequestBody, options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityResponseBody>)
      parameters:
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-botservice.CheckNameAvailabilityRequestBody|stable"
            />
          description: >-
            The request body parameters to provide for the check name
            availability request
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.CheckNameAvailabilityResponseBody|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      getCheckNameAvailability(CheckNameAvailabilityRequestBody,
      ServiceCallback<CheckNameAvailabilityResponseBody>)
    uid: '@azure/arm-botservice.Bots.getCheckNameAvailability_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCheckNameAvailability(parameters:
        CheckNameAvailabilityRequestBody, callback:
        ServiceCallback<CheckNameAvailabilityResponseBody>)
      parameters:
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-botservice.CheckNameAvailabilityRequestBody|stable"
            />
          description: >-
            The request body parameters to provide for the check name
            availability request
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.CheckNameAvailabilityResponseBody|stable"
            />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Bots.list|stable'
    package: '@azure/arm-botservice|stable'
    summary: >-
      Returns all the resources of a particular type belonging to a
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: msRest.RequestOptionsBase):
        Promise<Models.BotsListResponse>
      parameters:
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.BotsListResponse>
        type: >-
          Promise&lt;<xref uid="@azure/arm-botservice.BotsListResponse|stable"
          />&gt;
  - name: list(RequestOptionsBase, ServiceCallback<BotResponseList>)
    uid: '@azure/arm-botservice.Bots.list_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<BotResponseList>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotResponseList|stable" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<BotResponseList>)
    uid: '@azure/arm-botservice.Bots.list_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<BotResponseList>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotResponseList|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroup(string, msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Bots.listByResourceGroup|stable'
    package: '@azure/arm-botservice|stable'
    summary: >-
      Returns all the resources of a particular type belonging to a resource
      group
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.BotsListByResourceGroupResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.BotsListByResourceGroupResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-botservice.BotsListByResourceGroupResponse|stable"
          />&gt;
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<BotResponseList>)
    uid: '@azure/arm-botservice.Bots.listByResourceGroup_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<BotResponseList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotResponseList|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroup(string, ServiceCallback<BotResponseList>)
    uid: '@azure/arm-botservice.Bots.listByResourceGroup_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<BotResponseList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotResponseList|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroupNext(string, msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Bots.listByResourceGroupNext|stable'
    package: '@azure/arm-botservice|stable'
    summary: >-
      Returns all the resources of a particular type belonging to a resource
      group
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.BotsListByResourceGroupNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.BotsListByResourceGroupNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-botservice.BotsListByResourceGroupNextResponse|stable"
          />&gt;
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<BotResponseList>)
    uid: '@azure/arm-botservice.Bots.listByResourceGroupNext_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<BotResponseList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotResponseList|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroupNext(string, ServiceCallback<BotResponseList>)
    uid: '@azure/arm-botservice.Bots.listByResourceGroupNext_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<BotResponseList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotResponseList|stable" />&gt;
          description: |
            The callback
  - name: listNext(string, msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Bots.listNext|stable'
    package: '@azure/arm-botservice|stable'
    summary: >-
      Returns all the resources of a particular type belonging to a
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase): Promise<Models.BotsListNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.BotsListNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-botservice.BotsListNextResponse|stable" />&gt;
  - name: listNext(string, RequestOptionsBase, ServiceCallback<BotResponseList>)
    uid: '@azure/arm-botservice.Bots.listNext_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<BotResponseList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotResponseList|stable" />&gt;
          description: |
            The callback
  - name: listNext(string, ServiceCallback<BotResponseList>)
    uid: '@azure/arm-botservice.Bots.listNext_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<BotResponseList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotResponseList|stable" />&gt;
          description: |
            The callback
  - name: update(string, string, BotsUpdateOptionalParams, ServiceCallback<Bot>)
    uid: '@azure/arm-botservice.Bots.update_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, resourceName: string,
        options: BotsUpdateOptionalParams, callback: ServiceCallback<Bot>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: <xref uid="@azure/arm-botservice.BotsUpdateOptionalParams|stable" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-botservice.Bot|stable"
            />&gt;
          description: |
            The callback
  - name: update(string, string, Models.BotsUpdateOptionalParams)
    uid: '@azure/arm-botservice.Bots.update|stable'
    package: '@azure/arm-botservice|stable'
    summary: Updates a Bot Service
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, resourceName: string,
        options?: Models.BotsUpdateOptionalParams):
        Promise<Models.BotsUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: <xref uid="@azure/arm-botservice.BotsUpdateOptionalParams|stable" />
          description: ''
      return:
        description: Promise<Models.BotsUpdateResponse>
        type: >-
          Promise&lt;<xref uid="@azure/arm-botservice.BotsUpdateResponse|stable"
          />&gt;
  - name: update(string, string, ServiceCallback<Bot>)
    uid: '@azure/arm-botservice.Bots.update_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, resourceName: string,
        callback: ServiceCallback<Bot>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-botservice.Bot|stable"
            />&gt;
          description: |
            The callback
