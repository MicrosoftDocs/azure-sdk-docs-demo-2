### YamlMime:TSType
name: Channels
uid: '@azure/arm-botservice.Channels|stable'
package: '@azure/arm-botservice|stable'
summary: Class representing a Channels.
fullName: Channels
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Channels(AzureBotServiceContext)
    uid: '@azure/arm-botservice.Channels.constructor|stable'
    package: '@azure/arm-botservice|stable'
    summary: Create a Channels.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Channels(client: AzureBotServiceContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-botservice.AzureBotServiceContext|stable" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      create(string, string, Models.ChannelName, BotChannel,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Channels.create|stable'
    package: '@azure/arm-botservice|stable'
    summary: Creates a Channel registration for a Bot Service
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, resourceName: string,
        channelName: Models.ChannelName, parameters: BotChannel, options?:
        msRest.RequestOptionsBase): Promise<Models.ChannelsCreateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: <xref uid="@azure/arm-botservice.ChannelName|stable" />
          description: >-
            The name of the Channel resource. Possible values include:
            'AlexaChannel',

            'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel',
            'SlackChannel',

            'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel',
            'DirectLineChannel', 'SmsChannel',

            'LineChannel', 'DirectLineSpeechChannel'
        - id: parameters
          type: <xref uid="@azure/arm-botservice.BotChannel|stable" />
          description: The parameters to provide for the created bot.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.ChannelsCreateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-botservice.ChannelsCreateResponse|stable" />&gt;
  - name: >-
      create(string, string, Models.ChannelName, BotChannel, RequestOptionsBase,
      ServiceCallback<BotChannel>)
    uid: '@azure/arm-botservice.Channels.create_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, resourceName: string,
        channelName: Models.ChannelName, parameters: BotChannel, options:
        RequestOptionsBase, callback: ServiceCallback<BotChannel>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: <xref uid="@azure/arm-botservice.ChannelName|stable" />
          description: >-
            The name of the Channel resource. Possible values include:
            'AlexaChannel',

            'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel',
            'SlackChannel',

            'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel',
            'DirectLineChannel', 'SmsChannel',

            'LineChannel', 'DirectLineSpeechChannel'
        - id: parameters
          type: <xref uid="@azure/arm-botservice.BotChannel|stable" />
          description: The parameters to provide for the created bot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotChannel|stable" />&gt;
          description: |
            The callback
  - name: >-
      create(string, string, Models.ChannelName, BotChannel,
      ServiceCallback<BotChannel>)
    uid: '@azure/arm-botservice.Channels.create_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, resourceName: string,
        channelName: Models.ChannelName, parameters: BotChannel, callback:
        ServiceCallback<BotChannel>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: <xref uid="@azure/arm-botservice.ChannelName|stable" />
          description: >-
            The name of the Channel resource. Possible values include:
            'AlexaChannel',

            'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel',
            'SlackChannel',

            'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel',
            'DirectLineChannel', 'SmsChannel',

            'LineChannel', 'DirectLineSpeechChannel'
        - id: parameters
          type: <xref uid="@azure/arm-botservice.BotChannel|stable" />
          description: The parameters to provide for the created bot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotChannel|stable" />&gt;
          description: |
            The callback
  - name: deleteMethod(string, string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Channels.deleteMethod|stable'
    package: '@azure/arm-botservice|stable'
    summary: Deletes a Channel registration from a Bot Service
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, resourceName: string,
        channelName: string, options?: msRest.RequestOptionsBase):
        Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: >-
      deleteMethod(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-botservice.Channels.deleteMethod_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, resourceName: string,
        channelName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: deleteMethod(string, string, string, ServiceCallback<void>)
    uid: '@azure/arm-botservice.Channels.deleteMethod_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, resourceName: string,
        channelName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: string
          description: The name of the Bot resource.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: get(string, string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Channels.get|stable'
    package: '@azure/arm-botservice|stable'
    summary: Returns a BotService Channel registration specified by the parameters.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string,
        channelName: string, options?: msRest.RequestOptionsBase):
        Promise<Models.ChannelsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.ChannelsGetResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-botservice.ChannelsGetResponse|stable" />&gt;
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<BotChannel>)
    uid: '@azure/arm-botservice.Channels.get_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string,
        channelName: string, options: RequestOptionsBase, callback:
        ServiceCallback<BotChannel>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotChannel|stable" />&gt;
          description: |
            The callback
  - name: get(string, string, string, ServiceCallback<BotChannel>)
    uid: '@azure/arm-botservice.Channels.get_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string,
        channelName: string, callback: ServiceCallback<BotChannel>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: string
          description: The name of the Bot resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotChannel|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroup(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Channels.listByResourceGroup|stable'
    package: '@azure/arm-botservice|stable'
    summary: Returns all the Channel registrations of a particular BotService resource
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, resourceName:
        string, options?: msRest.RequestOptionsBase):
        Promise<Models.ChannelsListByResourceGroupResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.ChannelsListByResourceGroupResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-botservice.ChannelsListByResourceGroupResponse|stable"
          />&gt;
  - name: >-
      listByResourceGroup(string, string, RequestOptionsBase,
      ServiceCallback<ChannelResponseList>)
    uid: '@azure/arm-botservice.Channels.listByResourceGroup_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, resourceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ChannelResponseList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.ChannelResponseList|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroup(string, string, ServiceCallback<ChannelResponseList>)
    uid: '@azure/arm-botservice.Channels.listByResourceGroup_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, resourceName:
        string, callback: ServiceCallback<ChannelResponseList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.ChannelResponseList|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroupNext(string, msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Channels.listByResourceGroupNext|stable'
    package: '@azure/arm-botservice|stable'
    summary: Returns all the Channel registrations of a particular BotService resource
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ChannelsListByResourceGroupNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.ChannelsListByResourceGroupNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-botservice.ChannelsListByResourceGroupNextResponse|stable"
          />&gt;
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ChannelResponseList>)
    uid: '@azure/arm-botservice.Channels.listByResourceGroupNext_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ChannelResponseList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.ChannelResponseList|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroupNext(string, ServiceCallback<ChannelResponseList>)
    uid: '@azure/arm-botservice.Channels.listByResourceGroupNext_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ChannelResponseList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.ChannelResponseList|stable" />&gt;
          description: |
            The callback
  - name: >-
      listWithKeys(string, string, Models.ChannelName,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-botservice.Channels.listWithKeys|stable'
    package: '@azure/arm-botservice|stable'
    summary: Lists a Channel registration for a Bot Service including secrets
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWithKeys(resourceGroupName: string, resourceName: string,
        channelName: Models.ChannelName, options?: msRest.RequestOptionsBase):
        Promise<Models.ChannelsListWithKeysResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: <xref uid="@azure/arm-botservice.ChannelName|stable" />
          description: >-
            The name of the Channel resource. Possible values include:
            'AlexaChannel',

            'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel',
            'SlackChannel',

            'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel',
            'DirectLineChannel', 'SmsChannel',

            'LineChannel', 'DirectLineSpeechChannel'
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.ChannelsListWithKeysResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-botservice.ChannelsListWithKeysResponse|stable" />&gt;
  - name: >-
      listWithKeys(string, string, Models.ChannelName, RequestOptionsBase,
      ServiceCallback<BotChannel>)
    uid: '@azure/arm-botservice.Channels.listWithKeys_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWithKeys(resourceGroupName: string, resourceName: string,
        channelName: Models.ChannelName, options: RequestOptionsBase, callback:
        ServiceCallback<BotChannel>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: <xref uid="@azure/arm-botservice.ChannelName|stable" />
          description: >-
            The name of the Channel resource. Possible values include:
            'AlexaChannel',

            'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel',
            'SlackChannel',

            'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel',
            'DirectLineChannel', 'SmsChannel',

            'LineChannel', 'DirectLineSpeechChannel'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotChannel|stable" />&gt;
          description: |
            The callback
  - name: >-
      listWithKeys(string, string, Models.ChannelName,
      ServiceCallback<BotChannel>)
    uid: '@azure/arm-botservice.Channels.listWithKeys_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWithKeys(resourceGroupName: string, resourceName: string,
        channelName: Models.ChannelName, callback: ServiceCallback<BotChannel>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: <xref uid="@azure/arm-botservice.ChannelName|stable" />
          description: >-
            The name of the Channel resource. Possible values include:
            'AlexaChannel',

            'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel',
            'SlackChannel',

            'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel',
            'DirectLineChannel', 'SmsChannel',

            'LineChannel', 'DirectLineSpeechChannel'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotChannel|stable" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, Models.ChannelName, ChannelsUpdateOptionalParams,
      ServiceCallback<BotChannel>)
    uid: '@azure/arm-botservice.Channels.update_2|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, resourceName: string,
        channelName: Models.ChannelName, options: ChannelsUpdateOptionalParams,
        callback: ServiceCallback<BotChannel>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: <xref uid="@azure/arm-botservice.ChannelName|stable" />
          description: >-
            The name of the Channel resource. Possible values include:
            'AlexaChannel',

            'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel',
            'SlackChannel',

            'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel',
            'DirectLineChannel', 'SmsChannel',

            'LineChannel', 'DirectLineSpeechChannel'
        - id: options
          type: >-
            <xref
            uid="@azure/arm-botservice.ChannelsUpdateOptionalParams|stable" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotChannel|stable" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, Models.ChannelName,
      Models.ChannelsUpdateOptionalParams)
    uid: '@azure/arm-botservice.Channels.update|stable'
    package: '@azure/arm-botservice|stable'
    summary: Updates a Channel registration for a Bot Service
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, resourceName: string,
        channelName: Models.ChannelName, options?:
        Models.ChannelsUpdateOptionalParams):
        Promise<Models.ChannelsUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: <xref uid="@azure/arm-botservice.ChannelName|stable" />
          description: >-
            The name of the Channel resource. Possible values include:
            'AlexaChannel',

            'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel',
            'SlackChannel',

            'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel',
            'DirectLineChannel', 'SmsChannel',

            'LineChannel', 'DirectLineSpeechChannel'
        - id: options
          type: >-
            <xref
            uid="@azure/arm-botservice.ChannelsUpdateOptionalParams|stable" />
          description: ''
      return:
        description: Promise<Models.ChannelsUpdateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-botservice.ChannelsUpdateResponse|stable" />&gt;
  - name: update(string, string, Models.ChannelName, ServiceCallback<BotChannel>)
    uid: '@azure/arm-botservice.Channels.update_1|stable'
    package: '@azure/arm-botservice|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, resourceName: string,
        channelName: Models.ChannelName, callback: ServiceCallback<BotChannel>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Bot resource group in the user subscription.
        - id: resourceName
          type: string
          description: The name of the Bot resource.
        - id: channelName
          type: <xref uid="@azure/arm-botservice.ChannelName|stable" />
          description: >-
            The name of the Channel resource. Possible values include:
            'AlexaChannel',

            'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel',
            'SlackChannel',

            'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel',
            'DirectLineChannel', 'SmsChannel',

            'LineChannel', 'DirectLineSpeechChannel'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-botservice.BotChannel|stable" />&gt;
          description: |
            The callback
