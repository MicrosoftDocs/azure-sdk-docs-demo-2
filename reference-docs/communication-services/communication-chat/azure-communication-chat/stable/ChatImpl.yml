### YamlMime:TSType
name: ChatImpl
uid: '@azure/communication-chat.ChatImpl|stable'
package: '@azure/communication-chat|stable'
summary: Class containing Chat operations.
fullName: ChatImpl
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ChatImpl(ChatApiClientContext)
    uid: '@azure/communication-chat.ChatImpl.constructor|stable'
    package: '@azure/communication-chat|stable'
    summary: Initialize a new instance of the class Chat class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ChatImpl(client: ChatApiClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/communication-chat.ChatApiClientContext|stable" />
          description: |
            Reference to the service client
methods:
  - name: >-
      createChatThread(CreateChatThreadRequest,
      ChatCreateChatThreadOptionalParams)
    uid: '@azure/communication-chat.ChatImpl.createChatThread|stable'
    package: '@azure/communication-chat|stable'
    summary: Creates a chat thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createChatThread(createChatThreadRequest:
        CreateChatThreadRequest, options?: ChatCreateChatThreadOptionalParams):
        Promise<ChatCreateChatThreadResponse>
      parameters:
        - id: createChatThreadRequest
          type: >-
            <xref uid="@azure/communication-chat.CreateChatThreadRequest|stable"
            />
          description: Request payload for creating a chat thread.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatCreateChatThreadOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatCreateChatThreadResponse|stable"
          />&gt;
  - name: deleteChatThread(string, ChatDeleteChatThreadOptionalParams)
    uid: '@azure/communication-chat.ChatImpl.deleteChatThread|stable'
    package: '@azure/communication-chat|stable'
    summary: Deletes a thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteChatThread(chatThreadId: string, options?:
        ChatDeleteChatThreadOptionalParams): Promise<void>
      parameters:
        - id: chatThreadId
          type: string
          description: Id of the thread to be deleted.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatDeleteChatThreadOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: listChatThreads(ChatListChatThreadsOptionalParams)
    uid: '@azure/communication-chat.ChatImpl.listChatThreads|stable'
    package: '@azure/communication-chat|stable'
    summary: Gets the list of chat threads of a user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listChatThreads(options?: ChatListChatThreadsOptionalParams):
        Promise<ChatListChatThreadsResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatListChatThreadsOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatListChatThreadsResponse|stable"
          />&gt;
  - name: listChatThreadsNext(string, ChatListChatThreadsNextOptionalParams)
    uid: '@azure/communication-chat.ChatImpl.listChatThreadsNext|stable'
    package: '@azure/communication-chat|stable'
    summary: ListChatThreadsNext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listChatThreadsNext(nextLink: string, options?:
        ChatListChatThreadsNextOptionalParams):
        Promise<ChatListChatThreadsNextResponse>
      parameters:
        - id: nextLink
          type: string
          description: >-
            The nextLink from the previous successful call to the
            ListChatThreads method.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatListChatThreadsNextOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatListChatThreadsNextResponse|stable"
          />&gt;
