### YamlMime:TSType
name: ChatThread
uid: '@azure/communication-chat.ChatThread|stable'
package: '@azure/communication-chat|stable'
summary: Interface representing a ChatThread.
fullName: ChatThread
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      addChatParticipants(string, AddChatParticipantsRequest,
      ChatThreadAddChatParticipantsOptionalParams)
    uid: '@azure/communication-chat.ChatThread.addChatParticipants|stable'
    package: '@azure/communication-chat|stable'
    summary: >-
      Adds thread participants to a thread. If participants already exist, no
      change occurs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addChatParticipants(chatThreadId: string,
        addChatParticipantsRequest: AddChatParticipantsRequest, options?:
        ChatThreadAddChatParticipantsOptionalParams):
        Promise<ChatThreadAddChatParticipantsResponse>
      parameters:
        - id: chatThreadId
          type: string
          description: Id of the thread to add participants to.
        - id: addChatParticipantsRequest
          type: >-
            <xref
            uid="@azure/communication-chat.AddChatParticipantsRequest|stable" />
          description: Thread participants to be added to the thread.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadAddChatParticipantsOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatThreadAddChatParticipantsResponse|stable"
          />&gt;
  - name: >-
      deleteChatMessage(string, string,
      ChatThreadDeleteChatMessageOptionalParams)
    uid: '@azure/communication-chat.ChatThread.deleteChatMessage|stable'
    package: '@azure/communication-chat|stable'
    summary: Deletes a message.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteChatMessage(chatThreadId: string, chatMessageId: string,
        options?: ChatThreadDeleteChatMessageOptionalParams): Promise<void>
      parameters:
        - id: chatThreadId
          type: string
          description: The thread id to which the message was sent.
        - id: chatMessageId
          type: string
          description: The message id.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadDeleteChatMessageOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: getChatMessage(string, string, ChatThreadGetChatMessageOptionalParams)
    uid: '@azure/communication-chat.ChatThread.getChatMessage|stable'
    package: '@azure/communication-chat|stable'
    summary: Gets a message by id.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getChatMessage(chatThreadId: string, chatMessageId: string,
        options?: ChatThreadGetChatMessageOptionalParams):
        Promise<ChatThreadGetChatMessageResponse>
      parameters:
        - id: chatThreadId
          type: string
          description: The thread id to which the message was sent.
        - id: chatMessageId
          type: string
          description: The message id.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadGetChatMessageOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatThreadGetChatMessageResponse|stable"
          />&gt;
  - name: >-
      getChatThreadProperties(string,
      ChatThreadGetChatThreadPropertiesOptionalParams)
    uid: '@azure/communication-chat.ChatThread.getChatThreadProperties|stable'
    package: '@azure/communication-chat|stable'
    summary: Gets a chat thread's properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getChatThreadProperties(chatThreadId: string, options?:
        ChatThreadGetChatThreadPropertiesOptionalParams):
        Promise<ChatThreadGetChatThreadPropertiesResponse>
      parameters:
        - id: chatThreadId
          type: string
          description: Id of the thread.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadGetChatThreadPropertiesOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatThreadGetChatThreadPropertiesResponse|stable"
          />&gt;
  - name: listChatMessages(string, ChatThreadListChatMessagesOptionalParams)
    uid: '@azure/communication-chat.ChatThread.listChatMessages|stable'
    package: '@azure/communication-chat|stable'
    summary: Gets a list of messages from a thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listChatMessages(chatThreadId: string, options?:
        ChatThreadListChatMessagesOptionalParams):
        Promise<ChatThreadListChatMessagesResponse>
      parameters:
        - id: chatThreadId
          type: string
          description: The thread id of the message.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadListChatMessagesOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatThreadListChatMessagesResponse|stable"
          />&gt;
  - name: >-
      listChatMessagesNext(string, string,
      ChatThreadListChatMessagesNextOptionalParams)
    uid: '@azure/communication-chat.ChatThread.listChatMessagesNext|stable'
    package: '@azure/communication-chat|stable'
    summary: ListChatMessagesNext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listChatMessagesNext(chatThreadId: string, nextLink: string,
        options?: ChatThreadListChatMessagesNextOptionalParams):
        Promise<ChatThreadListChatMessagesNextResponse>
      parameters:
        - id: chatThreadId
          type: string
          description: The thread id of the message.
        - id: nextLink
          type: string
          description: >-
            The nextLink from the previous successful call to the
            ListChatMessages method.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadListChatMessagesNextOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatThreadListChatMessagesNextResponse|stable"
          />&gt;
  - name: listChatParticipants(string, ChatThreadListChatParticipantsOptionalParams)
    uid: '@azure/communication-chat.ChatThread.listChatParticipants|stable'
    package: '@azure/communication-chat|stable'
    summary: Gets the participants of a thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listChatParticipants(chatThreadId: string, options?:
        ChatThreadListChatParticipantsOptionalParams):
        Promise<ChatThreadListChatParticipantsResponse>
      parameters:
        - id: chatThreadId
          type: string
          description: Thread id to get participants for.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadListChatParticipantsOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatThreadListChatParticipantsResponse|stable"
          />&gt;
  - name: >-
      listChatParticipantsNext(string, string,
      ChatThreadListChatParticipantsNextOptionalParams)
    uid: '@azure/communication-chat.ChatThread.listChatParticipantsNext|stable'
    package: '@azure/communication-chat|stable'
    summary: ListChatParticipantsNext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listChatParticipantsNext(chatThreadId: string, nextLink:
        string, options?: ChatThreadListChatParticipantsNextOptionalParams):
        Promise<ChatThreadListChatParticipantsNextResponse>
      parameters:
        - id: chatThreadId
          type: string
          description: Thread id to get participants for.
        - id: nextLink
          type: string
          description: >-
            The nextLink from the previous successful call to the
            ListChatParticipants method.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadListChatParticipantsNextOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatThreadListChatParticipantsNextResponse|stable"
          />&gt;
  - name: listChatReadReceipts(string, ChatThreadListChatReadReceiptsOptionalParams)
    uid: '@azure/communication-chat.ChatThread.listChatReadReceipts|stable'
    package: '@azure/communication-chat|stable'
    summary: Gets chat message read receipts for a thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listChatReadReceipts(chatThreadId: string, options?:
        ChatThreadListChatReadReceiptsOptionalParams):
        Promise<ChatThreadListChatReadReceiptsResponse>
      parameters:
        - id: chatThreadId
          type: string
          description: Thread id to get the chat message read receipts for.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadListChatReadReceiptsOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatThreadListChatReadReceiptsResponse|stable"
          />&gt;
  - name: >-
      listChatReadReceiptsNext(string, string,
      ChatThreadListChatReadReceiptsNextOptionalParams)
    uid: '@azure/communication-chat.ChatThread.listChatReadReceiptsNext|stable'
    package: '@azure/communication-chat|stable'
    summary: ListChatReadReceiptsNext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listChatReadReceiptsNext(chatThreadId: string, nextLink:
        string, options?: ChatThreadListChatReadReceiptsNextOptionalParams):
        Promise<ChatThreadListChatReadReceiptsNextResponse>
      parameters:
        - id: chatThreadId
          type: string
          description: Thread id to get the chat message read receipts for.
        - id: nextLink
          type: string
          description: >-
            The nextLink from the previous successful call to the
            ListChatReadReceipts method.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadListChatReadReceiptsNextOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatThreadListChatReadReceiptsNextResponse|stable"
          />&gt;
  - name: >-
      removeChatParticipant(string, CommunicationIdentifierModel,
      ChatThreadRemoveChatParticipantOptionalParams)
    uid: '@azure/communication-chat.ChatThread.removeChatParticipant|stable'
    package: '@azure/communication-chat|stable'
    summary: Remove a participant from a thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeChatParticipant(chatThreadId: string,
        participantCommunicationIdentifier: CommunicationIdentifierModel,
        options?: ChatThreadRemoveChatParticipantOptionalParams): Promise<void>
      parameters:
        - id: chatThreadId
          type: string
          description: Thread id to remove the participant from.
        - id: participantCommunicationIdentifier
          type: >-
            <xref
            uid="@azure/communication-chat.CommunicationIdentifierModel|stable"
            />
          description: Id of the thread participant to remove from the thread.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadRemoveChatParticipantOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      sendChatMessage(string, SendChatMessageRequest,
      ChatThreadSendChatMessageOptionalParams)
    uid: '@azure/communication-chat.ChatThread.sendChatMessage|stable'
    package: '@azure/communication-chat|stable'
    summary: Sends a message to a thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendChatMessage(chatThreadId: string, sendChatMessageRequest:
        SendChatMessageRequest, options?:
        ChatThreadSendChatMessageOptionalParams):
        Promise<ChatThreadSendChatMessageResponse>
      parameters:
        - id: chatThreadId
          type: string
          description: The thread id to send the message to.
        - id: sendChatMessageRequest
          type: >-
            <xref uid="@azure/communication-chat.SendChatMessageRequest|stable"
            />
          description: Details of the message to send.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadSendChatMessageOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.ChatThreadSendChatMessageResponse|stable"
          />&gt;
  - name: >-
      sendChatReadReceipt(string, SendReadReceiptRequest,
      ChatThreadSendChatReadReceiptOptionalParams)
    uid: '@azure/communication-chat.ChatThread.sendChatReadReceipt|stable'
    package: '@azure/communication-chat|stable'
    summary: Sends a read receipt event to a thread, on behalf of a user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendChatReadReceipt(chatThreadId: string,
        sendReadReceiptRequest: SendReadReceiptRequest, options?:
        ChatThreadSendChatReadReceiptOptionalParams): Promise<void>
      parameters:
        - id: chatThreadId
          type: string
          description: Thread id to send the read receipt event to.
        - id: sendReadReceiptRequest
          type: >-
            <xref uid="@azure/communication-chat.SendReadReceiptRequest|stable"
            />
          description: Read receipt details.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadSendChatReadReceiptOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      sendTypingNotification(string,
      ChatThreadSendTypingNotificationOptionalParams)
    uid: '@azure/communication-chat.ChatThread.sendTypingNotification|stable'
    package: '@azure/communication-chat|stable'
    summary: Posts a typing event to a thread, on behalf of a user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendTypingNotification(chatThreadId: string, options?:
        ChatThreadSendTypingNotificationOptionalParams): Promise<void>
      parameters:
        - id: chatThreadId
          type: string
          description: Id of the thread.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadSendTypingNotificationOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      updateChatMessage(string, string, UpdateChatMessageRequest,
      ChatThreadUpdateChatMessageOptionalParams)
    uid: '@azure/communication-chat.ChatThread.updateChatMessage|stable'
    package: '@azure/communication-chat|stable'
    summary: Updates a message.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateChatMessage(chatThreadId: string, chatMessageId: string,
        updateChatMessageRequest: UpdateChatMessageRequest, options?:
        ChatThreadUpdateChatMessageOptionalParams): Promise<void>
      parameters:
        - id: chatThreadId
          type: string
          description: The thread id to which the message was sent.
        - id: chatMessageId
          type: string
          description: The message id.
        - id: updateChatMessageRequest
          type: >-
            <xref
            uid="@azure/communication-chat.UpdateChatMessageRequest|stable" />
          description: Details of the request to update the message.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadUpdateChatMessageOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      updateChatThreadProperties(string, UpdateChatThreadRequest,
      ChatThreadUpdateChatThreadPropertiesOptionalParams)
    uid: '@azure/communication-chat.ChatThread.updateChatThreadProperties|stable'
    package: '@azure/communication-chat|stable'
    summary: Updates a thread's properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateChatThreadProperties(chatThreadId: string,
        updateChatThreadRequest: UpdateChatThreadRequest, options?:
        ChatThreadUpdateChatThreadPropertiesOptionalParams): Promise<void>
      parameters:
        - id: chatThreadId
          type: string
          description: The id of the thread to update.
        - id: updateChatThreadRequest
          type: >-
            <xref uid="@azure/communication-chat.UpdateChatThreadRequest|stable"
            />
          description: Request payload for updating a chat thread.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-chat.ChatThreadUpdateChatThreadPropertiesOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
