### YamlMime:TSType
name: WebPubSubServiceClient
uid: '@azure/web-pubsub.WebPubSubServiceClient|stable'
package: '@azure/web-pubsub|stable'
summary: Client for connecting to a Web PubSub hub
fullName: WebPubSubServiceClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      WebPubSubServiceClient(string, AzureKeyCredential | TokenCredential,
      string, WebPubSubServiceClientOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.constructor_1|stable'
    package: '@azure/web-pubsub|stable'
    summary: >
      Creates an instance of a WebPubSubServiceClient for sending messages and
      managing groups, connections, and users.

      Example usage:

      ```ts

      import { WebPubSubServiceClient, AzureKeyCredential } from
      "@azure/web-pubsub";

      const cred = new AzureKeyCredential("<your web pubsub api key>");

      const endpoint = "https://xxxx.webpubsubdev.azure.com"

      const client = new WebPubSubServiceClient(endpoint, cred, 'chat');

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new WebPubSubServiceClient(endpoint: string, credential:
        AzureKeyCredential | TokenCredential, hubName: string, options?:
        WebPubSubServiceClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: The endpoint to connect to
        - id: credential
          type: AzureKeyCredential | TokenCredential
          description: An AzureKeyCredential holding your service key
        - id: hubName
          type: string
          description: The name of the hub to connect to. If omitted, '_default' is used.
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.WebPubSubServiceClientOptions|stable"
            />
          description: |
            Options to configure the http pipeline
  - name: WebPubSubServiceClient(string, string, WebPubSubServiceClientOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.constructor|stable'
    package: '@azure/web-pubsub|stable'
    summary: >
      Creates an instance of a WebPubSubServiceClient for sending messages and
      managing groups, connections, and users.

      Example usage:

      ```ts

      import { WebPubSubServiceClient } from "@azure/web-pubsub";

      const connectionString = process.env['WEB_PUBSUB_CONNECTION_STRING'];

      const client = new WebPubSubServiceClient(connectionString, 'chat');

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new WebPubSubServiceClient(connectionString: string, hubName: string,
        options?: WebPubSubServiceClientOptions)
      parameters:
        - id: connectionString
          type: string
          description: The connection string
        - id: hubName
          type: string
          description: The name of the hub to connect to. If omitted, '_default' is used.
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.WebPubSubServiceClientOptions|stable"
            />
          description: |
            Options to configure the http pipeline
properties:
  - name: apiVersion
    uid: '@azure/web-pubsub.WebPubSubServiceClient.apiVersion|stable'
    package: '@azure/web-pubsub|stable'
    summary: The Web PubSub API version being used by this client
    fullName: apiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion: string'
      return:
        description: ''
        type: string
  - name: endpoint
    uid: '@azure/web-pubsub.WebPubSubServiceClient.endpoint|stable'
    package: '@azure/web-pubsub|stable'
    summary: The Web PubSub endpoint this client is connected to
    fullName: endpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        description: ''
        type: string
  - name: hubName
    uid: '@azure/web-pubsub.WebPubSubServiceClient.hubName|stable'
    package: '@azure/web-pubsub|stable'
    summary: The name of the hub this client is connected to
    fullName: hubName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hubName: string'
      return:
        description: ''
        type: string
methods:
  - name: closeAllConnections(HubCloseAllConnectionsOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.closeAllConnections|stable'
    package: '@azure/web-pubsub|stable'
    summary: Close all connections to this hub
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function closeAllConnections(options?: HubCloseAllConnectionsOptions):
        Promise<void>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.HubCloseAllConnectionsOptions|stable"
            />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: closeConnection(string, HubCloseConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.closeConnection|stable'
    package: '@azure/web-pubsub|stable'
    summary: Close a specific connection to this hub
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function closeConnection(connectionId: string, options?:
        HubCloseConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: Connection id to close
        - id: options
          type: <xref uid="@azure/web-pubsub.HubCloseConnectionOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: closeUserConnections(string, HubCloseUserConnectionsOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.closeUserConnections|stable'
    package: '@azure/web-pubsub|stable'
    summary: Close all connections with the given user id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function closeUserConnections(userId: string, options?:
        HubCloseUserConnectionsOptions): Promise<void>
      parameters:
        - id: userId
          type: string
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.HubCloseUserConnectionsOptions|stable"
            />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: connectionExists(string, HasConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.connectionExists|stable'
    package: '@azure/web-pubsub|stable'
    summary: Check if a specific connection is connected to this hub
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function connectionExists(connectionId: string, options?:
        HasConnectionOptions): Promise<boolean>
      parameters:
        - id: connectionId
          type: string
          description: Connection id to check
        - id: options
          type: <xref uid="@azure/web-pubsub.HasConnectionOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;boolean&gt;
  - name: getClientAccessToken(GenerateClientTokenOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.getClientAccessToken|stable'
    package: '@azure/web-pubsub|stable'
    summary: Generate a token for a client to connect to the Azure Web PubSub service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getClientAccessToken(options?: GenerateClientTokenOptions):
        Promise<ClientTokenResponse>
      parameters:
        - id: options
          type: <xref uid="@azure/web-pubsub.GenerateClientTokenOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/web-pubsub.ClientTokenResponse|stable"
          />&gt;
  - name: grantPermission(string, Permission, HubGrantPermissionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.grantPermission|stable'
    package: '@azure/web-pubsub|stable'
    summary: Grant permissions to a connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function grantPermission(connectionId: string, permission: Permission,
        options?: HubGrantPermissionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: The connection id to grant permissions to
        - id: permission
          type: <xref uid="@azure/web-pubsub.Permission|stable" />
          description: ''
        - id: options
          type: <xref uid="@azure/web-pubsub.HubGrantPermissionOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: group(string)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.group|stable'
    package: '@azure/web-pubsub|stable'
    summary: Get a client for a group
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function group(groupName: string): WebPubSubGroup'
      parameters:
        - id: groupName
          type: string
          description: |
            The name of the group to connect to.
      return:
        description: ''
        type: <xref uid="@azure/web-pubsub.WebPubSubGroup|stable" />
  - name: groupExists(string, HubHasGroupOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.groupExists|stable'
    package: '@azure/web-pubsub|stable'
    summary: Check if a particular group exists (i.e. has active connections).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function groupExists(groupName: string, options?: HubHasGroupOptions):
        Promise<boolean>
      parameters:
        - id: groupName
          type: string
          description: The group name to check for
        - id: options
          type: <xref uid="@azure/web-pubsub.HubHasGroupOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;boolean&gt;
  - name: hasPermission(string, Permission, HubHasPermissionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.hasPermission|stable'
    package: '@azure/web-pubsub|stable'
    summary: Check if the connection has the specified permission
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function hasPermission(connectionId: string, permission: Permission,
        options?: HubHasPermissionOptions): Promise<boolean>
      parameters:
        - id: connectionId
          type: string
          description: The connection id to check permission
        - id: permission
          type: <xref uid="@azure/web-pubsub.Permission|stable" />
          description: ''
        - id: options
          type: <xref uid="@azure/web-pubsub.HubHasPermissionOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;boolean&gt;
  - name: removeUserFromAllGroups(string, HubCloseConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.removeUserFromAllGroups|stable'
    package: '@azure/web-pubsub|stable'
    summary: Remove a specific user from all groups they are joined to
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeUserFromAllGroups(userId: string, options?:
        HubCloseConnectionOptions): Promise<void>
      parameters:
        - id: userId
          type: string
          description: The user id to remove from all groups
        - id: options
          type: <xref uid="@azure/web-pubsub.HubCloseConnectionOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: revokePermission(string, Permission, HubRevokePermissionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.revokePermission|stable'
    package: '@azure/web-pubsub|stable'
    summary: Revoke permissions from a connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function revokePermission(connectionId: string, permission: Permission,
        options?: HubRevokePermissionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: The connection id to revoke permissions from
        - id: permission
          type: <xref uid="@azure/web-pubsub.Permission|stable" />
          description: ''
        - id: options
          type: <xref uid="@azure/web-pubsub.HubRevokePermissionOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToAll(JSONTypes, HubSendToAllOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToAll_1|stable'
    package: '@azure/web-pubsub|stable'
    summary: Broadcast a JSON message to all connections on this hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToAll(message: JSONTypes, options?: HubSendToAllOptions):
        Promise<void>
      parameters:
        - id: message
          type: <xref uid="@azure/web-pubsub.JSONTypes|stable" />
          description: The JSON message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToAllOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToAll(RequestBodyType, HubSendToAllOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToAll_2|stable'
    package: '@azure/web-pubsub|stable'
    summary: Broadcast a binary message to all connections on this hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToAll(message: RequestBodyType, options?:
        HubSendToAllOptions): Promise<void>
      parameters:
        - id: message
          type: RequestBodyType
          description: The message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToAllOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToAll(string, HubSendTextToAllOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToAll|stable'
    package: '@azure/web-pubsub|stable'
    summary: Broadcast a text message to all connections on this hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToAll(message: string, options: HubSendTextToAllOptions):
        Promise<void>
      parameters:
        - id: message
          type: string
          description: The text message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendTextToAllOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToConnection(string, JSONTypes, HubSendToConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToConnection_1|stable'
    package: '@azure/web-pubsub|stable'
    summary: Send a binary message to a specific connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToConnection(connectionId: string, message: JSONTypes,
        options?: HubSendToConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: Connection id to send to
        - id: message
          type: <xref uid="@azure/web-pubsub.JSONTypes|stable" />
          description: The JSON message
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToConnectionOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      sendToConnection(string, RequestBodyType, HubSendToConnectionOptions |
      HubSendTextToConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToConnection_2|stable'
    package: '@azure/web-pubsub|stable'
    summary: Send a binary message to a specific connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToConnection(connectionId: string, message:
        RequestBodyType, options?: HubSendToConnectionOptions |
        HubSendTextToConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: Connection id to send to
        - id: message
          type: RequestBodyType
          description: The binary message
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.HubSendToConnectionOptions|stable" /> |
            <xref uid="@azure/web-pubsub.HubSendTextToConnectionOptions|stable"
            />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToConnection(string, string, HubSendTextToConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToConnection|stable'
    package: '@azure/web-pubsub|stable'
    summary: Send a text message to a specific connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToConnection(connectionId: string, message: string,
        options: HubSendTextToConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: Connection id to send to
        - id: message
          type: string
          description: The text message
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.HubSendTextToConnectionOptions|stable"
            />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToUser(string, JSONTypes, HubSendToUserOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToUser_1|stable'
    package: '@azure/web-pubsub|stable'
    summary: Send a JSON message to a specific user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToUser(username: string, message: JSONTypes, options?:
        HubSendToUserOptions): Promise<void>
      parameters:
        - id: username
          type: string
          description: User name to send to
        - id: message
          type: <xref uid="@azure/web-pubsub.JSONTypes|stable" />
          description: The josn message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToUserOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      sendToUser(string, RequestBodyType, HubSendToUserOptions |
      HubSendTextToUserOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToUser_2|stable'
    package: '@azure/web-pubsub|stable'
    summary: Send a binary message to a specific user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToUser(username: string, message: RequestBodyType,
        options?: HubSendToUserOptions | HubSendTextToUserOptions):
        Promise<void>
      parameters:
        - id: username
          type: string
          description: The user name to send to
        - id: message
          type: RequestBodyType
          description: The binary message to send
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.HubSendToUserOptions|stable" /> | <xref
            uid="@azure/web-pubsub.HubSendTextToUserOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToUser(string, string, HubSendTextToUserOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToUser|stable'
    package: '@azure/web-pubsub|stable'
    summary: Send a text message to a specific user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToUser(username: string, message: string, options:
        HubSendTextToUserOptions): Promise<void>
      parameters:
        - id: username
          type: string
          description: User name to send to
        - id: message
          type: string
          description: The text message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendTextToUserOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: userExists(string, HubHasUserOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.userExists|stable'
    package: '@azure/web-pubsub|stable'
    summary: Check if a particular user is connected to this hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function userExists(username: string, options?: HubHasUserOptions):
        Promise<boolean>
      parameters:
        - id: username
          type: string
          description: The user name to check for
        - id: options
          type: <xref uid="@azure/web-pubsub.HubHasUserOptions|stable" />
          description: |
            Additional options
      return:
        description: ''
        type: Promise&lt;boolean&gt;
