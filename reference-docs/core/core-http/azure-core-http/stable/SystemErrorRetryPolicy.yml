### YamlMime:TSType
name: SystemErrorRetryPolicy
uid: '@azure/core-http.SystemErrorRetryPolicy|stable'
package: '@azure/core-http|stable'
summary: ''
fullName: SystemErrorRetryPolicy
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      SystemErrorRetryPolicy(RequestPolicy, RequestPolicyOptions, number,
      number, number, number)
    uid: '@azure/core-http.SystemErrorRetryPolicy.constructor|stable'
    package: '@azure/core-http|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new SystemErrorRetryPolicy(nextPolicy: RequestPolicy, options:
        RequestPolicyOptions, retryCount?: number, retryInterval?: number,
        minRetryInterval?: number, maxRetryInterval?: number)
      parameters:
        - id: nextPolicy
          type: <xref uid="@azure/core-http.RequestPolicy|stable" />
          description: ''
        - id: options
          type: <xref uid="@azure/core-http.RequestPolicyOptions|stable" />
          description: ''
        - id: retryCount
          type: number
          description: ''
        - id: retryInterval
          type: number
          description: ''
        - id: minRetryInterval
          type: number
          description: ''
        - id: maxRetryInterval
          type: number
          description: ''
properties:
  - name: maxRetryInterval
    uid: '@azure/core-http.SystemErrorRetryPolicy.maxRetryInterval|stable'
    package: '@azure/core-http|stable'
    summary: ''
    fullName: maxRetryInterval
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxRetryInterval: number'
      return:
        description: ''
        type: number
  - name: minRetryInterval
    uid: '@azure/core-http.SystemErrorRetryPolicy.minRetryInterval|stable'
    package: '@azure/core-http|stable'
    summary: ''
    fullName: minRetryInterval
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minRetryInterval: number'
      return:
        description: ''
        type: number
  - name: retryCount
    uid: '@azure/core-http.SystemErrorRetryPolicy.retryCount|stable'
    package: '@azure/core-http|stable'
    summary: ''
    fullName: retryCount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'retryCount: number'
      return:
        description: ''
        type: number
  - name: retryInterval
    uid: '@azure/core-http.SystemErrorRetryPolicy.retryInterval|stable'
    package: '@azure/core-http|stable'
    summary: ''
    fullName: retryInterval
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'retryInterval: number'
      return:
        description: ''
        type: number
inheritedMethods:
  - name: log(HttpPipelineLogLevel, string)
    uid: '@azure/core-http.SystemErrorRetryPolicy.log'
    package: '@azure/core-http'
    summary: >-
      Attempt to log the provided message to the provided logger. If no logger
      was provided or if

      the log level does not meat the logger's threshold, then nothing will be
      logged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function log(logLevel: HttpPipelineLogLevel, message: string)'
      parameters:
        - id: logLevel
          type: <xref uid="@azure/core-http.HttpPipelineLogLevel|stable" />
          description: The log level of this log.
        - id: message
          type: string
          description: |
            The message of this log.
  - name: shouldLog(HttpPipelineLogLevel)
    uid: '@azure/core-http.SystemErrorRetryPolicy.shouldLog'
    package: '@azure/core-http'
    summary: Get whether or not a log with the provided log level should be logged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function shouldLog(logLevel: HttpPipelineLogLevel): boolean'
      parameters:
        - id: logLevel
          type: <xref uid="@azure/core-http.HttpPipelineLogLevel|stable" />
          description: The log level of the log that will be logged.
      return:
        description: Whether or not a log with the provided log level should be logged.
        type: boolean
methods:
  - name: sendRequest(WebResourceLike)
    uid: '@azure/core-http.SystemErrorRetryPolicy.sendRequest|stable'
    package: '@azure/core-http|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest(request: WebResourceLike):
        Promise<HttpOperationResponse>
      parameters:
        - id: request
          type: <xref uid="@azure/core-http.WebResourceLike|stable" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-http.HttpOperationResponse|stable"
          />&gt;
extends: <xref uid="@azure/core-http.BaseRequestPolicy|stable" />
