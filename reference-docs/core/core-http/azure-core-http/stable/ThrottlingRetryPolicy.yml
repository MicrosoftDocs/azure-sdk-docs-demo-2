### YamlMime:TSType
name: ThrottlingRetryPolicy
uid: '@azure/core-http.ThrottlingRetryPolicy|stable'
package: '@azure/core-http|stable'
summary: >-
  To learn more, please refer to

  https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,

  https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and

  https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors
fullName: ThrottlingRetryPolicy
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      ThrottlingRetryPolicy(RequestPolicy, RequestPolicyOptions,
      ResponseHandler)
    uid: '@azure/core-http.ThrottlingRetryPolicy.constructor|stable'
    package: '@azure/core-http|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ThrottlingRetryPolicy(nextPolicy: RequestPolicy, options:
        RequestPolicyOptions, _handleResponse?: ResponseHandler)
      parameters:
        - id: nextPolicy
          type: <xref uid="@azure/core-http.RequestPolicy|stable" />
          description: ''
        - id: options
          type: <xref uid="@azure/core-http.RequestPolicyOptions|stable" />
          description: ''
        - id: _handleResponse
          type: <xref uid="@azure/core-http.ResponseHandler|stable" />
          description: ''
inheritedMethods:
  - name: log(HttpPipelineLogLevel, string)
    uid: '@azure/core-http.ThrottlingRetryPolicy.log'
    package: '@azure/core-http'
    summary: >-
      Attempt to log the provided message to the provided logger. If no logger
      was provided or if

      the log level does not meat the logger's threshold, then nothing will be
      logged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function log(logLevel: HttpPipelineLogLevel, message: string)'
      parameters:
        - id: logLevel
          type: <xref uid="@azure/core-http.HttpPipelineLogLevel|stable" />
          description: The log level of this log.
        - id: message
          type: string
          description: |
            The message of this log.
  - name: shouldLog(HttpPipelineLogLevel)
    uid: '@azure/core-http.ThrottlingRetryPolicy.shouldLog'
    package: '@azure/core-http'
    summary: Get whether or not a log with the provided log level should be logged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function shouldLog(logLevel: HttpPipelineLogLevel): boolean'
      parameters:
        - id: logLevel
          type: <xref uid="@azure/core-http.HttpPipelineLogLevel|stable" />
          description: The log level of the log that will be logged.
      return:
        description: Whether or not a log with the provided log level should be logged.
        type: boolean
methods:
  - name: parseDateRetryAfterHeader(string)
    uid: '@azure/core-http.ThrottlingRetryPolicy.parseDateRetryAfterHeader|stable'
    package: '@azure/core-http|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function parseDateRetryAfterHeader(headerValue: string): number |
        undefined
      parameters:
        - id: headerValue
          type: string
          description: ''
      return:
        description: ''
        type: number | undefined
  - name: parseRetryAfterHeader(string)
    uid: '@azure/core-http.ThrottlingRetryPolicy.parseRetryAfterHeader|stable'
    package: '@azure/core-http|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function parseRetryAfterHeader(headerValue: string): number |
        undefined
      parameters:
        - id: headerValue
          type: string
          description: ''
      return:
        description: ''
        type: number | undefined
  - name: sendRequest(WebResourceLike)
    uid: '@azure/core-http.ThrottlingRetryPolicy.sendRequest|stable'
    package: '@azure/core-http|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest(httpRequest: WebResourceLike):
        Promise<HttpOperationResponse>
      parameters:
        - id: httpRequest
          type: <xref uid="@azure/core-http.WebResourceLike|stable" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-http.HttpOperationResponse|stable"
          />&gt;
extends: <xref uid="@azure/core-http.BaseRequestPolicy|stable" />
