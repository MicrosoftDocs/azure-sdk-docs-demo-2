### YamlMime:TSType
name: Databases
uid: '@azure/arm-postgresql.Databases|stable'
package: '@azure/arm-postgresql|stable'
summary: Interface representing a Databases.
fullName: Databases
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, Database,
      DatabasesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-postgresql.Databases.beginCreateOrUpdate|stable'
    package: '@azure/arm-postgresql|stable'
    summary: Creates a new database or updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: Database, options?:
        DatabasesCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<DatabasesCreateOrUpdateResponse>,
        DatabasesCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-postgresql.Database|stable" />
          description: The required parameters for creating or updating a database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-postgresql.DatabasesCreateOrUpdateOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-postgresql.DatabasesCreateOrUpdateResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-postgresql.DatabasesCreateOrUpdateResponse|stable"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, Database,
      DatabasesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-postgresql.Databases.beginCreateOrUpdateAndWait|stable'
    package: '@azure/arm-postgresql|stable'
    summary: Creates a new database or updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        serverName: string, databaseName: string, parameters: Database,
        options?: DatabasesCreateOrUpdateOptionalParams):
        Promise<DatabasesCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-postgresql.Database|stable" />
          description: The required parameters for creating or updating a database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-postgresql.DatabasesCreateOrUpdateOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-postgresql.DatabasesCreateOrUpdateResponse|stable"
          />&gt;
  - name: beginDelete(string, string, string, DatabasesDeleteOptionalParams)
    uid: '@azure/arm-postgresql.Databases.beginDelete|stable'
    package: '@azure/arm-postgresql|stable'
    summary: Deletes a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, serverName: string,
        databaseName: string, options?: DatabasesDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-postgresql.DatabasesDeleteOptionalParams|stable" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, DatabasesDeleteOptionalParams)
    uid: '@azure/arm-postgresql.Databases.beginDeleteAndWait|stable'
    package: '@azure/arm-postgresql|stable'
    summary: Deletes a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, serverName:
        string, databaseName: string, options?: DatabasesDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-postgresql.DatabasesDeleteOptionalParams|stable" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, DatabasesGetOptionalParams)
    uid: '@azure/arm-postgresql.Databases.get|stable'
    package: '@azure/arm-postgresql|stable'
    summary: Gets information about a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options?: DatabasesGetOptionalParams):
        Promise<DatabasesGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: >-
            <xref uid="@azure/arm-postgresql.DatabasesGetOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-postgresql.DatabasesGetResponse|stable" />&gt;
  - name: listByServer(string, string, DatabasesListByServerOptionalParams)
    uid: '@azure/arm-postgresql.Databases.listByServer|stable'
    package: '@azure/arm-postgresql|stable'
    summary: List all the databases in a given server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options?: DatabasesListByServerOptionalParams):
        PagedAsyncIterableIterator<Database>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-postgresql.DatabasesListByServerOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-postgresql.Database|stable" />&gt;
