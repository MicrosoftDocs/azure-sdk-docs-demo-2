### YamlMime:TSType
name: Namespaces
uid: '@azure/arm-eventhub.Namespaces|stable'
package: '@azure/arm-eventhub|stable'
summary: Class representing a Namespaces.
fullName: Namespaces
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Namespaces(EventHubManagementClientContext)
    uid: '@azure/arm-eventhub.Namespaces.constructor|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Create a Namespaces.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Namespaces(client: EventHubManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-eventhub.EventHubManagementClientContext|stable" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, EHNamespace,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.beginCreateOrUpdate|stable'
    package: '@azure/arm-eventhub|stable'
    summary: >-
      Creates or updates a namespace. Once created, this namespace's resource
      manifest is immutable.

      This operation is idempotent.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: EHNamespace, options?: msRest.RequestOptionsBase):
        Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.EHNamespace|stable" />
          description: Parameters for creating a namespace resource.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: beginDeleteMethod(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.beginDeleteMethod|stable'
    package: '@azure/arm-eventhub|stable'
    summary: >-
      Deletes an existing namespace. This operation also removes all associated
      resources under the

      namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, namespaceName:
        string, options?: msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: >-
      checkNameAvailability(CheckNameAvailabilityParameter,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.checkNameAvailability|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Check the give Namespace name availability.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters:
        CheckNameAvailabilityParameter, options?: msRest.RequestOptionsBase):
        Promise<Models.NamespacesCheckNameAvailabilityResponse>
      parameters:
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-eventhub.CheckNameAvailabilityParameter|stable" />
          description: Parameters to check availability of the given Namespace name
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesCheckNameAvailabilityResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesCheckNameAvailabilityResponse|stable"
          />&gt;
  - name: >-
      checkNameAvailability(CheckNameAvailabilityParameter, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityResult>)
    uid: '@azure/arm-eventhub.Namespaces.checkNameAvailability_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters:
        CheckNameAvailabilityParameter, options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-eventhub.CheckNameAvailabilityParameter|stable" />
          description: Parameters to check availability of the given Namespace name
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.CheckNameAvailabilityResult|stable" />&gt;
          description: |
            The callback
  - name: >-
      checkNameAvailability(CheckNameAvailabilityParameter,
      ServiceCallback<CheckNameAvailabilityResult>)
    uid: '@azure/arm-eventhub.Namespaces.checkNameAvailability_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters:
        CheckNameAvailabilityParameter, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-eventhub.CheckNameAvailabilityParameter|stable" />
          description: Parameters to check availability of the given Namespace name
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.CheckNameAvailabilityResult|stable" />&gt;
          description: |
            The callback
  - name: createOrUpdate(string, string, EHNamespace, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.createOrUpdate|stable'
    package: '@azure/arm-eventhub|stable'
    summary: >-
      Creates or updates a namespace. Once created, this namespace's resource
      manifest is immutable.

      This operation is idempotent.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: EHNamespace, options?: msRest.RequestOptionsBase):
        Promise<Models.NamespacesCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.EHNamespace|stable" />
          description: Parameters for creating a namespace resource.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesCreateOrUpdateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesCreateOrUpdateResponse|stable"
          />&gt;
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string, AuthorizationRule,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.createOrUpdateAuthorizationRule|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Creates or updates an AuthorizationRule for a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        AuthorizationRule, options?: msRest.RequestOptionsBase):
        Promise<Models.NamespacesCreateOrUpdateAuthorizationRuleResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.AuthorizationRule|stable" />
          description: The shared access AuthorizationRule.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesCreateOrUpdateAuthorizationRuleResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesCreateOrUpdateAuthorizationRuleResponse|stable"
          />&gt;
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string, AuthorizationRule,
      RequestOptionsBase, ServiceCallback<AuthorizationRule>)
    uid: '@azure/arm-eventhub.Namespaces.createOrUpdateAuthorizationRule_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        AuthorizationRule, options: RequestOptionsBase, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.AuthorizationRule|stable" />
          description: The shared access AuthorizationRule.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRule|stable" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string, AuthorizationRule,
      ServiceCallback<AuthorizationRule>)
    uid: '@azure/arm-eventhub.Namespaces.createOrUpdateAuthorizationRule_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        AuthorizationRule, callback: ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.AuthorizationRule|stable" />
          description: The shared access AuthorizationRule.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRule|stable" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateNetworkRuleSet(string, string, NetworkRuleSet,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.createOrUpdateNetworkRuleSet|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Create or update NetworkRuleSet for a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateNetworkRuleSet(resourceGroupName: string,
        namespaceName: string, parameters: NetworkRuleSet, options?:
        msRest.RequestOptionsBase):
        Promise<Models.NamespacesCreateOrUpdateNetworkRuleSetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.NetworkRuleSet|stable" />
          description: The Namespace IpFilterRule.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesCreateOrUpdateNetworkRuleSetResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesCreateOrUpdateNetworkRuleSetResponse|stable"
          />&gt;
  - name: >-
      createOrUpdateNetworkRuleSet(string, string, NetworkRuleSet,
      RequestOptionsBase, ServiceCallback<NetworkRuleSet>)
    uid: '@azure/arm-eventhub.Namespaces.createOrUpdateNetworkRuleSet_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateNetworkRuleSet(resourceGroupName: string,
        namespaceName: string, parameters: NetworkRuleSet, options:
        RequestOptionsBase, callback: ServiceCallback<NetworkRuleSet>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.NetworkRuleSet|stable" />
          description: The Namespace IpFilterRule.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.NetworkRuleSet|stable" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateNetworkRuleSet(string, string, NetworkRuleSet,
      ServiceCallback<NetworkRuleSet>)
    uid: '@azure/arm-eventhub.Namespaces.createOrUpdateNetworkRuleSet_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateNetworkRuleSet(resourceGroupName: string,
        namespaceName: string, parameters: NetworkRuleSet, callback:
        ServiceCallback<NetworkRuleSet>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.NetworkRuleSet|stable" />
          description: The Namespace IpFilterRule.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.NetworkRuleSet|stable" />&gt;
          description: |
            The callback
  - name: deleteAuthorizationRule(string, string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.deleteAuthorizationRule|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Deletes an AuthorizationRule for a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: >-
      deleteAuthorizationRule(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-eventhub.Namespaces.deleteAuthorizationRule_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: deleteAuthorizationRule(string, string, string, ServiceCallback<void>)
    uid: '@azure/arm-eventhub.Namespaces.deleteAuthorizationRule_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: deleteMethod(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.deleteMethod|stable'
    package: '@azure/arm-eventhub|stable'
    summary: >-
      Deletes an existing namespace. This operation also removes all associated
      resources under the

      namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        options?: msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: get(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.get|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Gets the description of the specified namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options?:
        msRest.RequestOptionsBase): Promise<Models.NamespacesGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesGetResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesGetResponse|stable" />&gt;
  - name: get(string, string, RequestOptionsBase, ServiceCallback<EHNamespace>)
    uid: '@azure/arm-eventhub.Namespaces.get_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<EHNamespace>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespace|stable" />&gt;
          description: |
            The callback
  - name: get(string, string, ServiceCallback<EHNamespace>)
    uid: '@azure/arm-eventhub.Namespaces.get_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, callback:
        ServiceCallback<EHNamespace>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespace|stable" />&gt;
          description: |
            The callback
  - name: getAuthorizationRule(string, string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.getAuthorizationRule|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Gets an AuthorizationRule for a Namespace by rule name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.NamespacesGetAuthorizationRuleResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesGetAuthorizationRuleResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesGetAuthorizationRuleResponse|stable"
          />&gt;
  - name: >-
      getAuthorizationRule(string, string, string, RequestOptionsBase,
      ServiceCallback<AuthorizationRule>)
    uid: '@azure/arm-eventhub.Namespaces.getAuthorizationRule_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, options: RequestOptionsBase,
        callback: ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRule|stable" />&gt;
          description: |
            The callback
  - name: >-
      getAuthorizationRule(string, string, string,
      ServiceCallback<AuthorizationRule>)
    uid: '@azure/arm-eventhub.Namespaces.getAuthorizationRule_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRule|stable" />&gt;
          description: |
            The callback
  - name: getNetworkRuleSet(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.getNetworkRuleSet|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Gets NetworkRuleSet for a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkRuleSet(resourceGroupName: string, namespaceName:
        string, options?: msRest.RequestOptionsBase):
        Promise<Models.NamespacesGetNetworkRuleSetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesGetNetworkRuleSetResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesGetNetworkRuleSetResponse|stable"
          />&gt;
  - name: >-
      getNetworkRuleSet(string, string, RequestOptionsBase,
      ServiceCallback<NetworkRuleSet>)
    uid: '@azure/arm-eventhub.Namespaces.getNetworkRuleSet_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkRuleSet(resourceGroupName: string, namespaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkRuleSet>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.NetworkRuleSet|stable" />&gt;
          description: |
            The callback
  - name: getNetworkRuleSet(string, string, ServiceCallback<NetworkRuleSet>)
    uid: '@azure/arm-eventhub.Namespaces.getNetworkRuleSet_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkRuleSet(resourceGroupName: string, namespaceName:
        string, callback: ServiceCallback<NetworkRuleSet>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.NetworkRuleSet|stable" />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.list|stable'
    package: '@azure/arm-eventhub|stable'
    summary: >-
      Lists all the available Namespaces within a subscription, irrespective of
      the resource groups.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: msRest.RequestOptionsBase):
        Promise<Models.NamespacesListResponse>
      parameters:
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesListResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesListResponse|stable" />&gt;
  - name: list(RequestOptionsBase, ServiceCallback<EHNamespaceListResult>)
    uid: '@azure/arm-eventhub.Namespaces.list_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespaceListResult|stable" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<EHNamespaceListResult>)
    uid: '@azure/arm-eventhub.Namespaces.list_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<EHNamespaceListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespaceListResult|stable" />&gt;
          description: |
            The callback
  - name: listAuthorizationRules(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRules|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Gets a list of authorization rules for a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, options?: msRest.RequestOptionsBase):
        Promise<Models.NamespacesListAuthorizationRulesResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesListAuthorizationRulesResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesListAuthorizationRulesResponse|stable"
          />&gt;
  - name: >-
      listAuthorizationRules(string, string, RequestOptionsBase,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRules_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRuleListResult|stable" />&gt;
          description: |
            The callback
  - name: >-
      listAuthorizationRules(string, string,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRules_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRuleListResult|stable" />&gt;
          description: |
            The callback
  - name: listAuthorizationRulesNext(string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRulesNext|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Gets a list of authorization rules for a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.NamespacesListAuthorizationRulesNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesListAuthorizationRulesNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesListAuthorizationRulesNextResponse|stable"
          />&gt;
  - name: >-
      listAuthorizationRulesNext(string, RequestOptionsBase,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRulesNext_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRuleListResult|stable" />&gt;
          description: |
            The callback
  - name: >-
      listAuthorizationRulesNext(string,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: '@azure/arm-eventhub.Namespaces.listAuthorizationRulesNext_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.AuthorizationRuleListResult|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroup(string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.listByResourceGroup|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Lists the available Namespaces within a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.NamespacesListByResourceGroupResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesListByResourceGroupResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesListByResourceGroupResponse|stable"
          />&gt;
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<EHNamespaceListResult>)
    uid: '@azure/arm-eventhub.Namespaces.listByResourceGroup_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespaceListResult|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroup(string, ServiceCallback<EHNamespaceListResult>)
    uid: '@azure/arm-eventhub.Namespaces.listByResourceGroup_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespaceListResult|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroupNext(string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.listByResourceGroupNext|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Lists the available Namespaces within a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.NamespacesListByResourceGroupNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesListByResourceGroupNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesListByResourceGroupNextResponse|stable"
          />&gt;
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<EHNamespaceListResult>)
    uid: '@azure/arm-eventhub.Namespaces.listByResourceGroupNext_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespaceListResult|stable" />&gt;
          description: |
            The callback
  - name: listByResourceGroupNext(string, ServiceCallback<EHNamespaceListResult>)
    uid: '@azure/arm-eventhub.Namespaces.listByResourceGroupNext_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespaceListResult|stable" />&gt;
          description: |
            The callback
  - name: listKeys(string, string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.listKeys|stable'
    package: '@azure/arm-eventhub|stable'
    summary: Gets the primary and secondary connection strings for the Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, options?: msRest.RequestOptionsBase):
        Promise<Models.NamespacesListKeysResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesListKeysResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesListKeysResponse|stable" />&gt;
  - name: >-
      listKeys(string, string, string, RequestOptionsBase,
      ServiceCallback<AccessKeys>)
    uid: '@azure/arm-eventhub.Namespaces.listKeys_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, options: RequestOptionsBase, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AccessKeys|stable"
            />&gt;
          description: |
            The callback
  - name: listKeys(string, string, string, ServiceCallback<AccessKeys>)
    uid: '@azure/arm-eventhub.Namespaces.listKeys_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AccessKeys|stable"
            />&gt;
          description: |
            The callback
  - name: listNext(string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.listNext|stable'
    package: '@azure/arm-eventhub|stable'
    summary: >-
      Lists all the available Namespaces within a subscription, irrespective of
      the resource groups.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase): Promise<Models.NamespacesListNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesListNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesListNextResponse|stable" />&gt;
  - name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<EHNamespaceListResult>)
    uid: '@azure/arm-eventhub.Namespaces.listNext_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespaceListResult|stable" />&gt;
          description: |
            The callback
  - name: listNext(string, ServiceCallback<EHNamespaceListResult>)
    uid: '@azure/arm-eventhub.Namespaces.listNext_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<EHNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespaceListResult|stable" />&gt;
          description: |
            The callback
  - name: >-
      regenerateKeys(string, string, string, RegenerateAccessKeyParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.regenerateKeys|stable'
    package: '@azure/arm-eventhub|stable'
    summary: >-
      Regenerates the primary or secondary connection strings for the specified
      Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options?: msRest.RequestOptionsBase):
        Promise<Models.NamespacesRegenerateKeysResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-eventhub.RegenerateAccessKeyParameters|stable"
            />
          description: Parameters required to regenerate the connection string.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesRegenerateKeysResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesRegenerateKeysResponse|stable"
          />&gt;
  - name: >-
      regenerateKeys(string, string, string, RegenerateAccessKeyParameters,
      RequestOptionsBase, ServiceCallback<AccessKeys>)
    uid: '@azure/arm-eventhub.Namespaces.regenerateKeys_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options: RequestOptionsBase, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-eventhub.RegenerateAccessKeyParameters|stable"
            />
          description: Parameters required to regenerate the connection string.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AccessKeys|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      regenerateKeys(string, string, string, RegenerateAccessKeyParameters,
      ServiceCallback<AccessKeys>)
    uid: '@azure/arm-eventhub.Namespaces.regenerateKeys_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: authorizationRuleName
          type: string
          description: The authorization rule name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-eventhub.RegenerateAccessKeyParameters|stable"
            />
          description: Parameters required to regenerate the connection string.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-eventhub.AccessKeys|stable"
            />&gt;
          description: |
            The callback
  - name: update(string, string, EHNamespace, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventhub.Namespaces.update|stable'
    package: '@azure/arm-eventhub|stable'
    summary: >-
      Creates or updates a namespace. Once created, this namespace's resource
      manifest is immutable.

      This operation is idempotent.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, namespaceName: string,
        parameters: EHNamespace, options?: msRest.RequestOptionsBase):
        Promise<Models.NamespacesUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.EHNamespace|stable" />
          description: Parameters for updating a namespace resource.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.NamespacesUpdateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventhub.NamespacesUpdateResponse|stable" />&gt;
  - name: >-
      update(string, string, EHNamespace, RequestOptionsBase,
      ServiceCallback<EHNamespace>)
    uid: '@azure/arm-eventhub.Namespaces.update_2|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, namespaceName: string,
        parameters: EHNamespace, options: RequestOptionsBase, callback:
        ServiceCallback<EHNamespace>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.EHNamespace|stable" />
          description: Parameters for updating a namespace resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespace|stable" />&gt;
          description: |
            The callback
  - name: update(string, string, EHNamespace, ServiceCallback<EHNamespace>)
    uid: '@azure/arm-eventhub.Namespaces.update_1|stable'
    package: '@azure/arm-eventhub|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, namespaceName: string,
        parameters: EHNamespace, callback: ServiceCallback<EHNamespace>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.EHNamespace|stable" />
          description: Parameters for updating a namespace resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventhub.EHNamespace|stable" />&gt;
          description: |
            The callback
