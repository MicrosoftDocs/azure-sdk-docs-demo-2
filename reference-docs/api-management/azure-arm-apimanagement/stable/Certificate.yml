### YamlMime:TSType
name: Certificate
uid: '@azure/arm-apimanagement.Certificate|stable'
package: '@azure/arm-apimanagement|stable'
summary: Interface representing a Certificate.
fullName: Certificate
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string,
      CertificateCreateOrUpdateParameters,
      CertificateCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Certificate.createOrUpdate|stable'
    package: '@azure/arm-apimanagement|stable'
    summary: >-
      Creates or updates the certificate being used for authentication with the
      backend.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        certificateId: string, parameters: CertificateCreateOrUpdateParameters,
        options?: CertificateCreateOrUpdateOptionalParams):
        Promise<CertificateCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API
                                 Management service instance.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateCreateOrUpdateParameters|stable"
            />
          description: Create or Update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateCreateOrUpdateOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.CertificateCreateOrUpdateResponse|stable"
          />&gt;
  - name: delete(string, string, string, string, CertificateDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.Certificate.delete|stable'
    package: '@azure/arm-apimanagement|stable'
    summary: Deletes specific certificate.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string,
        certificateId: string, ifMatch: string, options?:
        CertificateDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API
                                 Management service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateDeleteOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, CertificateGetOptionalParams)
    uid: '@azure/arm-apimanagement.Certificate.get|stable'
    package: '@azure/arm-apimanagement|stable'
    summary: Gets the details of the certificate specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        certificateId: string, options?: CertificateGetOptionalParams):
        Promise<CertificateGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API
                                 Management service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateGetOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.CertificateGetResponse|stable" />&gt;
  - name: >-
      getEntityTag(string, string, string,
      CertificateGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.Certificate.getEntityTag|stable'
    package: '@azure/arm-apimanagement|stable'
    summary: >-
      Gets the entity state (Etag) version of the certificate specified by its
      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        certificateId: string, options?: CertificateGetEntityTagOptionalParams):
        Promise<CertificateGetEntityTagResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API
                                 Management service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateGetEntityTagOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.CertificateGetEntityTagResponse|stable"
          />&gt;
  - name: listByService(string, string, CertificateListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.Certificate.listByService|stable'
    package: '@azure/arm-apimanagement|stable'
    summary: Lists a collection of all certificates in the specified service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: CertificateListByServiceOptionalParams):
        PagedAsyncIterableIterator<CertificateContract>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateListByServiceOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-apimanagement.CertificateContract|stable" />&gt;
  - name: >-
      refreshSecret(string, string, string,
      CertificateRefreshSecretOptionalParams)
    uid: '@azure/arm-apimanagement.Certificate.refreshSecret|stable'
    package: '@azure/arm-apimanagement|stable'
    summary: >-
      From KeyVault, Refresh the certificate being used for authentication with
      the backend.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function refreshSecret(resourceGroupName: string, serviceName: string,
        certificateId: string, options?:
        CertificateRefreshSecretOptionalParams):
        Promise<CertificateRefreshSecretResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API
                                 Management service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateRefreshSecretOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.CertificateRefreshSecretResponse|stable"
          />&gt;
