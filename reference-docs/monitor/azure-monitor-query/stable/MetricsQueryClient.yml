### YamlMime:TSType
name: MetricsQueryClient
uid: '@azure/monitor-query.MetricsQueryClient|stable'
package: '@azure/monitor-query|stable'
summary: >-
  A client that can query metrics, get metric definitions and get metric
  namespaces.
fullName: MetricsQueryClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: MetricsQueryClient(TokenCredential, MetricsClientOptions)
    uid: '@azure/monitor-query.MetricsQueryClient.constructor|stable'
    package: '@azure/monitor-query|stable'
    summary: Creates a MetricsQueryClient.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new MetricsQueryClient(tokenCredential: TokenCredential, options?:
        MetricsClientOptions)
      parameters:
        - id: tokenCredential
          type: TokenCredential
          description: A TokenCredential that has rights to query metrics on resources.
        - id: options
          type: <xref uid="@azure/monitor-query.MetricsClientOptions|stable" />
          description: |
            Options for the client like controlling request retries.
methods:
  - name: listMetricDefinitions(string, ListMetricDefinitionsOptions)
    uid: '@azure/monitor-query.MetricsQueryClient.listMetricDefinitions|stable'
    package: '@azure/monitor-query|stable'
    summary: >2-
        /**
      Returns an async iterable iterator to list metric definitions.


      Example using `for await` syntax:


      ```js

      const metricsQueryClient = new MetricsQueryClient(tokenCredential);

      const metricDefinitions = client.listMetricDefinitions(resourceUri,
      options);

      let i = 1;

      for await (const metricDefinition of metricDefinitions) {
        console.log(`metricDefinition ${i++}:`);
        console.log(metricDefinition);
      }

      ```


      Example using `iter.next()`:


      ```js

      let iter = client.listMetricDefinitions(resourceUri, options);

      let result = await iter.next();

      while (!result.done) {
        console.log(` metricDefinitions - ${result.value.id}, ${result.value.name}`);
        result = await iter.next();
      }

      ```


      Get a list of metric definitions, given a resource URI.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetricDefinitions(resourceUri: string, options?:
        ListMetricDefinitionsOptions):
        PagedAsyncIterableIterator<MetricDefinition>
      parameters:
        - id: resourceUri
          type: string
          description: The resource URI to get metric definitions for.
        - id: options
          type: >-
            <xref uid="@azure/monitor-query.ListMetricDefinitionsOptions|stable"
            />
          description: Options for getting metric definitions.
      return:
        description: Metric definitions for a given resource URI.
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/monitor-query.MetricDefinition|stable" />&gt;
  - name: listMetricNamespaces(string, ListMetricNamespacesOptions)
    uid: '@azure/monitor-query.MetricsQueryClient.listMetricNamespaces|stable'
    package: '@azure/monitor-query|stable'
    summary: >-
      Returns an async iterable iterator to list metric namespaces.

      Example using `for await` syntax:


      ```js

      const metricsQueryClient = new MetricsQueryClient(tokenCredential);

      const metricNamespaces = client.listMetricNamespaces(resourceUri,
      options);

      let i = 1;

      for await (const metricNamespace of metricNamespaces) {
        console.log(`metricNamespace ${i++}:`);
        console.log(metricNamespace);
      }

      ```


      Example using `iter.next()`:


      ```js

      let iter = client.listMetricNamespaces(resourceUri, options);

      let result = await iter.next();

      while (!result.done) {
        console.log(` metricNamespace - ${result.value.id}, ${result.value.name}`);
        result = await iter.next();
      }

      ```

      Get a list of metric namespaces, given a resource URI.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetricNamespaces(resourceUri: string, options?:
        ListMetricNamespacesOptions):
        PagedAsyncIterableIterator<MetricNamespace>
      parameters:
        - id: resourceUri
          type: string
          description: The resource URI to get metric namespaces for.
        - id: options
          type: >-
            <xref uid="@azure/monitor-query.ListMetricNamespacesOptions|stable"
            />
          description: Options for getting metric namespaces.
      return:
        description: Metric namespaces for a given resource URI.
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/monitor-query.MetricNamespace|stable" />&gt;
  - name: queryResource(string, string[], MetricsQueryOptions)
    uid: '@azure/monitor-query.MetricsQueryClient.queryResource|stable'
    package: '@azure/monitor-query|stable'
    summary: Query metrics, given a resource URI
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queryResource(resourceUri: string, metricNames: string[],
        options?: MetricsQueryOptions): Promise<MetricsQueryResult>
      parameters:
        - id: resourceUri
          type: string
          description: The resource URI to query.
        - id: metricNames
          type: string[]
          description: The names of the metrics to retrieve.
        - id: options
          type: <xref uid="@azure/monitor-query.MetricsQueryOptions|stable" />
          description: Options for querying metrics.
      return:
        description: A response containing metrics.
        type: >-
          Promise&lt;<xref uid="@azure/monitor-query.MetricsQueryResult|stable"
          />&gt;
