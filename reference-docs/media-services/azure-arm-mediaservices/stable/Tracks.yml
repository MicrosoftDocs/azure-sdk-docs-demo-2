### YamlMime:TSType
name: Tracks
uid: '@azure/arm-mediaservices.Tracks|stable'
package: '@azure/arm-mediaservices|stable'
summary: Interface representing a Tracks.
fullName: Tracks
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, string, AssetTrack,
      TracksCreateOrUpdateOptionalParams)
    uid: '@azure/arm-mediaservices.Tracks.beginCreateOrUpdate|stable'
    package: '@azure/arm-mediaservices|stable'
    summary: Create or update a Track in the asset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, accountName:
        string, assetName: string, trackName: string, parameters: AssetTrack,
        options?: TracksCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<TracksCreateOrUpdateResponse>,
        TracksCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: assetName
          type: string
          description: The Asset name.
        - id: trackName
          type: string
          description: The Asset Track name.
        - id: parameters
          type: <xref uid="@azure/arm-mediaservices.AssetTrack|stable" />
          description: The request parameters
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mediaservices.TracksCreateOrUpdateOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-mediaservices.TracksCreateOrUpdateResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-mediaservices.TracksCreateOrUpdateResponse|stable"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, string, AssetTrack,
      TracksCreateOrUpdateOptionalParams)
    uid: '@azure/arm-mediaservices.Tracks.beginCreateOrUpdateAndWait|stable'
    package: '@azure/arm-mediaservices|stable'
    summary: Create or update a Track in the asset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        accountName: string, assetName: string, trackName: string, parameters:
        AssetTrack, options?: TracksCreateOrUpdateOptionalParams):
        Promise<TracksCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: assetName
          type: string
          description: The Asset name.
        - id: trackName
          type: string
          description: The Asset Track name.
        - id: parameters
          type: <xref uid="@azure/arm-mediaservices.AssetTrack|stable" />
          description: The request parameters
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mediaservices.TracksCreateOrUpdateOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-mediaservices.TracksCreateOrUpdateResponse|stable"
          />&gt;
  - name: beginDelete(string, string, string, string, TracksDeleteOptionalParams)
    uid: '@azure/arm-mediaservices.Tracks.beginDelete|stable'
    package: '@azure/arm-mediaservices|stable'
    summary: Deletes a Track in the asset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, accountName: string,
        assetName: string, trackName: string, options?:
        TracksDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<TracksDeleteResponse>,
        TracksDeleteResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: assetName
          type: string
          description: The Asset name.
        - id: trackName
          type: string
          description: The Asset Track name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mediaservices.TracksDeleteOptionalParams|stable" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-mediaservices.TracksDeleteResponse|stable" />&gt;,
          <xref uid="@azure/arm-mediaservices.TracksDeleteResponse|stable"
          />&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string, string,
      TracksDeleteOptionalParams)
    uid: '@azure/arm-mediaservices.Tracks.beginDeleteAndWait|stable'
    package: '@azure/arm-mediaservices|stable'
    summary: Deletes a Track in the asset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, accountName:
        string, assetName: string, trackName: string, options?:
        TracksDeleteOptionalParams): Promise<TracksDeleteResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: assetName
          type: string
          description: The Asset name.
        - id: trackName
          type: string
          description: The Asset Track name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mediaservices.TracksDeleteOptionalParams|stable" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-mediaservices.TracksDeleteResponse|stable" />&gt;
  - name: >-
      beginUpdate(string, string, string, string, AssetTrack,
      TracksUpdateOptionalParams)
    uid: '@azure/arm-mediaservices.Tracks.beginUpdate|stable'
    package: '@azure/arm-mediaservices|stable'
    summary: Updates an existing Track in the asset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, accountName: string,
        assetName: string, trackName: string, parameters: AssetTrack, options?:
        TracksUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<TracksUpdateResponse>,
        TracksUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: assetName
          type: string
          description: The Asset name.
        - id: trackName
          type: string
          description: The Asset Track name.
        - id: parameters
          type: <xref uid="@azure/arm-mediaservices.AssetTrack|stable" />
          description: The request parameters
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mediaservices.TracksUpdateOptionalParams|stable" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-mediaservices.TracksUpdateResponse|stable" />&gt;,
          <xref uid="@azure/arm-mediaservices.TracksUpdateResponse|stable"
          />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, string, AssetTrack,
      TracksUpdateOptionalParams)
    uid: '@azure/arm-mediaservices.Tracks.beginUpdateAndWait|stable'
    package: '@azure/arm-mediaservices|stable'
    summary: Updates an existing Track in the asset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, accountName:
        string, assetName: string, trackName: string, parameters: AssetTrack,
        options?: TracksUpdateOptionalParams): Promise<TracksUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: assetName
          type: string
          description: The Asset name.
        - id: trackName
          type: string
          description: The Asset Track name.
        - id: parameters
          type: <xref uid="@azure/arm-mediaservices.AssetTrack|stable" />
          description: The request parameters
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mediaservices.TracksUpdateOptionalParams|stable" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-mediaservices.TracksUpdateResponse|stable" />&gt;
  - name: >-
      beginUpdateTrackData(string, string, string, string,
      TracksUpdateTrackDataOptionalParams)
    uid: '@azure/arm-mediaservices.Tracks.beginUpdateTrackData|stable'
    package: '@azure/arm-mediaservices|stable'
    summary: >-
      Update the track data. Call this API after any changes are made to the
      track data stored in the

      asset container. For example, you have modified the WebVTT captions file
      in the Azure blob storage

      container for the asset, viewers will not see the new version of the
      captions unless this API is

      called. Note, the changes may not be reflected immediately. CDN cache may
      also need to be purged if

      applicable.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateTrackData(resourceGroupName: string, accountName:
        string, assetName: string, trackName: string, options?:
        TracksUpdateTrackDataOptionalParams):
        Promise<PollerLike<PollOperationState<TracksUpdateTrackDataResponse>,
        TracksUpdateTrackDataResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: assetName
          type: string
          description: The Asset name.
        - id: trackName
          type: string
          description: The Asset Track name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mediaservices.TracksUpdateTrackDataOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-mediaservices.TracksUpdateTrackDataResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-mediaservices.TracksUpdateTrackDataResponse|stable"
          />&gt;&gt;
  - name: >-
      beginUpdateTrackDataAndWait(string, string, string, string,
      TracksUpdateTrackDataOptionalParams)
    uid: '@azure/arm-mediaservices.Tracks.beginUpdateTrackDataAndWait|stable'
    package: '@azure/arm-mediaservices|stable'
    summary: >-
      Update the track data. Call this API after any changes are made to the
      track data stored in the

      asset container. For example, you have modified the WebVTT captions file
      in the Azure blob storage

      container for the asset, viewers will not see the new version of the
      captions unless this API is

      called. Note, the changes may not be reflected immediately. CDN cache may
      also need to be purged if

      applicable.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateTrackDataAndWait(resourceGroupName: string,
        accountName: string, assetName: string, trackName: string, options?:
        TracksUpdateTrackDataOptionalParams):
        Promise<TracksUpdateTrackDataResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: assetName
          type: string
          description: The Asset name.
        - id: trackName
          type: string
          description: The Asset Track name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mediaservices.TracksUpdateTrackDataOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-mediaservices.TracksUpdateTrackDataResponse|stable"
          />&gt;
  - name: get(string, string, string, string, TracksGetOptionalParams)
    uid: '@azure/arm-mediaservices.Tracks.get|stable'
    package: '@azure/arm-mediaservices|stable'
    summary: Get the details of a Track in the Asset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, assetName:
        string, trackName: string, options?: TracksGetOptionalParams):
        Promise<TracksGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: assetName
          type: string
          description: The Asset name.
        - id: trackName
          type: string
          description: The Asset Track name.
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.TracksGetOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-mediaservices.TracksGetResponse|stable" />&gt;
  - name: list(string, string, string, TracksListOptionalParams)
    uid: '@azure/arm-mediaservices.Tracks.list|stable'
    package: '@azure/arm-mediaservices|stable'
    summary: Lists the Tracks in the asset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, accountName: string, assetName:
        string, options?: TracksListOptionalParams):
        PagedAsyncIterableIterator<AssetTrack>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: assetName
          type: string
          description: The Asset name.
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.TracksListOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-mediaservices.AssetTrack|stable" />&gt;
