### YamlMime:TSType
name: NetworkWatchers
uid: '@azure/arm-network.NetworkWatchers|stable'
package: '@azure/arm-network|stable'
summary: Interface representing a NetworkWatchers.
fullName: NetworkWatchers
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCheckConnectivity(string, string, ConnectivityParameters,
      NetworkWatchersCheckConnectivityOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginCheckConnectivity|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a given

      endpoint including another VM or an arbitrary remote server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCheckConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters,
        options?: NetworkWatchersCheckConnectivityOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersCheckConnectivityResponse>,
        NetworkWatchersCheckConnectivityResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.ConnectivityParameters|stable" />
          description: >-
            Parameters that determine how the connectivity check will be
            performed.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersCheckConnectivityOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersCheckConnectivityResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersCheckConnectivityResponse|stable"
          />&gt;&gt;
  - name: >-
      beginCheckConnectivityAndWait(string, string, ConnectivityParameters,
      NetworkWatchersCheckConnectivityOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginCheckConnectivityAndWait|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a given

      endpoint including another VM or an arbitrary remote server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCheckConnectivityAndWait(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters,
        options?: NetworkWatchersCheckConnectivityOptionalParams):
        Promise<NetworkWatchersCheckConnectivityResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.ConnectivityParameters|stable" />
          description: >-
            Parameters that determine how the connectivity check will be
            performed.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersCheckConnectivityOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersCheckConnectivityResponse|stable"
          />&gt;
  - name: beginDelete(string, string, NetworkWatchersDeleteOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginDelete|stable'
    package: '@azure/arm-network|stable'
    summary: Deletes the specified network watcher resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, networkWatcherName:
        string, options?: NetworkWatchersDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersDeleteOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, NetworkWatchersDeleteOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginDeleteAndWait|stable'
    package: '@azure/arm-network|stable'
    summary: Deletes the specified network watcher resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string,
        networkWatcherName: string, options?:
        NetworkWatchersDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersDeleteOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginGetAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters,
      NetworkWatchersGetAzureReachabilityReportOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginGetAzureReachabilityReport|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      NOTE: This feature is currently in preview and still being tested for
      stability. Gets the relative

      latency score for internet service providers from a specified location to
      Azure regions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options?:
        NetworkWatchersGetAzureReachabilityReportOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersGetAzureReachabilityReportResponse>,
        NetworkWatchersGetAzureReachabilityReportResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-network.AzureReachabilityReportParameters|stable" />
          description: Parameters that determine Azure reachability report configuration.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetAzureReachabilityReportOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetAzureReachabilityReportResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersGetAzureReachabilityReportResponse|stable"
          />&gt;&gt;
  - name: >-
      beginGetAzureReachabilityReportAndWait(string, string,
      AzureReachabilityReportParameters,
      NetworkWatchersGetAzureReachabilityReportOptionalParams)
    uid: >-
      @azure/arm-network.NetworkWatchers.beginGetAzureReachabilityReportAndWait|stable
    package: '@azure/arm-network|stable'
    summary: >-
      NOTE: This feature is currently in preview and still being tested for
      stability. Gets the relative

      latency score for internet service providers from a specified location to
      Azure regions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetAzureReachabilityReportAndWait(resourceGroupName:
        string, networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options?:
        NetworkWatchersGetAzureReachabilityReportOptionalParams):
        Promise<NetworkWatchersGetAzureReachabilityReportResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-network.AzureReachabilityReportParameters|stable" />
          description: Parameters that determine Azure reachability report configuration.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetAzureReachabilityReportOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetAzureReachabilityReportResponse|stable"
          />&gt;
  - name: >-
      beginGetFlowLogStatus(string, string, FlowLogStatusParameters,
      NetworkWatchersGetFlowLogStatusOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginGetFlowLogStatus|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetFlowLogStatus(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogStatusParameters,
        options?: NetworkWatchersGetFlowLogStatusOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersGetFlowLogStatusResponse>,
        NetworkWatchersGetFlowLogStatusResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.FlowLogStatusParameters|stable" />
          description: >-
            Parameters that define a resource to query flow log and traffic
            analytics
                              (optional) status.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetFlowLogStatusOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetFlowLogStatusResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersGetFlowLogStatusResponse|stable"
          />&gt;&gt;
  - name: >-
      beginGetFlowLogStatusAndWait(string, string, FlowLogStatusParameters,
      NetworkWatchersGetFlowLogStatusOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginGetFlowLogStatusAndWait|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetFlowLogStatusAndWait(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogStatusParameters,
        options?: NetworkWatchersGetFlowLogStatusOptionalParams):
        Promise<NetworkWatchersGetFlowLogStatusResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.FlowLogStatusParameters|stable" />
          description: >-
            Parameters that define a resource to query flow log and traffic
            analytics
                              (optional) status.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetFlowLogStatusOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetFlowLogStatusResponse|stable"
          />&gt;
  - name: >-
      beginGetNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters,
      NetworkWatchersGetNetworkConfigurationDiagnosticOptionalParams)
    uid: >-
      @azure/arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnostic|stable
    package: '@azure/arm-network|stable'
    summary: >-
      Gets Network Configuration Diagnostic data to help customers understand
      and debug network behavior.

      It provides detailed information on what security rules were applied to a
      specified traffic flow and

      the result of evaluating these rules. Customers must provide details of a
      flow like source,

      destination, protocol, etc. The API returns whether traffic was allowed or
      denied, the rules

      evaluated for the specified flow and the evaluation results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetNetworkConfigurationDiagnostic(resourceGroupName:
        string, networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options?:
        NetworkWatchersGetNetworkConfigurationDiagnosticOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersGetNetworkConfigurationDiagnosticResponse>,
        NetworkWatchersGetNetworkConfigurationDiagnosticResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-network.NetworkConfigurationDiagnosticParameters|stable"
            />
          description: Parameters to get network configuration diagnostic.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetNetworkConfigurationDiagnosticOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetNetworkConfigurationDiagnosticResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersGetNetworkConfigurationDiagnosticResponse|stable"
          />&gt;&gt;
  - name: >-
      beginGetNetworkConfigurationDiagnosticAndWait(string, string,
      NetworkConfigurationDiagnosticParameters,
      NetworkWatchersGetNetworkConfigurationDiagnosticOptionalParams)
    uid: >-
      @azure/arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnosticAndWait|stable
    package: '@azure/arm-network|stable'
    summary: >-
      Gets Network Configuration Diagnostic data to help customers understand
      and debug network behavior.

      It provides detailed information on what security rules were applied to a
      specified traffic flow and

      the result of evaluating these rules. Customers must provide details of a
      flow like source,

      destination, protocol, etc. The API returns whether traffic was allowed or
      denied, the rules

      evaluated for the specified flow and the evaluation results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginGetNetworkConfigurationDiagnosticAndWait(resourceGroupName: string,
        networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options?:
        NetworkWatchersGetNetworkConfigurationDiagnosticOptionalParams):
        Promise<NetworkWatchersGetNetworkConfigurationDiagnosticResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-network.NetworkConfigurationDiagnosticParameters|stable"
            />
          description: Parameters to get network configuration diagnostic.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetNetworkConfigurationDiagnosticOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetNetworkConfigurationDiagnosticResponse|stable"
          />&gt;
  - name: >-
      beginGetNextHop(string, string, NextHopParameters,
      NetworkWatchersGetNextHopOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginGetNextHop|stable'
    package: '@azure/arm-network|stable'
    summary: Gets the next hop from the specified VM.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, options?:
        NetworkWatchersGetNextHopOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersGetNextHopResponse>,
        NetworkWatchersGetNextHopResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.NextHopParameters|stable" />
          description: Parameters that define the source and destination endpoint.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetNextHopOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetNextHopResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersGetNextHopResponse|stable"
          />&gt;&gt;
  - name: >-
      beginGetNextHopAndWait(string, string, NextHopParameters,
      NetworkWatchersGetNextHopOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginGetNextHopAndWait|stable'
    package: '@azure/arm-network|stable'
    summary: Gets the next hop from the specified VM.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetNextHopAndWait(resourceGroupName: string,
        networkWatcherName: string, parameters: NextHopParameters, options?:
        NetworkWatchersGetNextHopOptionalParams):
        Promise<NetworkWatchersGetNextHopResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.NextHopParameters|stable" />
          description: Parameters that define the source and destination endpoint.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetNextHopOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetNextHopResponse|stable"
          />&gt;
  - name: >-
      beginGetTroubleshooting(string, string, TroubleshootingParameters,
      NetworkWatchersGetTroubleshootingOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginGetTroubleshooting|stable'
    package: '@azure/arm-network|stable'
    summary: Initiate troubleshooting on a specified resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        options?: NetworkWatchersGetTroubleshootingOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersGetTroubleshootingResponse>,
        NetworkWatchersGetTroubleshootingResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.TroubleshootingParameters|stable" />
          description: Parameters that define the resource to troubleshoot.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetTroubleshootingOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetTroubleshootingResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersGetTroubleshootingResponse|stable"
          />&gt;&gt;
  - name: >-
      beginGetTroubleshootingAndWait(string, string, TroubleshootingParameters,
      NetworkWatchersGetTroubleshootingOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginGetTroubleshootingAndWait|stable'
    package: '@azure/arm-network|stable'
    summary: Initiate troubleshooting on a specified resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetTroubleshootingAndWait(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        options?: NetworkWatchersGetTroubleshootingOptionalParams):
        Promise<NetworkWatchersGetTroubleshootingResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.TroubleshootingParameters|stable" />
          description: Parameters that define the resource to troubleshoot.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetTroubleshootingOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetTroubleshootingResponse|stable"
          />&gt;
  - name: >-
      beginGetTroubleshootingResult(string, string,
      QueryTroubleshootingParameters,
      NetworkWatchersGetTroubleshootingResultOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginGetTroubleshootingResult|stable'
    package: '@azure/arm-network|stable'
    summary: Get the last completed troubleshooting result on a specified resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        options?: NetworkWatchersGetTroubleshootingResultOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersGetTroubleshootingResultResponse>,
        NetworkWatchersGetTroubleshootingResultResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-network.QueryTroubleshootingParameters|stable"
            />
          description: >-
            Parameters that define the resource to query the troubleshooting
            result.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetTroubleshootingResultOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetTroubleshootingResultResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersGetTroubleshootingResultResponse|stable"
          />&gt;&gt;
  - name: >-
      beginGetTroubleshootingResultAndWait(string, string,
      QueryTroubleshootingParameters,
      NetworkWatchersGetTroubleshootingResultOptionalParams)
    uid: >-
      @azure/arm-network.NetworkWatchers.beginGetTroubleshootingResultAndWait|stable
    package: '@azure/arm-network|stable'
    summary: Get the last completed troubleshooting result on a specified resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetTroubleshootingResultAndWait(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        options?: NetworkWatchersGetTroubleshootingResultOptionalParams):
        Promise<NetworkWatchersGetTroubleshootingResultResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-network.QueryTroubleshootingParameters|stable"
            />
          description: >-
            Parameters that define the resource to query the troubleshooting
            result.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetTroubleshootingResultOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetTroubleshootingResultResponse|stable"
          />&gt;
  - name: >-
      beginGetVMSecurityRules(string, string, SecurityGroupViewParameters,
      NetworkWatchersGetVMSecurityRulesOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginGetVMSecurityRules|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        options?: NetworkWatchersGetVMSecurityRulesOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersGetVMSecurityRulesResponse>,
        NetworkWatchersGetVMSecurityRulesResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.SecurityGroupViewParameters|stable" />
          description: Parameters that define the VM to check security groups for.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetVMSecurityRulesOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetVMSecurityRulesResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersGetVMSecurityRulesResponse|stable"
          />&gt;&gt;
  - name: >-
      beginGetVMSecurityRulesAndWait(string, string,
      SecurityGroupViewParameters,
      NetworkWatchersGetVMSecurityRulesOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginGetVMSecurityRulesAndWait|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetVMSecurityRulesAndWait(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        options?: NetworkWatchersGetVMSecurityRulesOptionalParams):
        Promise<NetworkWatchersGetVMSecurityRulesResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.SecurityGroupViewParameters|stable" />
          description: Parameters that define the VM to check security groups for.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetVMSecurityRulesOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetVMSecurityRulesResponse|stable"
          />&gt;
  - name: >-
      beginListAvailableProviders(string, string,
      AvailableProvidersListParameters,
      NetworkWatchersListAvailableProvidersOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginListAvailableProviders|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      NOTE: This feature is currently in preview and still being tested for
      stability. Lists all available

      internet service providers for a specified Azure region.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginListAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options?:
        NetworkWatchersListAvailableProvidersOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersListAvailableProvidersResponse>,
        NetworkWatchersListAvailableProvidersResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-network.AvailableProvidersListParameters|stable" />
          description: Parameters that scope the list of available providers.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersListAvailableProvidersOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersListAvailableProvidersResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersListAvailableProvidersResponse|stable"
          />&gt;&gt;
  - name: >-
      beginListAvailableProvidersAndWait(string, string,
      AvailableProvidersListParameters,
      NetworkWatchersListAvailableProvidersOptionalParams)
    uid: >-
      @azure/arm-network.NetworkWatchers.beginListAvailableProvidersAndWait|stable
    package: '@azure/arm-network|stable'
    summary: >-
      NOTE: This feature is currently in preview and still being tested for
      stability. Lists all available

      internet service providers for a specified Azure region.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginListAvailableProvidersAndWait(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options?:
        NetworkWatchersListAvailableProvidersOptionalParams):
        Promise<NetworkWatchersListAvailableProvidersResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-network.AvailableProvidersListParameters|stable" />
          description: Parameters that scope the list of available providers.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersListAvailableProvidersOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersListAvailableProvidersResponse|stable"
          />&gt;
  - name: >-
      beginSetFlowLogConfiguration(string, string, FlowLogInformation,
      NetworkWatchersSetFlowLogConfigurationOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginSetFlowLogConfiguration|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      Configures flow log and traffic analytics (optional) on a specified
      resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginSetFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, options?:
        NetworkWatchersSetFlowLogConfigurationOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersSetFlowLogConfigurationResponse>,
        NetworkWatchersSetFlowLogConfigurationResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.FlowLogInformation|stable" />
          description: Parameters that define the configuration of flow log.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersSetFlowLogConfigurationOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersSetFlowLogConfigurationResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersSetFlowLogConfigurationResponse|stable"
          />&gt;&gt;
  - name: >-
      beginSetFlowLogConfigurationAndWait(string, string, FlowLogInformation,
      NetworkWatchersSetFlowLogConfigurationOptionalParams)
    uid: >-
      @azure/arm-network.NetworkWatchers.beginSetFlowLogConfigurationAndWait|stable
    package: '@azure/arm-network|stable'
    summary: >-
      Configures flow log and traffic analytics (optional) on a specified
      resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginSetFlowLogConfigurationAndWait(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, options?:
        NetworkWatchersSetFlowLogConfigurationOptionalParams):
        Promise<NetworkWatchersSetFlowLogConfigurationResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.FlowLogInformation|stable" />
          description: Parameters that define the configuration of flow log.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersSetFlowLogConfigurationOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersSetFlowLogConfigurationResponse|stable"
          />&gt;
  - name: >-
      beginVerifyIPFlow(string, string, VerificationIPFlowParameters,
      NetworkWatchersVerifyIPFlowOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginVerifyIPFlow|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginVerifyIPFlow(resourceGroupName: string,
        networkWatcherName: string, parameters: VerificationIPFlowParameters,
        options?: NetworkWatchersVerifyIPFlowOptionalParams):
        Promise<PollerLike<PollOperationState<NetworkWatchersVerifyIPFlowResponse>,
        NetworkWatchersVerifyIPFlowResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-network.VerificationIPFlowParameters|stable"
            />
          description: Parameters that define the IP flow to be verified.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersVerifyIPFlowOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-network.NetworkWatchersVerifyIPFlowResponse|stable"
          />&gt;, <xref
          uid="@azure/arm-network.NetworkWatchersVerifyIPFlowResponse|stable"
          />&gt;&gt;
  - name: >-
      beginVerifyIPFlowAndWait(string, string, VerificationIPFlowParameters,
      NetworkWatchersVerifyIPFlowOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.beginVerifyIPFlowAndWait|stable'
    package: '@azure/arm-network|stable'
    summary: >-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginVerifyIPFlowAndWait(resourceGroupName: string,
        networkWatcherName: string, parameters: VerificationIPFlowParameters,
        options?: NetworkWatchersVerifyIPFlowOptionalParams):
        Promise<NetworkWatchersVerifyIPFlowResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-network.VerificationIPFlowParameters|stable"
            />
          description: Parameters that define the IP flow to be verified.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersVerifyIPFlowOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersVerifyIPFlowResponse|stable"
          />&gt;
  - name: >-
      createOrUpdate(string, string, NetworkWatcher,
      NetworkWatchersCreateOrUpdateOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.createOrUpdate|stable'
    package: '@azure/arm-network|stable'
    summary: Creates or updates a network watcher in the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, networkWatcherName:
        string, parameters: NetworkWatcher, options?:
        NetworkWatchersCreateOrUpdateOptionalParams):
        Promise<NetworkWatchersCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.NetworkWatcher|stable" />
          description: Parameters that define the network watcher resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersCreateOrUpdateOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersCreateOrUpdateResponse|stable"
          />&gt;
  - name: get(string, string, NetworkWatchersGetOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.get|stable'
    package: '@azure/arm-network|stable'
    summary: Gets the specified network watcher by resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        options?: NetworkWatchersGetOptionalParams):
        Promise<NetworkWatchersGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetOptionalParams|stable" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetResponse|stable" />&gt;
  - name: >-
      getTopology(string, string, TopologyParameters,
      NetworkWatchersGetTopologyOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.getTopology|stable'
    package: '@azure/arm-network|stable'
    summary: Gets the current network topology by resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTopology(resourceGroupName: string, networkWatcherName:
        string, parameters: TopologyParameters, options?:
        NetworkWatchersGetTopologyOptionalParams):
        Promise<NetworkWatchersGetTopologyResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.TopologyParameters|stable" />
          description: Parameters that define the representation of topology.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersGetTopologyOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersGetTopologyResponse|stable"
          />&gt;
  - name: list(string, NetworkWatchersListOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.list|stable'
    package: '@azure/arm-network|stable'
    summary: Gets all network watchers by resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        NetworkWatchersListOptionalParams):
        PagedAsyncIterableIterator<NetworkWatcher>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersListOptionalParams|stable" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-network.NetworkWatcher|stable" />&gt;
  - name: listAll(NetworkWatchersListAllOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.listAll|stable'
    package: '@azure/arm-network|stable'
    summary: Gets all network watchers by subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAll(options?: NetworkWatchersListAllOptionalParams):
        PagedAsyncIterableIterator<NetworkWatcher>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersListAllOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-network.NetworkWatcher|stable" />&gt;
  - name: >-
      updateTags(string, string, TagsObject,
      NetworkWatchersUpdateTagsOptionalParams)
    uid: '@azure/arm-network.NetworkWatchers.updateTags|stable'
    package: '@azure/arm-network|stable'
    summary: Updates a network watcher tags.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, networkWatcherName:
        string, parameters: TagsObject, options?:
        NetworkWatchersUpdateTagsOptionalParams):
        Promise<NetworkWatchersUpdateTagsResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.TagsObject|stable" />
          description: Parameters supplied to update network watcher tags.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.NetworkWatchersUpdateTagsOptionalParams|stable"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.NetworkWatchersUpdateTagsResponse|stable"
          />&gt;
