### YamlMime:TSType
name: SparkClientOptionalParams
uid: '@azure/synapse-spark.SparkClientOptionalParams|beta'
package: '@azure/synapse-spark|beta'
summary: Optional parameters.
fullName: SparkClientOptionalParams
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: additionalPolicies
    uid: '@azure/synapse-spark.SparkClientOptionalParams.additionalPolicies|beta'
    package: '@azure/synapse-spark|beta'
    summary: Additional policies to include in the HTTP pipeline.
    fullName: additionalPolicies
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'additionalPolicies?: AdditionalPolicyConfig[]'
      return:
        description: ''
        type: AdditionalPolicyConfig[]
  - name: allowInsecureConnection
    uid: >-
      @azure/synapse-spark.SparkClientOptionalParams.allowInsecureConnection|beta
    package: '@azure/synapse-spark|beta'
    summary: Set to true if the request is sent over HTTP instead of HTTPS
    fullName: allowInsecureConnection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowInsecureConnection?: boolean'
      return:
        description: ''
        type: boolean
  - name: baseUri
    uid: '@azure/synapse-spark.SparkClientOptionalParams.baseUri|beta'
    package: '@azure/synapse-spark|beta'
    summary: >-
      If specified, this is the base URI that requests will be made against for
      this ServiceClient.

      If it is not specified, then all OperationSpecs must contain a baseUrl
      property.
    fullName: baseUri
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'baseUri?: string'
      return:
        description: ''
        type: string
  - name: credential
    uid: '@azure/synapse-spark.SparkClientOptionalParams.credential|beta'
    package: '@azure/synapse-spark|beta'
    summary: Credential used to authenticate the request.
    fullName: credential
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credential?: TokenCredential'
      return:
        description: ''
        type: TokenCredential
  - name: credentialScopes
    uid: '@azure/synapse-spark.SparkClientOptionalParams.credentialScopes|beta'
    package: '@azure/synapse-spark|beta'
    summary: If specified, will be used to build the BearerTokenAuthenticationPolicy.
    fullName: credentialScopes
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentialScopes?: string | string[]'
      return:
        description: ''
        type: string | string[]
  - name: endpoint
    uid: '@azure/synapse-spark.SparkClientOptionalParams.endpoint|beta'
    package: '@azure/synapse-spark|beta'
    summary: Overrides client endpoint.
    fullName: endpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoint?: string'
      return:
        description: ''
        type: string
  - name: httpClient
    uid: '@azure/synapse-spark.SparkClientOptionalParams.httpClient|beta'
    package: '@azure/synapse-spark|beta'
    summary: The HttpClient that will be used to send HTTP requests.
    fullName: httpClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'httpClient?: HttpClient'
      return:
        description: ''
        type: HttpClient
  - name: livyApiVersion
    uid: '@azure/synapse-spark.SparkClientOptionalParams.livyApiVersion|beta'
    package: '@azure/synapse-spark|beta'
    summary: Valid api-version for the request.
    fullName: livyApiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'livyApiVersion?: string'
      return:
        description: ''
        type: string
  - name: pipeline
    uid: '@azure/synapse-spark.SparkClientOptionalParams.pipeline|beta'
    package: '@azure/synapse-spark|beta'
    summary: A customized pipeline to use, otherwise a default one will be created.
    fullName: pipeline
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'pipeline?: Pipeline'
      return:
        description: ''
        type: Pipeline
  - name: proxyOptions
    uid: '@azure/synapse-spark.SparkClientOptionalParams.proxyOptions|beta'
    package: '@azure/synapse-spark|beta'
    summary: Options to configure a proxy for outgoing requests.
    fullName: proxyOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'proxyOptions?: ProxySettings'
      return:
        description: ''
        type: ProxySettings
  - name: redirectOptions
    uid: '@azure/synapse-spark.SparkClientOptionalParams.redirectOptions|beta'
    package: '@azure/synapse-spark|beta'
    summary: Options for how redirect responses are handled.
    fullName: redirectOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'redirectOptions?: RedirectPolicyOptions'
      return:
        description: ''
        type: RedirectPolicyOptions
  - name: requestContentType
    uid: '@azure/synapse-spark.SparkClientOptionalParams.requestContentType|beta'
    package: '@azure/synapse-spark|beta'
    summary: |-
      The default request content type for the service.
      Used if no requestContentType is present on an OperationSpec.
    fullName: requestContentType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'requestContentType?: string'
      return:
        description: ''
        type: string
  - name: retryOptions
    uid: '@azure/synapse-spark.SparkClientOptionalParams.retryOptions|beta'
    package: '@azure/synapse-spark|beta'
    summary: Options that control how to retry failed requests.
    fullName: retryOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'retryOptions?: PipelineRetryOptions'
      return:
        description: ''
        type: PipelineRetryOptions
  - name: userAgentOptions
    uid: '@azure/synapse-spark.SparkClientOptionalParams.userAgentOptions|beta'
    package: '@azure/synapse-spark|beta'
    summary: Options for adding user agent details to outgoing requests.
    fullName: userAgentOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userAgentOptions?: UserAgentPolicyOptions'
      return:
        description: ''
        type: UserAgentPolicyOptions
extends: ServiceClientOptions
