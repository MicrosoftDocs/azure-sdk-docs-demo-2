### YamlMime:TSType
name: EventSubscriptions
uid: '@azure/arm-eventgrid.EventSubscriptions|stable'
package: '@azure/arm-eventgrid|stable'
summary: Class representing a EventSubscriptions.
fullName: EventSubscriptions
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: EventSubscriptions(EventGridManagementClientContext)
    uid: '@azure/arm-eventgrid.EventSubscriptions.constructor|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: Create a EventSubscriptions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new EventSubscriptions(client: EventGridManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventGridManagementClientContext|stable"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, EventSubscription,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventgrid.EventSubscriptions.beginCreateOrUpdate|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      Asynchronously creates a new event subscription or updates an existing
      event subscription based

      on the specified scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(scope: string, eventSubscriptionName:
        string, eventSubscriptionInfo: EventSubscription, options?:
        msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: scope
          type: string
          description: >-
            The identifier of the resource to which the event subscription needs
            to be created

            or updated. The scope can be a subscription, or a resource group, or
            a top level resource

            belonging to a resource provider namespace, or an EventGrid topic.
            For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: >-
            Name of the event subscription. Event subscription names must be

            between 3 and 64 characters in length and should use alphanumeric
            letters only.
        - id: eventSubscriptionInfo
          type: <xref uid="@azure/arm-eventgrid.EventSubscription|stable" />
          description: |-
            Event subscription properties containing the destination and filter
            information.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: beginDeleteMethod(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventgrid.EventSubscriptions.beginDeleteMethod|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: Delete an existing event subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(scope: string, eventSubscriptionName: string,
        options?: msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: >-
      beginUpdate(string, string, EventSubscriptionUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventgrid.EventSubscriptions.beginUpdate|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: Asynchronously updates an existing event subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(scope: string, eventSubscriptionName: string,
        eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters,
        options?: msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of existing event subscription. The scope can be a
            subscription, or a

            resource group, or a top level resource belonging to a resource
            provider namespace, or an

            EventGrid topic. For example, use '/subscriptions/{subscriptionId}/'
            for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription to be updated.
        - id: eventSubscriptionUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionUpdateParameters|stable"
            />
          description: Updated event subscription information.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: >-
      createOrUpdate(string, string, EventSubscription,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventgrid.EventSubscriptions.createOrUpdate|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      Asynchronously creates a new event subscription or updates an existing
      event subscription based

      on the specified scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(scope: string, eventSubscriptionName: string,
        eventSubscriptionInfo: EventSubscription, options?:
        msRest.RequestOptionsBase):
        Promise<Models.EventSubscriptionsCreateOrUpdateResponse>
      parameters:
        - id: scope
          type: string
          description: >-
            The identifier of the resource to which the event subscription needs
            to be created

            or updated. The scope can be a subscription, or a resource group, or
            a top level resource

            belonging to a resource provider namespace, or an EventGrid topic.
            For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: >-
            Name of the event subscription. Event subscription names must be

            between 3 and 64 characters in length and should use alphanumeric
            letters only.
        - id: eventSubscriptionInfo
          type: <xref uid="@azure/arm-eventgrid.EventSubscription|stable" />
          description: |-
            Event subscription properties containing the destination and filter
            information.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsCreateOrUpdateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsCreateOrUpdateResponse|stable"
          />&gt;
  - name: deleteMethod(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventgrid.EventSubscriptions.deleteMethod|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: Delete an existing event subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(scope: string, eventSubscriptionName: string,
        options?: msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: get(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventgrid.EventSubscriptions.get|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: Get properties of an event subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, eventSubscriptionName: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.EventSubscriptionsGetResponse>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsGetResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsGetResponse|stable" />&gt;
  - name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<EventSubscription>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.get_2|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, eventSubscriptionName: string, options:
        RequestOptionsBase, callback: ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscription|stable" />&gt;
          description: |
            The callback
  - name: get(string, string, ServiceCallback<EventSubscription>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.get_1|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, eventSubscriptionName: string, callback:
        ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscription|stable" />&gt;
          description: |
            The callback
  - name: getDeliveryAttributes(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventgrid.EventSubscriptions.getDeliveryAttributes|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: Get all delivery attributes for an event subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeliveryAttributes(scope: string, eventSubscriptionName:
        string, options?: msRest.RequestOptionsBase):
        Promise<Models.EventSubscriptionsGetDeliveryAttributesResponse>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsGetDeliveryAttributesResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsGetDeliveryAttributesResponse|stable"
          />&gt;
  - name: >-
      getDeliveryAttributes(string, string, RequestOptionsBase,
      ServiceCallback<DeliveryAttributeListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.getDeliveryAttributes_2|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeliveryAttributes(scope: string, eventSubscriptionName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<DeliveryAttributeListResult>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.DeliveryAttributeListResult|stable" />&gt;
          description: |
            The callback
  - name: >-
      getDeliveryAttributes(string, string,
      ServiceCallback<DeliveryAttributeListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.getDeliveryAttributes_1|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeliveryAttributes(scope: string, eventSubscriptionName:
        string, callback: ServiceCallback<DeliveryAttributeListResult>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.DeliveryAttributeListResult|stable" />&gt;
          description: |
            The callback
  - name: getFullUrl(string, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-eventgrid.EventSubscriptions.getFullUrl|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: Get the full endpoint URL for an event subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFullUrl(scope: string, eventSubscriptionName: string,
        options?: msRest.RequestOptionsBase):
        Promise<Models.EventSubscriptionsGetFullUrlResponse>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsGetFullUrlResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsGetFullUrlResponse|stable"
          />&gt;
  - name: >-
      getFullUrl(string, string, RequestOptionsBase,
      ServiceCallback<EventSubscriptionFullUrl>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.getFullUrl_2|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFullUrl(scope: string, eventSubscriptionName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<EventSubscriptionFullUrl>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionFullUrl|stable" />&gt;
          description: |
            The callback
  - name: getFullUrl(string, string, ServiceCallback<EventSubscriptionFullUrl>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.getFullUrl_1|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFullUrl(scope: string, eventSubscriptionName: string,
        callback: ServiceCallback<EventSubscriptionFullUrl>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the event subscription. The scope can be a
            subscription, or a resource

            group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid

            topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionFullUrl|stable" />&gt;
          description: |
            The callback
  - name: >-
      listByDomainTopic(string, string, string,
      EventSubscriptionsListByDomainTopicOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopic_2|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDomainTopic(resourceGroupName: string, domainName:
        string, topicName: string, options:
        EventSubscriptionsListByDomainTopicOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type: string
          description: Name of the top level domain.
        - id: topicName
          type: string
          description: Name of the domain topic.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListByDomainTopicOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listByDomainTopic(string, string, string,
      Models.EventSubscriptionsListByDomainTopicOptionalParams)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopic|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all event subscriptions that have been created for a specific domain
      topic.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDomainTopic(resourceGroupName: string, domainName:
        string, topicName: string, options?:
        Models.EventSubscriptionsListByDomainTopicOptionalParams):
        Promise<Models.EventSubscriptionsListByDomainTopicResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type: string
          description: Name of the top level domain.
        - id: topicName
          type: string
          description: Name of the domain topic.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListByDomainTopicOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsListByDomainTopicResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListByDomainTopicResponse|stable"
          />&gt;
  - name: >-
      listByDomainTopic(string, string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopic_1|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDomainTopic(resourceGroupName: string, domainName:
        string, topicName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: domainName
          type: string
          description: Name of the top level domain.
        - id: topicName
          type: string
          description: Name of the domain topic.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listByDomainTopicNext(string,
      EventSubscriptionsListByDomainTopicNextOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopicNext_2|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDomainTopicNext(nextPageLink: string, options:
        EventSubscriptionsListByDomainTopicNextOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListByDomainTopicNextOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listByDomainTopicNext(string,
      Models.EventSubscriptionsListByDomainTopicNextOptionalParams)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopicNext|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all event subscriptions that have been created for a specific domain
      topic.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDomainTopicNext(nextPageLink: string, options?:
        Models.EventSubscriptionsListByDomainTopicNextOptionalParams):
        Promise<Models.EventSubscriptionsListByDomainTopicNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListByDomainTopicNextOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsListByDomainTopicNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListByDomainTopicNextResponse|stable"
          />&gt;
  - name: >-
      listByDomainTopicNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByDomainTopicNext_1|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDomainTopicNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listByResource(string, string, string, string,
      EventSubscriptionsListByResourceOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByResource_2|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResource(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, options:
        EventSubscriptionsListByResourceOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: providerNamespace
          type: string
          description: Namespace of the provider of the topic.
        - id: resourceTypeName
          type: string
          description: Name of the resource type.
        - id: resourceName
          type: string
          description: Name of the resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListByResourceOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listByResource(string, string, string, string,
      Models.EventSubscriptionsListByResourceOptionalParams)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByResource|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: List all event subscriptions that have been created for a specific topic.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResource(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, options?:
        Models.EventSubscriptionsListByResourceOptionalParams):
        Promise<Models.EventSubscriptionsListByResourceResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: providerNamespace
          type: string
          description: Namespace of the provider of the topic.
        - id: resourceTypeName
          type: string
          description: Name of the resource type.
        - id: resourceName
          type: string
          description: Name of the resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListByResourceOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsListByResourceResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListByResourceResponse|stable"
          />&gt;
  - name: >-
      listByResource(string, string, string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByResource_1|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResource(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: providerNamespace
          type: string
          description: Namespace of the provider of the topic.
        - id: resourceTypeName
          type: string
          description: Name of the resource type.
        - id: resourceName
          type: string
          description: Name of the resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listByResourceNext(string,
      EventSubscriptionsListByResourceNextOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByResourceNext_2|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceNext(nextPageLink: string, options:
        EventSubscriptionsListByResourceNextOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListByResourceNextOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listByResourceNext(string,
      Models.EventSubscriptionsListByResourceNextOptionalParams)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByResourceNext|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: List all event subscriptions that have been created for a specific topic.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceNext(nextPageLink: string, options?:
        Models.EventSubscriptionsListByResourceNextOptionalParams):
        Promise<Models.EventSubscriptionsListByResourceNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListByResourceNextOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsListByResourceNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListByResourceNextResponse|stable"
          />&gt;
  - name: listByResourceNext(string, ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listByResourceNext_1|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalByResourceGroup(string,
      EventSubscriptionsListGlobalByResourceGroupOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroup(resourceGroupName: string, options:
        EventSubscriptionsListGlobalByResourceGroupOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalByResourceGroup(string,
      Models.EventSubscriptionsListGlobalByResourceGroupOptionalParams)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all global event subscriptions under a specific Azure subscription
      and resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroup(resourceGroupName: string, options?:
        Models.EventSubscriptionsListGlobalByResourceGroupOptionalParams):
        Promise<Models.EventSubscriptionsListGlobalByResourceGroupResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsListGlobalByResourceGroupResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupResponse|stable"
          />&gt;
  - name: >-
      listGlobalByResourceGroup(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalByResourceGroupForTopicType(string, string,
      EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicType(resourceGroupName:
        string, topicTypeName: string, options:
        EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalByResourceGroupForTopicType(string, string,
      Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all global event subscriptions under a resource group for a specific
      topic type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicType(resourceGroupName:
        string, topicTypeName: string, options?:
        Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams):
        Promise<Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupForTopicTypeOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupForTopicTypeResponse|stable"
          />&gt;
  - name: >-
      listGlobalByResourceGroupForTopicType(string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicType(resourceGroupName:
        string, topicTypeName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalByResourceGroupForTopicTypeNext(string,
      EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicTypeNext(nextPageLink: string,
        options:
        EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalByResourceGroupForTopicTypeNext(string,
      Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all global event subscriptions under a resource group for a specific
      topic type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicTypeNext(nextPageLink: string,
        options?:
        Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextOptionalParams):
        Promise<Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupForTopicTypeNextResponse|stable"
          />&gt;
  - name: >-
      listGlobalByResourceGroupForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicTypeNext(nextPageLink: string,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalByResourceGroupNext(string,
      EventSubscriptionsListGlobalByResourceGroupNextOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroupNext(nextPageLink: string, options:
        EventSubscriptionsListGlobalByResourceGroupNextOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupNextOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalByResourceGroupNext(string,
      Models.EventSubscriptionsListGlobalByResourceGroupNextOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all global event subscriptions under a specific Azure subscription
      and resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroupNext(nextPageLink: string, options?:
        Models.EventSubscriptionsListGlobalByResourceGroupNextOptionalParams):
        Promise<Models.EventSubscriptionsListGlobalByResourceGroupNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupNextOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListGlobalByResourceGroupNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalByResourceGroupNextResponse|stable"
          />&gt;
  - name: >-
      listGlobalByResourceGroupNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalBySubscription(EventSubscriptionsListGlobalBySubscriptionOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscription(options:
        EventSubscriptionsListGlobalBySubscriptionOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalBySubscription(Models.EventSubscriptionsListGlobalBySubscriptionOptionalParams)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscription|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all aggregated global event subscriptions under a specific Azure
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscription(options?:
        Models.EventSubscriptionsListGlobalBySubscriptionOptionalParams):
        Promise<Models.EventSubscriptionsListGlobalBySubscriptionResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsListGlobalBySubscriptionResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionResponse|stable"
          />&gt;
  - name: listGlobalBySubscription(ServiceCallback<EventSubscriptionsListResult>)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscription(callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalBySubscriptionForTopicType(string,
      EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicType(topicTypeName: string,
        options:
        EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalBySubscriptionForTopicType(string,
      Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all global event subscriptions under an Azure subscription for a
      topic type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicType(topicTypeName: string,
        options?:
        Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams):
        Promise<Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeResponse>
      parameters:
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionForTopicTypeOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionForTopicTypeResponse|stable"
          />&gt;
  - name: >-
      listGlobalBySubscriptionForTopicType(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicType(topicTypeName: string,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalBySubscriptionForTopicTypeNext(string,
      EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicTypeNext(nextPageLink: string,
        options:
        EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalBySubscriptionForTopicTypeNext(string,
      Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all global event subscriptions under an Azure subscription for a
      topic type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicTypeNext(nextPageLink: string,
        options?:
        Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextOptionalParams):
        Promise<Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionForTopicTypeNextResponse|stable"
          />&gt;
  - name: >-
      listGlobalBySubscriptionForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicTypeNext(nextPageLink: string,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalBySubscriptionNext(string,
      EventSubscriptionsListGlobalBySubscriptionNextOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscriptionNext(nextPageLink: string, options:
        EventSubscriptionsListGlobalBySubscriptionNextOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionNextOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listGlobalBySubscriptionNext(string,
      Models.EventSubscriptionsListGlobalBySubscriptionNextOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all aggregated global event subscriptions under a specific Azure
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscriptionNext(nextPageLink: string, options?:
        Models.EventSubscriptionsListGlobalBySubscriptionNextOptionalParams):
        Promise<Models.EventSubscriptionsListGlobalBySubscriptionNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionNextOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsListGlobalBySubscriptionNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListGlobalBySubscriptionNextResponse|stable"
          />&gt;
  - name: >-
      listGlobalBySubscriptionNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listGlobalBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalByResourceGroup(string, string,
      EventSubscriptionsListRegionalByResourceGroupOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroup(resourceGroupName: string,
        location: string, options:
        EventSubscriptionsListRegionalByResourceGroupOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: location
          type: string
          description: Name of the location.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalByResourceGroup(string, string,
      Models.EventSubscriptionsListRegionalByResourceGroupOptionalParams)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroup(resourceGroupName: string,
        location: string, options?:
        Models.EventSubscriptionsListRegionalByResourceGroupOptionalParams):
        Promise<Models.EventSubscriptionsListRegionalByResourceGroupResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: location
          type: string
          description: Name of the location.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsListRegionalByResourceGroupResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupResponse|stable"
          />&gt;
  - name: >-
      listRegionalByResourceGroup(string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroup(resourceGroupName: string,
        location: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: location
          type: string
          description: Name of the location.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalByResourceGroupForTopicType(string, string, string,
      EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicType(resourceGroupName:
        string, location: string, topicTypeName: string, options:
        EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: location
          type: string
          description: Name of the location.
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalByResourceGroupForTopicType(string, string, string,
      Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      resource group and topic type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicType(resourceGroupName:
        string, location: string, topicTypeName: string, options?:
        Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams):
        Promise<Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: location
          type: string
          description: Name of the location.
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupForTopicTypeOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupForTopicTypeResponse|stable"
          />&gt;
  - name: >-
      listRegionalByResourceGroupForTopicType(string, string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicType(resourceGroupName:
        string, location: string, topicTypeName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: location
          type: string
          description: Name of the location.
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalByResourceGroupForTopicTypeNext(string,
      EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicTypeNext(nextPageLink:
        string, options:
        EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalByResourceGroupForTopicTypeNext(string,
      Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      resource group and topic type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicTypeNext(nextPageLink:
        string, options?:
        Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextOptionalParams):
        Promise<Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupForTopicTypeNextResponse|stable"
          />&gt;
  - name: >-
      listRegionalByResourceGroupForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicTypeNext(nextPageLink:
        string, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalByResourceGroupNext(string,
      EventSubscriptionsListRegionalByResourceGroupNextOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroupNext(nextPageLink: string, options:
        EventSubscriptionsListRegionalByResourceGroupNextOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupNextOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalByResourceGroupNext(string,
      Models.EventSubscriptionsListRegionalByResourceGroupNextOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroupNext(nextPageLink: string, options?:
        Models.EventSubscriptionsListRegionalByResourceGroupNextOptionalParams):
        Promise<Models.EventSubscriptionsListRegionalByResourceGroupNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupNextOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListRegionalByResourceGroupNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalByResourceGroupNextResponse|stable"
          />&gt;
  - name: >-
      listRegionalByResourceGroupNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalBySubscription(string,
      EventSubscriptionsListRegionalBySubscriptionOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscription(location: string, options:
        EventSubscriptionsListRegionalBySubscriptionOptionalParams, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type: string
          description: Name of the location.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalBySubscription(string,
      Models.EventSubscriptionsListRegionalBySubscriptionOptionalParams)
    uid: '@azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscription|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscription(location: string, options?:
        Models.EventSubscriptionsListRegionalBySubscriptionOptionalParams):
        Promise<Models.EventSubscriptionsListRegionalBySubscriptionResponse>
      parameters:
        - id: location
          type: string
          description: Name of the location.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionOptionalParams|stable"
            />
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsListRegionalBySubscriptionResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionResponse|stable"
          />&gt;
  - name: >-
      listRegionalBySubscription(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscription(location: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type: string
          description: Name of the location.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalBySubscriptionForTopicType(string, string,
      EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicType(location: string,
        topicTypeName: string, options:
        EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type: string
          description: Name of the location.
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalBySubscriptionForTopicType(string, string,
      Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      topic type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicType(location: string,
        topicTypeName: string, options?:
        Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams):
        Promise<Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeResponse>
      parameters:
        - id: location
          type: string
          description: Name of the location.
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionForTopicTypeOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionForTopicTypeResponse|stable"
          />&gt;
  - name: >-
      listRegionalBySubscriptionForTopicType(string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicType(location: string,
        topicTypeName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type: string
          description: Name of the location.
        - id: topicTypeName
          type: string
          description: Name of the topic type.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalBySubscriptionForTopicTypeNext(string,
      EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicTypeNext(nextPageLink:
        string, options:
        EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalBySubscriptionForTopicTypeNext(string,
      Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription and

      topic type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicTypeNext(nextPageLink:
        string, options?:
        Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextOptionalParams):
        Promise<Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionForTopicTypeNextResponse|stable"
          />&gt;
  - name: >-
      listRegionalBySubscriptionForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicTypeNext(nextPageLink:
        string, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalBySubscriptionNext(string,
      EventSubscriptionsListRegionalBySubscriptionNextOptionalParams,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext_2|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscriptionNext(nextPageLink: string, options:
        EventSubscriptionsListRegionalBySubscriptionNextOptionalParams,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionNextOptionalParams|stable"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      listRegionalBySubscriptionNext(string,
      Models.EventSubscriptionsListRegionalBySubscriptionNextOptionalParams)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext|stable
    package: '@azure/arm-eventgrid|stable'
    summary: >-
      List all event subscriptions from the given location under a specific
      Azure subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscriptionNext(nextPageLink: string, options?:
        Models.EventSubscriptionsListRegionalBySubscriptionNextOptionalParams):
        Promise<Models.EventSubscriptionsListRegionalBySubscriptionNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionNextOptionalParams|stable"
            />
          description: ''
      return:
        description: >-
          Promise<Models.EventSubscriptionsListRegionalBySubscriptionNextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsListRegionalBySubscriptionNextResponse|stable"
          />&gt;
  - name: >-
      listRegionalBySubscriptionNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    uid: >-
      @azure/arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext_1|stable
    package: '@azure/arm-eventgrid|stable'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRegionalBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-eventgrid.EventSubscriptionsListResult|stable"
            />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, EventSubscriptionUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-eventgrid.EventSubscriptions.update|stable'
    package: '@azure/arm-eventgrid|stable'
    summary: Asynchronously updates an existing event subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(scope: string, eventSubscriptionName: string,
        eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters,
        options?: msRest.RequestOptionsBase):
        Promise<Models.EventSubscriptionsUpdateResponse>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of existing event subscription. The scope can be a
            subscription, or a

            resource group, or a top level resource belonging to a resource
            provider namespace, or an

            EventGrid topic. For example, use '/subscriptions/{subscriptionId}/'
            for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type: string
          description: Name of the event subscription to be updated.
        - id: eventSubscriptionUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-eventgrid.EventSubscriptionUpdateParameters|stable"
            />
          description: Updated event subscription information.
        - id: options
          type: msRest.RequestOptionsBase
          description: ''
      return:
        description: Promise<Models.EventSubscriptionsUpdateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.EventSubscriptionsUpdateResponse|stable"
          />&gt;
