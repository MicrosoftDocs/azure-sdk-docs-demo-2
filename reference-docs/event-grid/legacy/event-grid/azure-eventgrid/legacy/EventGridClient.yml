### YamlMime:TSType
name: EventGridClient
uid: azure-eventgrid.EventGridClient|legacy
package: azure-eventgrid|legacy
summary: ''
fullName: EventGridClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: EventGridClient(ServiceClientCredentials, AzureServiceClientOptions)
    uid: azure-eventgrid.EventGridClient.constructor|legacy
    package: azure-eventgrid|legacy
    summary: Initializes a new instance of the EventGridClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new EventGridClient(credentials: ServiceClientCredentials, options?:
        AzureServiceClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials
          description: |
            Credentials needed for the client to connect to Azure.
        - id: options
          type: AzureServiceClientOptions
          description: ''
properties:
  - name: acceptLanguage
    uid: azure-eventgrid.EventGridClient.acceptLanguage|legacy
    package: azure-eventgrid|legacy
    summary: ''
    fullName: acceptLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acceptLanguage: string'
      return:
        description: ''
        type: string
  - name: apiVersion
    uid: azure-eventgrid.EventGridClient.apiVersion|legacy
    package: azure-eventgrid|legacy
    summary: ''
    fullName: apiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion: string'
      return:
        description: ''
        type: string
  - name: credentials
    uid: azure-eventgrid.EventGridClient.credentials|legacy
    package: azure-eventgrid|legacy
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        description: ''
        type: ServiceClientCredentials
  - name: generateClientRequestId
    uid: azure-eventgrid.EventGridClient.generateClientRequestId|legacy
    package: azure-eventgrid|legacy
    summary: ''
    fullName: generateClientRequestId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'generateClientRequestId: boolean'
      return:
        description: ''
        type: boolean
  - name: longRunningOperationRetryTimeout
    uid: azure-eventgrid.EventGridClient.longRunningOperationRetryTimeout|legacy
    package: azure-eventgrid|legacy
    summary: ''
    fullName: longRunningOperationRetryTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'longRunningOperationRetryTimeout: number'
      return:
        description: ''
        type: number
methods:
  - name: addUserAgentInfo(any)
    uid: azure-eventgrid.EventGridClient.addUserAgentInfo|legacy
    package: azure-eventgrid|legacy
    summary: Adds custom information to user agent header
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type: any
          description: |
            information to be added to user agent header, as string.
  - name: >-
      getLongRunningOperationResult<TResult>(HttpOperationResponse<TResult>,
      RequestOptions)
    uid: azure-eventgrid.EventGridClient.getLongRunningOperationResult_2|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLongRunningOperationResult<TResult>(resultOfInitialRequest:
        HttpOperationResponse<TResult>, options?: RequestOptions):
        Promise<TResult>
      parameters:
        - id: resultOfInitialRequest
          type: HttpOperationResponse&lt;TResult&gt;
          description: ''
        - id: options
          type: RequestOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;TResult&gt;
  - name: >-
      getLongRunningOperationResult<TResult>(HttpOperationResponse<TResult>,
      RequestOptions, ServiceCallback<TResult>)
    uid: azure-eventgrid.EventGridClient.getLongRunningOperationResult|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLongRunningOperationResult<TResult>(resultOfInitialRequest:
        HttpOperationResponse<TResult>, options: RequestOptions, callback:
        ServiceCallback<TResult>)
      parameters:
        - id: resultOfInitialRequest
          type: HttpOperationResponse&lt;TResult&gt;
          description: ''
        - id: options
          type: RequestOptions
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
  - name: >-
      getLongRunningOperationResult<TResult>(HttpOperationResponse<TResult>,
      ServiceCallback<TResult>)
    uid: azure-eventgrid.EventGridClient.getLongRunningOperationResult_1|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLongRunningOperationResult<TResult>(resultOfInitialRequest:
        HttpOperationResponse<TResult>, callback: ServiceCallback<TResult>)
      parameters:
        - id: resultOfInitialRequest
          type: HttpOperationResponse&lt;TResult&gt;
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
  - name: getPackageJsonInfo(string)
    uid: azure-eventgrid.EventGridClient.getPackageJsonInfo|legacy
    package: azure-eventgrid|legacy
    summary: >-
      Attempts to find package.json for the given azure nodejs package.

      If found, returns the name and version of the package by reading the
      package.json

      If package.json is not found, returns a default value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPackageJsonInfo(managementClientDir: string): { name:
        string, version: string }
      parameters:
        - id: managementClientDir
          type: string
          description: pass the directory of the specific azure management client.
      return:
        description: packageJsonInfo - "name" and "version" of the desired package.
        type: '{ name: string, version: string }'
  - name: publishEvents(string, EventGridEvent[], ServiceCallback<void>)
    uid: azure-eventgrid.EventGridClient.publishEvents_1|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function publishEvents(topicHostname: string, events: EventGridEvent[],
        callback: ServiceCallback<void>)
      parameters:
        - id: topicHostname
          type: string
          description: ''
        - id: events
          type: <xref uid="azure-eventgrid.EventGridEvent|legacy" />[]
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      publishEvents(string, EventGridEvent[], { customHeaders?: [key: string]:
      string })
    uid: azure-eventgrid.EventGridClient.publishEvents|legacy
    package: azure-eventgrid|legacy
    summary: Publishes a batch of events to an Azure Event Grid topic.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function publishEvents(topicHostname: string, events: EventGridEvent[],
        options?: { customHeaders?: [key: string]: string }): Promise<void>
      parameters:
        - id: topicHostname
          type: string
          description: |
            The host name of the topic, e.g.
            topic1.westus2-1.eventgrid.azure.net
        - id: events
          type: <xref uid="azure-eventgrid.EventGridEvent|legacy" />[]
          description: |
            An array of events to be published to Event Grid.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      publishEvents(string, EventGridEvent[], { customHeaders?: [key: string]:
      string }, ServiceCallback<void>)
    uid: azure-eventgrid.EventGridClient.publishEvents_2|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function publishEvents(topicHostname: string, events: EventGridEvent[],
        options: { customHeaders?: [key: string]: string }, callback:
        ServiceCallback<void>)
      parameters:
        - id: topicHostname
          type: string
          description: ''
        - id: events
          type: <xref uid="azure-eventgrid.EventGridEvent|legacy" />[]
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      publishEventsWithHttpOperationResponse(string, EventGridEvent[], {
      customHeaders?: [key: string]: string })
    uid: >-
      azure-eventgrid.EventGridClient.publishEventsWithHttpOperationResponse|legacy
    package: azure-eventgrid|legacy
    summary: Publishes a batch of events to an Azure Event Grid topic.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function publishEventsWithHttpOperationResponse(topicHostname: string,
        events: EventGridEvent[], options?: { customHeaders?: [key: string]:
        string }): Promise<HttpOperationResponse<void>>
      parameters:
        - id: topicHostname
          type: string
          description: |
            The host name of the topic, e.g.
            topic1.westus2-1.eventgrid.azure.net
        - id: events
          type: <xref uid="azure-eventgrid.EventGridEvent|legacy" />[]
          description: |
            An array of events to be published to Event Grid.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: >-
      sendLongRunningRequest<TResult>(LongRunningUrlBasedRequestPrepareOptions |
      LongRunningPathTemplateBasedRequestPrepareOptions)
    uid: azure-eventgrid.EventGridClient.sendLongRunningRequest_1|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest<TResult>(options:
        LongRunningUrlBasedRequestPrepareOptions |
        LongRunningPathTemplateBasedRequestPrepareOptions): Promise<TResult>
      parameters:
        - id: options
          type: >-
            LongRunningUrlBasedRequestPrepareOptions |
            LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;TResult&gt;
  - name: >-
      sendLongRunningRequest<TResult>(LongRunningUrlBasedRequestPrepareOptions |
      LongRunningPathTemplateBasedRequestPrepareOptions,
      ServiceCallback<TResult>)
    uid: azure-eventgrid.EventGridClient.sendLongRunningRequest|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest<TResult>(options:
        LongRunningUrlBasedRequestPrepareOptions |
        LongRunningPathTemplateBasedRequestPrepareOptions, callback:
        ServiceCallback<TResult>)
      parameters:
        - id: options
          type: >-
            LongRunningUrlBasedRequestPrepareOptions |
            LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
  - name: >-
      sendLongRunningRequestWithHttpOperationResponse<TResult>(LongRunningUrlBasedRequestPrepareOptions
      | LongRunningPathTemplateBasedRequestPrepareOptions)
    uid: >-
      azure-eventgrid.EventGridClient.sendLongRunningRequestWithHttpOperationResponse|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        sendLongRunningRequestWithHttpOperationResponse<TResult>(options:
        LongRunningUrlBasedRequestPrepareOptions |
        LongRunningPathTemplateBasedRequestPrepareOptions):
        Promise<HttpOperationResponse<TResult>>
      parameters:
        - id: options
          type: >-
            LongRunningUrlBasedRequestPrepareOptions |
            LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;HttpOperationResponse&lt;TResult&gt;&gt;
  - name: >-
      sendRequest<TResult>(PathTemplateBasedRequestPrepareOptions |
      UrlBasedRequestPrepareOptions)
    uid: azure-eventgrid.EventGridClient.sendRequest_1|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest<TResult>(options:
        PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions):
        Promise<TResult>
      parameters:
        - id: options
          type: >-
            PathTemplateBasedRequestPrepareOptions |
            UrlBasedRequestPrepareOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;TResult&gt;
  - name: >-
      sendRequest<TResult>(PathTemplateBasedRequestPrepareOptions |
      UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)
    uid: azure-eventgrid.EventGridClient.sendRequest|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest<TResult>(options:
        PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions,
        callback: ServiceCallback<TResult>)
      parameters:
        - id: options
          type: >-
            PathTemplateBasedRequestPrepareOptions |
            UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
  - name: >-
      sendRequestWithHttpOperationResponse<TResult>(PathTemplateBasedRequestPrepareOptions
      | UrlBasedRequestPrepareOptions)
    uid: >-
      azure-eventgrid.EventGridClient.sendRequestWithHttpOperationResponse|legacy
    package: azure-eventgrid|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequestWithHttpOperationResponse<TResult>(options:
        PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions):
        Promise<HttpOperationResponse<TResult>>
      parameters:
        - id: options
          type: >-
            PathTemplateBasedRequestPrepareOptions |
            UrlBasedRequestPrepareOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;HttpOperationResponse&lt;TResult&gt;&gt;
extends: AzureServiceClient
