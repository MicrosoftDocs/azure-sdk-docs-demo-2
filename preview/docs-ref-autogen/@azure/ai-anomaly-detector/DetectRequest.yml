### YamlMime:TSType
name: DetectRequest
uid: '@azure/ai-anomaly-detector.DetectRequest'
package: '@azure/ai-anomaly-detector'
summary: The request of entire or last anomaly detection.
fullName: DetectRequest
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: customInterval
    uid: '@azure/ai-anomaly-detector.DetectRequest.customInterval'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      Custom Interval is used to set non-standard time interval, for example, if
      the series is 5 minutes, request can be set as {"granularity":"minutely",
      "customInterval":5}.
    fullName: customInterval
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'customInterval?: number'
      return:
        description: ''
        type: number
  - name: granularity
    uid: '@azure/ai-anomaly-detector.DetectRequest.granularity'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      Optional argument, can be one of yearly, monthly, weekly, daily, hourly,
      minutely, secondly, microsecond or none. If granularity is not present, it
      will be none by default. If granularity is none, the timestamp property in
      time series point can be absent.
    fullName: granularity
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'granularity?: TimeGranularity'
      return:
        description: ''
        type: <xref uid="@azure/ai-anomaly-detector.TimeGranularity" />
  - name: imputeFixedValue
    uid: '@azure/ai-anomaly-detector.DetectRequest.imputeFixedValue'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      Used to specify the value to fill, it's used when granularity is not
      "none" and imputeMode is "fixed".
    fullName: imputeFixedValue
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'imputeFixedValue?: number'
      return:
        description: ''
        type: number
  - name: imputeMode
    uid: '@azure/ai-anomaly-detector.DetectRequest.imputeMode'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      Used to specify how to deal with missing values in the input series, it's
      used when granularity is not "none".
    fullName: imputeMode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'imputeMode?: ImputeMode'
      return:
        description: ''
        type: <xref uid="@azure/ai-anomaly-detector.ImputeMode" />
  - name: maxAnomalyRatio
    uid: '@azure/ai-anomaly-detector.DetectRequest.maxAnomalyRatio'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      Optional argument, advanced model parameter, max anomaly ratio in a time
      series.
    fullName: maxAnomalyRatio
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxAnomalyRatio?: number'
      return:
        description: ''
        type: number
  - name: period
    uid: '@azure/ai-anomaly-detector.DetectRequest.period'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      Optional argument, periodic value of a time series. If the value is null
      or does not present, the API will determine the period automatically.
    fullName: period
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'period?: number'
      return:
        description: ''
        type: number
  - name: sensitivity
    uid: '@azure/ai-anomaly-detector.DetectRequest.sensitivity'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      Optional argument, advanced model parameter, between 0-99, the lower the
      value is, the larger the margin value will be which means less anomalies
      will be accepted.
    fullName: sensitivity
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sensitivity?: number'
      return:
        description: ''
        type: number
  - name: series
    uid: '@azure/ai-anomaly-detector.DetectRequest.series'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      Time series data points. Points should be sorted by timestamp in ascending
      order to match the anomaly detection result. If the data is not sorted
      correctly or there is duplicated timestamp, the API will not work. In such
      case, an error message will be returned.
    fullName: series
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'series: TimeSeriesPoint[]'
      return:
        description: ''
        type: '<xref uid="@azure/ai-anomaly-detector.TimeSeriesPoint" />[]'
