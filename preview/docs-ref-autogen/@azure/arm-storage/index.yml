### YamlMime:TSPackage
uid: '@azure/arm-storage'
name: '@azure/arm-storage'
summary: ''
type: package
classes:
  - '@azure/arm-storage.CoreClientLro'
  - '@azure/arm-storage.StorageManagementClient'
  - '@azure/arm-storage.StorageManagementClientContext'
  - '@azure/arm-storage.LroEngine'
  - '@azure/arm-storage.GenericPollOperation'
  - '@azure/arm-storage.RestError'
  - '@azure/arm-storage.BlobContainersImpl'
  - '@azure/arm-storage.BlobInventoryPoliciesImpl'
  - '@azure/arm-storage.BlobServicesImpl'
  - '@azure/arm-storage.DeletedAccountsImpl'
  - '@azure/arm-storage.EncryptionScopesImpl'
  - '@azure/arm-storage.FileServicesImpl'
  - '@azure/arm-storage.FileSharesImpl'
  - '@azure/arm-storage.ManagementPoliciesImpl'
  - '@azure/arm-storage.ObjectReplicationPoliciesOperationsImpl'
  - '@azure/arm-storage.OperationsImpl'
  - '@azure/arm-storage.PrivateEndpointConnectionsImpl'
  - '@azure/arm-storage.PrivateLinkResourcesImpl'
  - '@azure/arm-storage.QueueImpl'
  - '@azure/arm-storage.QueueServicesImpl'
  - '@azure/arm-storage.SkusImpl'
  - '@azure/arm-storage.StorageAccountsImpl'
  - '@azure/arm-storage.TableOperationsImpl'
  - '@azure/arm-storage.TableServicesImpl'
  - '@azure/arm-storage.UsagesImpl'
typeAliases:
  - '@azure/arm-storage.SendOperationFn'
  - '@azure/arm-storage.AccessTier'
  - '@azure/arm-storage.AccountStatus'
  - '@azure/arm-storage.AzureEntityResource'
  - '@azure/arm-storage.BlobContainer'
  - '@azure/arm-storage.BlobContainersClearLegalHoldResponse'
  - '@azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyResponse'
  - '@azure/arm-storage.BlobContainersCreateResponse'
  - '@azure/arm-storage.BlobContainersDeleteImmutabilityPolicyResponse'
  - '@azure/arm-storage.BlobContainersExtendImmutabilityPolicyResponse'
  - '@azure/arm-storage.BlobContainersGetImmutabilityPolicyResponse'
  - '@azure/arm-storage.BlobContainersGetResponse'
  - '@azure/arm-storage.BlobContainersLeaseResponse'
  - '@azure/arm-storage.BlobContainersListNextResponse'
  - '@azure/arm-storage.BlobContainersListResponse'
  - '@azure/arm-storage.BlobContainersLockImmutabilityPolicyResponse'
  - '@azure/arm-storage.BlobContainersSetLegalHoldResponse'
  - '@azure/arm-storage.BlobContainersUpdateResponse'
  - '@azure/arm-storage.BlobInventoryPoliciesCreateOrUpdateResponse'
  - '@azure/arm-storage.BlobInventoryPoliciesGetResponse'
  - '@azure/arm-storage.BlobInventoryPoliciesListResponse'
  - '@azure/arm-storage.BlobInventoryPolicy'
  - '@azure/arm-storage.BlobInventoryPolicyName'
  - '@azure/arm-storage.BlobRestoreProgressStatus'
  - '@azure/arm-storage.BlobServiceProperties'
  - '@azure/arm-storage.BlobServicesGetServicePropertiesResponse'
  - '@azure/arm-storage.BlobServicesListResponse'
  - '@azure/arm-storage.BlobServicesSetServicePropertiesResponse'
  - '@azure/arm-storage.Bypass'
  - '@azure/arm-storage.CorsRuleAllowedMethodsItem'
  - '@azure/arm-storage.CreatedByType'
  - '@azure/arm-storage.DefaultAction'
  - '@azure/arm-storage.DefaultSharePermission'
  - '@azure/arm-storage.DeletedAccount'
  - '@azure/arm-storage.DeletedAccountsGetResponse'
  - '@azure/arm-storage.DeletedAccountsListNextResponse'
  - '@azure/arm-storage.DeletedAccountsListResponse'
  - '@azure/arm-storage.DirectoryServiceOptions'
  - '@azure/arm-storage.EnabledProtocols'
  - '@azure/arm-storage.EncryptionScope'
  - '@azure/arm-storage.EncryptionScopeSource'
  - '@azure/arm-storage.EncryptionScopeState'
  - '@azure/arm-storage.EncryptionScopesGetResponse'
  - '@azure/arm-storage.EncryptionScopesListNextResponse'
  - '@azure/arm-storage.EncryptionScopesListResponse'
  - '@azure/arm-storage.EncryptionScopesPatchResponse'
  - '@azure/arm-storage.EncryptionScopesPutResponse'
  - '@azure/arm-storage.ExpirationAction'
  - '@azure/arm-storage.ExtendedLocationTypes'
  - '@azure/arm-storage.FileServiceProperties'
  - '@azure/arm-storage.FileServicesGetServicePropertiesResponse'
  - '@azure/arm-storage.FileServicesListResponse'
  - '@azure/arm-storage.FileServicesSetServicePropertiesResponse'
  - '@azure/arm-storage.FileShare'
  - '@azure/arm-storage.FileShareItem'
  - '@azure/arm-storage.FileSharesCreateResponse'
  - '@azure/arm-storage.FileSharesGetResponse'
  - '@azure/arm-storage.FileSharesLeaseResponse'
  - '@azure/arm-storage.FileSharesListNextResponse'
  - '@azure/arm-storage.FileSharesListResponse'
  - '@azure/arm-storage.FileSharesUpdateResponse'
  - '@azure/arm-storage.Format'
  - '@azure/arm-storage.GeoReplicationStatus'
  - '@azure/arm-storage.HttpProtocol'
  - '@azure/arm-storage.IdentityType'
  - '@azure/arm-storage.ImmutabilityPolicy'
  - '@azure/arm-storage.ImmutabilityPolicyState'
  - '@azure/arm-storage.ImmutabilityPolicyUpdateType'
  - '@azure/arm-storage.InventoryRuleType'
  - '@azure/arm-storage.KeyPermission'
  - '@azure/arm-storage.KeySource'
  - '@azure/arm-storage.KeyType_2'
  - '@azure/arm-storage.Kind'
  - '@azure/arm-storage.LargeFileSharesState'
  - '@azure/arm-storage.LeaseContainerRequestAction'
  - '@azure/arm-storage.LeaseDuration'
  - '@azure/arm-storage.LeaseShareAction'
  - '@azure/arm-storage.LeaseState'
  - '@azure/arm-storage.LeaseStatus'
  - '@azure/arm-storage.ListContainerItem'
  - '@azure/arm-storage.ListContainersInclude'
  - '@azure/arm-storage.ListQueue'
  - '@azure/arm-storage.ManagementPoliciesCreateOrUpdateResponse'
  - '@azure/arm-storage.ManagementPoliciesGetResponse'
  - '@azure/arm-storage.ManagementPolicy'
  - '@azure/arm-storage.ManagementPolicyName'
  - '@azure/arm-storage.MigrationState'
  - '@azure/arm-storage.MinimumTlsVersion'
  - '@azure/arm-storage.Name'
  - '@azure/arm-storage.ObjectReplicationPoliciesOperationsCreateOrUpdateResponse'
  - '@azure/arm-storage.ObjectReplicationPoliciesOperationsGetResponse'
  - '@azure/arm-storage.ObjectReplicationPoliciesOperationsListResponse'
  - '@azure/arm-storage.ObjectReplicationPolicy'
  - '@azure/arm-storage.ObjectType'
  - '@azure/arm-storage.OperationsListResponse'
  - '@azure/arm-storage.Permissions_2'
  - '@azure/arm-storage.PrivateEndpointConnection'
  - '@azure/arm-storage.PrivateEndpointConnectionProvisioningState'
  - '@azure/arm-storage.PrivateEndpointConnectionsGetResponse'
  - '@azure/arm-storage.PrivateEndpointConnectionsListResponse'
  - '@azure/arm-storage.PrivateEndpointConnectionsPutResponse'
  - '@azure/arm-storage.PrivateEndpointServiceConnectionStatus'
  - '@azure/arm-storage.PrivateLinkResource'
  - '@azure/arm-storage.PrivateLinkResourcesListByStorageAccountResponse'
  - '@azure/arm-storage.ProvisioningState'
  - '@azure/arm-storage.ProxyResource'
  - '@azure/arm-storage.PublicAccess'
  - '@azure/arm-storage.QueueCreateResponse'
  - '@azure/arm-storage.QueueGetResponse'
  - '@azure/arm-storage.QueueListNextResponse'
  - '@azure/arm-storage.QueueListResponse'
  - '@azure/arm-storage.QueueServiceProperties'
  - '@azure/arm-storage.QueueServicesGetServicePropertiesResponse'
  - '@azure/arm-storage.QueueServicesListResponse'
  - '@azure/arm-storage.QueueServicesSetServicePropertiesResponse'
  - '@azure/arm-storage.QueueUpdateResponse'
  - '@azure/arm-storage.Reason'
  - '@azure/arm-storage.ReasonCode'
  - '@azure/arm-storage.RootSquashType'
  - '@azure/arm-storage.RoutingChoice'
  - '@azure/arm-storage.RuleType'
  - '@azure/arm-storage.Schedule'
  - '@azure/arm-storage.Services'
  - '@azure/arm-storage.ShareAccessTier'
  - '@azure/arm-storage.SignedResource'
  - '@azure/arm-storage.SignedResourceTypes'
  - '@azure/arm-storage.SkuName'
  - '@azure/arm-storage.SkuTier'
  - '@azure/arm-storage.SkusListResponse'
  - '@azure/arm-storage.State'
  - '@azure/arm-storage.StorageAccount'
  - '@azure/arm-storage.StorageAccountExpand'
  - '@azure/arm-storage.StorageAccountsCheckNameAvailabilityResponse'
  - '@azure/arm-storage.StorageAccountsCreateResponse'
  - '@azure/arm-storage.StorageAccountsGetPropertiesResponse'
  - '@azure/arm-storage.StorageAccountsListAccountSASResponse'
  - '@azure/arm-storage.StorageAccountsListByResourceGroupNextResponse'
  - '@azure/arm-storage.StorageAccountsListByResourceGroupResponse'
  - '@azure/arm-storage.StorageAccountsListKeysResponse'
  - '@azure/arm-storage.StorageAccountsListNextResponse'
  - '@azure/arm-storage.StorageAccountsListResponse'
  - '@azure/arm-storage.StorageAccountsListServiceSASResponse'
  - '@azure/arm-storage.StorageAccountsRegenerateKeyResponse'
  - '@azure/arm-storage.StorageAccountsRestoreBlobRangesResponse'
  - '@azure/arm-storage.StorageAccountsUpdateResponse'
  - '@azure/arm-storage.StorageQueue'
  - '@azure/arm-storage.Table'
  - '@azure/arm-storage.TableOperationsCreateResponse'
  - '@azure/arm-storage.TableOperationsGetResponse'
  - '@azure/arm-storage.TableOperationsListNextResponse'
  - '@azure/arm-storage.TableOperationsListResponse'
  - '@azure/arm-storage.TableOperationsUpdateResponse'
  - '@azure/arm-storage.TableServiceProperties'
  - '@azure/arm-storage.TableServicesGetServicePropertiesResponse'
  - '@azure/arm-storage.TableServicesListResponse'
  - '@azure/arm-storage.TableServicesSetServicePropertiesResponse'
  - '@azure/arm-storage.TrackedResource'
  - '@azure/arm-storage.UsageUnit'
  - '@azure/arm-storage.UsagesListByLocationResponse'
  - '@azure/arm-storage.GetLroStatusFromResponse'
  - '@azure/arm-storage.LroMode'
  - '@azure/arm-storage.LroResourceLocationConfig'
  - '@azure/arm-storage.LroStatus'
  - '@azure/arm-storage.ResumablePollOperationState'
  - '@azure/arm-storage.KeyType'
  - '@azure/arm-storage.Permissions'
functions:
  - name: >-
      createPollingMethod<TResult>(SendOperationFn<TResult>,
      GetLroStatusFromResponse<TResult>, OperationArguments, OperationSpec,
      LroMode)
    uid: '@azure/arm-storage.createPollingMethod'
    package: '@azure/arm-storage'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createPollingMethod<TResult>(sendOperationFn:
        SendOperationFn<TResult>, GetLroStatusFromResponse:
        GetLroStatusFromResponse<TResult>, args: OperationArguments, spec:
        OperationSpec, mode?: LroMode): (path?: undefined | string) =>
        Promise<LroStatus<TResult>>
      parameters:
        - id: sendOperationFn
          type: <xref uid="@azure/arm-storage.SendOperationFn" />&lt;TResult&gt;
          description: ''
        - id: GetLroStatusFromResponse
          type: GetLroStatusFromResponse&lt;TResult&gt;
          description: ''
        - id: args
          type: OperationArguments
          description: ''
        - id: spec
          type: OperationSpec
          description: ''
        - id: mode
          type: <xref uid="@azure/arm-storage.LroMode" />
          description: ''
      return:
        description: ''
        type: >-
          (path?: undefined | string) =&gt;
          Promise&lt;LroStatus&lt;TResult&gt;&gt;
  - name: getSpecPath(OperationSpec)
    uid: '@azure/arm-storage.getSpecPath'
    package: '@azure/arm-storage'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSpecPath(spec: OperationSpec): string'
      parameters:
        - id: spec
          type: OperationSpec
          description: ''
      return:
        description: ''
        type: string
  - name: shouldDeserializeLro(undefined | string)
    uid: '@azure/arm-storage.shouldDeserializeLro'
    package: '@azure/arm-storage'
    summary: >-
      We need to selectively deserialize our responses, only deserializing if we

      are in a final Lro response, not deserializing any polling non-terminal
      responses
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function shouldDeserializeLro(lroResourceLocationConfig?: undefined |
        string): (response: FullOperationResponse) => boolean
      parameters:
        - id: lroResourceLocationConfig
          type: undefined | string
          description: ''
      return:
        description: ''
        type: '(response: FullOperationResponse) =&gt; boolean'
  - name: >-
      processAzureAsyncOperationResult<TResult>(LongRunningOperation<TResult>,
      undefined | string, LroResourceLocationConfig)
    uid: '@azure/arm-storage.processAzureAsyncOperationResult'
    package: '@azure/arm-storage'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function processAzureAsyncOperationResult<TResult>(lro:
        LongRunningOperation<TResult>, resourceLocation?: undefined | string,
        lroResourceLocationConfig?: LroResourceLocationConfig): (rawResponse:
        RawResponse, flatResponse: TResult) => LroStatus<TResult>
      parameters:
        - id: lro
          type: >-
            <xref uid="@azure/arm-storage.LongRunningOperation"
            />&lt;TResult&gt;
          description: ''
        - id: resourceLocation
          type: undefined | string
          description: ''
        - id: lroResourceLocationConfig
          type: <xref uid="@azure/arm-storage.LroResourceLocationConfig" />
          description: ''
      return:
        description: ''
        type: >-
          (rawResponse: RawResponse, flatResponse: TResult) =&gt;
          LroStatus&lt;TResult&gt;
  - name: isBodyPollingDone(RawResponse)
    uid: '@azure/arm-storage.isBodyPollingDone'
    package: '@azure/arm-storage'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isBodyPollingDone(rawResponse: RawResponse): boolean'
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-storage.RawResponse" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: 'processBodyPollingOperationResult<TResult>(RawResponse, TResult)'
    uid: '@azure/arm-storage.processBodyPollingOperationResult'
    package: '@azure/arm-storage'
    summary: >-
      Creates a polling strategy based on BodyPolling which uses the
      provisioning state

      from the result to determine the current operation state
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function processBodyPollingOperationResult<TResult>(rawResponse:
        RawResponse, flatResponse: TResult): LroStatus<TResult>
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-storage.RawResponse" />
          description: ''
        - id: flatResponse
          type: TResult
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-storage.LroStatus" />&lt;TResult&gt;
  - name: 'processLocationPollingOperationResult<TResult>(RawResponse, TResult)'
    uid: '@azure/arm-storage.processLocationPollingOperationResult'
    package: '@azure/arm-storage'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function processLocationPollingOperationResult<TResult>(rawResponse:
        RawResponse, flatResponse: TResult): LroStatus<TResult>
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-storage.RawResponse" />
          description: ''
        - id: flatResponse
          type: TResult
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-storage.LroStatus" />&lt;TResult&gt;
  - name: 'processPassthroughOperationResult<TResult>(RawResponse, TResult)'
    uid: '@azure/arm-storage.processPassthroughOperationResult'
    package: '@azure/arm-storage'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function processPassthroughOperationResult<TResult>(rawResponse:
        RawResponse, flatResponse: TResult): LroStatus<TResult>
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-storage.RawResponse" />
          description: ''
        - id: flatResponse
          type: TResult
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-storage.LroStatus" />&lt;TResult&gt;
  - name: 'getPollingUrl(RawResponse, string)'
    uid: '@azure/arm-storage.getPollingUrl'
    package: '@azure/arm-storage'
    summary: >-
      Detects where the continuation token is and returns it. Notice that
      azure-asyncoperation

      must be checked first before the other location headers because there are
      scenarios

      where both azure-asyncoperation and location could be present in the same
      response but

      azure-asyncoperation should be the one to use for polling.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPollingUrl(rawResponse: RawResponse, defaultPath: string):
        string
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-storage.RawResponse" />
          description: ''
        - id: defaultPath
          type: string
          description: ''
      return:
        description: ''
        type: string
  - name: 'inferLroMode(string, string, RawResponse)'
    uid: '@azure/arm-storage.inferLroMode'
    package: '@azure/arm-storage'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function inferLroMode(requestPath: string, requestMethod: string,
        rawResponse: RawResponse): LroConfig
      parameters:
        - id: requestPath
          type: string
          description: ''
        - id: requestMethod
          type: string
          description: ''
        - id: rawResponse
          type: <xref uid="@azure/arm-storage.RawResponse" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-storage.LroConfig" />
  - name: isUnexpectedInitialResponse(RawResponse)
    uid: '@azure/arm-storage.isUnexpectedInitialResponse'
    package: '@azure/arm-storage'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isUnexpectedInitialResponse(rawResponse: RawResponse): boolean'
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-storage.RawResponse" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: isUnexpectedPollingResponse(RawResponse)
    uid: '@azure/arm-storage.isUnexpectedPollingResponse'
    package: '@azure/arm-storage'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isUnexpectedPollingResponse(rawResponse: RawResponse): boolean'
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-storage.RawResponse" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: >-
      createGetLroStatusFromResponse<TResult>(LongRunningOperation<TResult>,
      LroConfig, LroResourceLocationConfig)
    uid: '@azure/arm-storage.createGetLroStatusFromResponse'
    package: '@azure/arm-storage'
    summary: creates a stepping function that maps an LRO state to another.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createGetLroStatusFromResponse<TResult>(lroPrimitives:
        LongRunningOperation<TResult>, config: LroConfig,
        lroResourceLocationConfig?: LroResourceLocationConfig):
        GetLroStatusFromResponse<TResult>
      parameters:
        - id: lroPrimitives
          type: >-
            <xref uid="@azure/arm-storage.LongRunningOperation"
            />&lt;TResult&gt;
          description: ''
        - id: config
          type: <xref uid="@azure/arm-storage.LroConfig" />
          description: ''
        - id: lroResourceLocationConfig
          type: <xref uid="@azure/arm-storage.LroResourceLocationConfig" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-storage.GetLroStatusFromResponse"
          />&lt;TResult&gt;
  - name: >-
      createInitializeState<TResult>(ResumablePollOperationState<TResult>,
      string, string)
    uid: '@azure/arm-storage.createInitializeState'
    package: '@azure/arm-storage'
    summary: Creates a callback to be used to initialize the polling operation state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createInitializeState<TResult>(state:
        ResumablePollOperationState<TResult>, requestPath: string,
        requestMethod: string): (rawResponse: RawResponse, flatResponse:
        unknown) => boolean
      parameters:
        - id: state
          type: >-
            <xref uid="@azure/arm-storage.ResumablePollOperationState"
            />&lt;TResult&gt;
          description: of the polling operation
        - id: requestPath
          type: string
          description: ''
        - id: requestMethod
          type: string
          description: ''
      return:
        description: callback that initializes the state of the polling operation
        type: '(rawResponse: RawResponse, flatResponse: unknown) =&gt; boolean'
  - name: 'createPollForLROStatus<TResult>(LongRunningOperation<TResult>, LroConfig)'
    uid: '@azure/arm-storage.createPollForLROStatus'
    package: '@azure/arm-storage'
    summary: Creates a polling operation that returns a LRO state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createPollForLROStatus<TResult>(lroPrimitives:
        LongRunningOperation<TResult>, config: LroConfig): (pollingURL: string,
        pollerConfig: PollerConfig) => Promise<LroStatus<TResult>>
      parameters:
        - id: lroPrimitives
          type: >-
            <xref uid="@azure/arm-storage.LongRunningOperation"
            />&lt;TResult&gt;
          description: ''
        - id: config
          type: <xref uid="@azure/arm-storage.LroConfig" />
          description: ''
      return:
        description: ''
        type: >-
          (pollingURL: string, pollerConfig: PollerConfig) =&gt;
          Promise&lt;LroStatus&lt;TResult&gt;&gt;
enums:
  - '@azure/arm-storage.KnownBlobInventoryPolicyName'
  - '@azure/arm-storage.KnownBlobRestoreProgressStatus'
  - '@azure/arm-storage.KnownBypass'
  - '@azure/arm-storage.KnownCorsRuleAllowedMethodsItem'
  - '@azure/arm-storage.KnownCreatedByType'
  - '@azure/arm-storage.KnownDefaultSharePermission'
  - '@azure/arm-storage.KnownDirectoryServiceOptions'
  - '@azure/arm-storage.KnownEnabledProtocols'
  - '@azure/arm-storage.KnownEncryptionScopeSource'
  - '@azure/arm-storage.KnownEncryptionScopeState'
  - '@azure/arm-storage.KnownExpirationAction'
  - '@azure/arm-storage.KnownExtendedLocationTypes'
  - '@azure/arm-storage.KnownFormat'
  - '@azure/arm-storage.KnownGeoReplicationStatus'
  - '@azure/arm-storage.KnownIdentityType'
  - '@azure/arm-storage.KnownImmutabilityPolicyState'
  - '@azure/arm-storage.KnownImmutabilityPolicyUpdateType'
  - '@azure/arm-storage.KnownInventoryRuleType'
  - '@azure/arm-storage.KnownKeySource'
  - '@azure/arm-storage.KnownKeyType'
  - '@azure/arm-storage.KnownKind'
  - '@azure/arm-storage.KnownLargeFileSharesState'
  - '@azure/arm-storage.KnownLeaseContainerRequestAction'
  - '@azure/arm-storage.KnownLeaseDuration'
  - '@azure/arm-storage.KnownLeaseShareAction'
  - '@azure/arm-storage.KnownLeaseState'
  - '@azure/arm-storage.KnownLeaseStatus'
  - '@azure/arm-storage.KnownListContainersInclude'
  - '@azure/arm-storage.KnownManagementPolicyName'
  - '@azure/arm-storage.KnownMigrationState'
  - '@azure/arm-storage.KnownMinimumTlsVersion'
  - '@azure/arm-storage.KnownName'
  - '@azure/arm-storage.KnownObjectType'
  - '@azure/arm-storage.KnownPermissions'
  - '@azure/arm-storage.KnownPrivateEndpointConnectionProvisioningState'
  - '@azure/arm-storage.KnownPrivateEndpointServiceConnectionStatus'
  - '@azure/arm-storage.KnownReasonCode'
  - '@azure/arm-storage.KnownRootSquashType'
  - '@azure/arm-storage.KnownRoutingChoice'
  - '@azure/arm-storage.KnownRuleType'
  - '@azure/arm-storage.KnownSchedule'
  - '@azure/arm-storage.KnownServices'
  - '@azure/arm-storage.KnownShareAccessTier'
  - '@azure/arm-storage.KnownSignedResource'
  - '@azure/arm-storage.KnownSignedResourceTypes'
  - '@azure/arm-storage.KnownSkuName'
  - '@azure/arm-storage.KnownState'
interfaces:
  - '@azure/arm-storage.AccessPolicy'
  - '@azure/arm-storage.AccountSasParameters'
  - '@azure/arm-storage.ActiveDirectoryProperties'
  - '@azure/arm-storage.AzureFilesIdentityBasedAuthentication'
  - '@azure/arm-storage.BlobContainers'
  - '@azure/arm-storage.BlobContainersClearLegalHoldOptionalParams'
  - '@azure/arm-storage.BlobContainersCreateOptionalParams'
  - '@azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders'
  - >-
    @azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
  - '@azure/arm-storage.BlobContainersDeleteImmutabilityPolicyHeaders'
  - '@azure/arm-storage.BlobContainersDeleteImmutabilityPolicyOptionalParams'
  - '@azure/arm-storage.BlobContainersDeleteOptionalParams'
  - '@azure/arm-storage.BlobContainersExtendImmutabilityPolicyHeaders'
  - '@azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams'
  - '@azure/arm-storage.BlobContainersGetImmutabilityPolicyHeaders'
  - '@azure/arm-storage.BlobContainersGetImmutabilityPolicyOptionalParams'
  - '@azure/arm-storage.BlobContainersGetOptionalParams'
  - '@azure/arm-storage.BlobContainersLeaseOptionalParams'
  - '@azure/arm-storage.BlobContainersListNextOptionalParams'
  - '@azure/arm-storage.BlobContainersListOptionalParams'
  - '@azure/arm-storage.BlobContainersLockImmutabilityPolicyHeaders'
  - '@azure/arm-storage.BlobContainersLockImmutabilityPolicyOptionalParams'
  - '@azure/arm-storage.BlobContainersObjectLevelWormOptionalParams'
  - '@azure/arm-storage.BlobContainersSetLegalHoldOptionalParams'
  - '@azure/arm-storage.BlobContainersUpdateOptionalParams'
  - '@azure/arm-storage.BlobInventoryPolicies'
  - '@azure/arm-storage.BlobInventoryPoliciesCreateOrUpdateOptionalParams'
  - '@azure/arm-storage.BlobInventoryPoliciesDeleteOptionalParams'
  - '@azure/arm-storage.BlobInventoryPoliciesGetOptionalParams'
  - '@azure/arm-storage.BlobInventoryPoliciesListOptionalParams'
  - '@azure/arm-storage.BlobInventoryPolicyDefinition'
  - '@azure/arm-storage.BlobInventoryPolicyFilter'
  - '@azure/arm-storage.BlobInventoryPolicyRule'
  - '@azure/arm-storage.BlobInventoryPolicySchema'
  - '@azure/arm-storage.BlobRestoreParameters'
  - '@azure/arm-storage.BlobRestoreRange'
  - '@azure/arm-storage.BlobRestoreStatus'
  - '@azure/arm-storage.BlobServiceItems'
  - '@azure/arm-storage.BlobServices'
  - '@azure/arm-storage.BlobServicesGetServicePropertiesOptionalParams'
  - '@azure/arm-storage.BlobServicesListOptionalParams'
  - '@azure/arm-storage.BlobServicesSetServicePropertiesOptionalParams'
  - '@azure/arm-storage.ChangeFeed'
  - '@azure/arm-storage.CheckNameAvailabilityResult'
  - '@azure/arm-storage.CloudError'
  - '@azure/arm-storage.CloudErrorAutoGenerated'
  - '@azure/arm-storage.CloudErrorBody'
  - '@azure/arm-storage.CloudErrorBodyAutoGenerated'
  - '@azure/arm-storage.CorsRule'
  - '@azure/arm-storage.CorsRules'
  - '@azure/arm-storage.CustomDomain'
  - '@azure/arm-storage.DateAfterCreation'
  - '@azure/arm-storage.DateAfterModification'
  - '@azure/arm-storage.DeleteRetentionPolicy'
  - '@azure/arm-storage.DeletedAccountListResult'
  - '@azure/arm-storage.DeletedAccounts'
  - '@azure/arm-storage.DeletedAccountsGetOptionalParams'
  - '@azure/arm-storage.DeletedAccountsListNextOptionalParams'
  - '@azure/arm-storage.DeletedAccountsListOptionalParams'
  - '@azure/arm-storage.DeletedShare'
  - '@azure/arm-storage.Dimension'
  - '@azure/arm-storage.Encryption'
  - '@azure/arm-storage.EncryptionIdentity'
  - '@azure/arm-storage.EncryptionScopeKeyVaultProperties'
  - '@azure/arm-storage.EncryptionScopeListResult'
  - '@azure/arm-storage.EncryptionScopes'
  - '@azure/arm-storage.EncryptionScopesGetOptionalParams'
  - '@azure/arm-storage.EncryptionScopesListNextOptionalParams'
  - '@azure/arm-storage.EncryptionScopesListOptionalParams'
  - '@azure/arm-storage.EncryptionScopesPatchOptionalParams'
  - '@azure/arm-storage.EncryptionScopesPutOptionalParams'
  - '@azure/arm-storage.EncryptionService'
  - '@azure/arm-storage.EncryptionServices'
  - '@azure/arm-storage.Endpoints'
  - '@azure/arm-storage.ErrorResponse'
  - '@azure/arm-storage.ErrorResponseBody'
  - '@azure/arm-storage.ExtendedLocation'
  - '@azure/arm-storage.FileServiceItems'
  - '@azure/arm-storage.FileServices'
  - '@azure/arm-storage.FileServicesGetServicePropertiesOptionalParams'
  - '@azure/arm-storage.FileServicesListOptionalParams'
  - '@azure/arm-storage.FileServicesSetServicePropertiesOptionalParams'
  - '@azure/arm-storage.FileShareItems'
  - '@azure/arm-storage.FileShares'
  - '@azure/arm-storage.FileSharesCreateOptionalParams'
  - '@azure/arm-storage.FileSharesDeleteOptionalParams'
  - '@azure/arm-storage.FileSharesGetOptionalParams'
  - '@azure/arm-storage.FileSharesLeaseHeaders'
  - '@azure/arm-storage.FileSharesLeaseOptionalParams'
  - '@azure/arm-storage.FileSharesListNextOptionalParams'
  - '@azure/arm-storage.FileSharesListOptionalParams'
  - '@azure/arm-storage.FileSharesRestoreOptionalParams'
  - '@azure/arm-storage.FileSharesUpdateOptionalParams'
  - '@azure/arm-storage.GeoReplicationStats'
  - '@azure/arm-storage.IPRule'
  - '@azure/arm-storage.Identity'
  - '@azure/arm-storage.ImmutabilityPolicyProperties'
  - '@azure/arm-storage.ImmutableStorageWithVersioning'
  - '@azure/arm-storage.KeyCreationTime'
  - '@azure/arm-storage.KeyPolicy'
  - '@azure/arm-storage.KeyVaultProperties'
  - '@azure/arm-storage.LastAccessTimeTrackingPolicy'
  - '@azure/arm-storage.LeaseContainerRequest'
  - '@azure/arm-storage.LeaseContainerResponse'
  - '@azure/arm-storage.LeaseShareRequest'
  - '@azure/arm-storage.LeaseShareResponse'
  - '@azure/arm-storage.LegalHold'
  - '@azure/arm-storage.LegalHoldProperties'
  - '@azure/arm-storage.ListAccountSasResponse'
  - '@azure/arm-storage.ListBlobInventoryPolicy'
  - '@azure/arm-storage.ListContainerItems'
  - '@azure/arm-storage.ListQueueResource'
  - '@azure/arm-storage.ListQueueServices'
  - '@azure/arm-storage.ListServiceSasResponse'
  - '@azure/arm-storage.ListTableResource'
  - '@azure/arm-storage.ListTableServices'
  - '@azure/arm-storage.ManagementPolicies'
  - '@azure/arm-storage.ManagementPoliciesCreateOrUpdateOptionalParams'
  - '@azure/arm-storage.ManagementPoliciesDeleteOptionalParams'
  - '@azure/arm-storage.ManagementPoliciesGetOptionalParams'
  - '@azure/arm-storage.ManagementPolicyAction'
  - '@azure/arm-storage.ManagementPolicyBaseBlob'
  - '@azure/arm-storage.ManagementPolicyDefinition'
  - '@azure/arm-storage.ManagementPolicyFilter'
  - '@azure/arm-storage.ManagementPolicyRule'
  - '@azure/arm-storage.ManagementPolicySchema'
  - '@azure/arm-storage.ManagementPolicySnapShot'
  - '@azure/arm-storage.ManagementPolicyVersion'
  - '@azure/arm-storage.MetricSpecification'
  - '@azure/arm-storage.Multichannel'
  - '@azure/arm-storage.NetworkRuleSet'
  - '@azure/arm-storage.ObjectReplicationPolicies'
  - '@azure/arm-storage.ObjectReplicationPoliciesOperations'
  - >-
    @azure/arm-storage.ObjectReplicationPoliciesOperationsCreateOrUpdateOptionalParams
  - '@azure/arm-storage.ObjectReplicationPoliciesOperationsDeleteOptionalParams'
  - '@azure/arm-storage.ObjectReplicationPoliciesOperationsGetOptionalParams'
  - '@azure/arm-storage.ObjectReplicationPoliciesOperationsListOptionalParams'
  - '@azure/arm-storage.ObjectReplicationPolicyFilter'
  - '@azure/arm-storage.ObjectReplicationPolicyRule'
  - '@azure/arm-storage.Operation'
  - '@azure/arm-storage.OperationDisplay'
  - '@azure/arm-storage.OperationListResult'
  - '@azure/arm-storage.Operations'
  - '@azure/arm-storage.OperationsListOptionalParams'
  - '@azure/arm-storage.PrivateEndpoint'
  - '@azure/arm-storage.PrivateEndpointConnectionListResult'
  - '@azure/arm-storage.PrivateEndpointConnections'
  - '@azure/arm-storage.PrivateEndpointConnectionsDeleteOptionalParams'
  - '@azure/arm-storage.PrivateEndpointConnectionsGetOptionalParams'
  - '@azure/arm-storage.PrivateEndpointConnectionsListOptionalParams'
  - '@azure/arm-storage.PrivateEndpointConnectionsPutOptionalParams'
  - '@azure/arm-storage.PrivateLinkResourceListResult'
  - '@azure/arm-storage.PrivateLinkResources'
  - '@azure/arm-storage.PrivateLinkResourcesListByStorageAccountOptionalParams'
  - '@azure/arm-storage.PrivateLinkServiceConnectionState'
  - '@azure/arm-storage.ProtocolSettings'
  - '@azure/arm-storage.Queue'
  - '@azure/arm-storage.QueueCreateOptionalParams'
  - '@azure/arm-storage.QueueDeleteOptionalParams'
  - '@azure/arm-storage.QueueGetOptionalParams'
  - '@azure/arm-storage.QueueListNextOptionalParams'
  - '@azure/arm-storage.QueueListOptionalParams'
  - '@azure/arm-storage.QueueServices'
  - '@azure/arm-storage.QueueServicesGetServicePropertiesOptionalParams'
  - '@azure/arm-storage.QueueServicesListOptionalParams'
  - '@azure/arm-storage.QueueServicesSetServicePropertiesOptionalParams'
  - '@azure/arm-storage.QueueUpdateOptionalParams'
  - '@azure/arm-storage.Resource'
  - '@azure/arm-storage.ResourceAccessRule'
  - '@azure/arm-storage.RestorePolicyProperties'
  - '@azure/arm-storage.Restriction'
  - '@azure/arm-storage.RoutingPreference'
  - '@azure/arm-storage.SKUCapability'
  - '@azure/arm-storage.SasPolicy'
  - '@azure/arm-storage.ServiceSasParameters'
  - '@azure/arm-storage.ServiceSpecification'
  - '@azure/arm-storage.SignedIdentifier'
  - '@azure/arm-storage.Sku'
  - '@azure/arm-storage.SkuInformation'
  - '@azure/arm-storage.Skus'
  - '@azure/arm-storage.SkusListOptionalParams'
  - '@azure/arm-storage.SmbSetting'
  - '@azure/arm-storage.StorageAccountCheckNameAvailabilityParameters'
  - '@azure/arm-storage.StorageAccountCreateParameters'
  - '@azure/arm-storage.StorageAccountInternetEndpoints'
  - '@azure/arm-storage.StorageAccountKey'
  - '@azure/arm-storage.StorageAccountListKeysResult'
  - '@azure/arm-storage.StorageAccountListResult'
  - '@azure/arm-storage.StorageAccountMicrosoftEndpoints'
  - '@azure/arm-storage.StorageAccountRegenerateKeyParameters'
  - '@azure/arm-storage.StorageAccountUpdateParameters'
  - '@azure/arm-storage.StorageAccounts'
  - '@azure/arm-storage.StorageAccountsCheckNameAvailabilityOptionalParams'
  - '@azure/arm-storage.StorageAccountsCreateOptionalParams'
  - '@azure/arm-storage.StorageAccountsDeleteOptionalParams'
  - '@azure/arm-storage.StorageAccountsFailoverOptionalParams'
  - '@azure/arm-storage.StorageAccountsGetPropertiesOptionalParams'
  - '@azure/arm-storage.StorageAccountsListAccountSASOptionalParams'
  - '@azure/arm-storage.StorageAccountsListByResourceGroupNextOptionalParams'
  - '@azure/arm-storage.StorageAccountsListByResourceGroupOptionalParams'
  - '@azure/arm-storage.StorageAccountsListKeysOptionalParams'
  - '@azure/arm-storage.StorageAccountsListNextOptionalParams'
  - '@azure/arm-storage.StorageAccountsListOptionalParams'
  - '@azure/arm-storage.StorageAccountsListServiceSASOptionalParams'
  - '@azure/arm-storage.StorageAccountsRegenerateKeyOptionalParams'
  - '@azure/arm-storage.StorageAccountsRestoreBlobRangesOptionalParams'
  - '@azure/arm-storage.StorageAccountsRevokeUserDelegationKeysOptionalParams'
  - '@azure/arm-storage.StorageAccountsUpdateOptionalParams'
  - '@azure/arm-storage.StorageManagementClientOptionalParams'
  - '@azure/arm-storage.StorageSkuListResult'
  - '@azure/arm-storage.SystemData'
  - '@azure/arm-storage.TableOperations'
  - '@azure/arm-storage.TableOperationsCreateOptionalParams'
  - '@azure/arm-storage.TableOperationsDeleteOptionalParams'
  - '@azure/arm-storage.TableOperationsGetOptionalParams'
  - '@azure/arm-storage.TableOperationsListNextOptionalParams'
  - '@azure/arm-storage.TableOperationsListOptionalParams'
  - '@azure/arm-storage.TableOperationsUpdateOptionalParams'
  - '@azure/arm-storage.TableServices'
  - '@azure/arm-storage.TableServicesGetServicePropertiesOptionalParams'
  - '@azure/arm-storage.TableServicesListOptionalParams'
  - '@azure/arm-storage.TableServicesSetServicePropertiesOptionalParams'
  - '@azure/arm-storage.TagFilter'
  - '@azure/arm-storage.TagProperty'
  - '@azure/arm-storage.UpdateHistoryProperty'
  - '@azure/arm-storage.Usage'
  - '@azure/arm-storage.UsageListResult'
  - '@azure/arm-storage.UsageName'
  - '@azure/arm-storage.Usages'
  - '@azure/arm-storage.UsagesListByLocationOptionalParams'
  - '@azure/arm-storage.UserAssignedIdentity'
  - '@azure/arm-storage.VirtualNetworkRule'
  - '@azure/arm-storage.LongRunningOperation'
  - '@azure/arm-storage.LroBody'
  - '@azure/arm-storage.LroConfig'
  - '@azure/arm-storage.LroEngineOptions'
  - '@azure/arm-storage.LroInProgressState'
  - '@azure/arm-storage.LroResponse'
  - '@azure/arm-storage.LroTerminalState'
  - '@azure/arm-storage.PollerConfig'
  - '@azure/arm-storage.RawResponse'
