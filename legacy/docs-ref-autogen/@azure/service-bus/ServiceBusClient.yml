### YamlMime:TSType
name: ServiceBusClient
uid: '@azure/service-bus - v1.1.10.ServiceBusClient'
package: '@azure/service-bus - v1.1.10'
summary: >-
  Describes the client that allows interacting with a Service Bus instance.

  Holds the AMQP connection to the Service Bus Namespace and is the entry point
  for using Queues,

  Topics and Subscriptions.
fullName: ServiceBusClient
remarks: ''
isDeprecated: false
type: class
properties:
  - name: name
    uid: '@azure/service-bus - v1.1.10.ServiceBusClient.name'
    package: '@azure/service-bus - v1.1.10'
    summary: The name of the Service Bus Namespace.
    fullName: name
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        description: ''
        type: string
methods:
  - name: close()
    uid: '@azure/service-bus - v1.1.10.ServiceBusClient.close'
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Closes the AMQP connection created by this ServiceBusClient along with
      AMQP links for

      sender/receivers created by the queue/topic/subscription clients created
      by this

      ServiceBusClient.

      Once closed,

      - the clients created by this ServiceBusClient cannot be used to
      send/receive messages anymore.

      - this ServiceBusClient cannot be used to create any new
      queues/topics/subscriptions clients.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function close(): Promise<any>'
      return:
        description: ''
        type: Promise&lt;any&gt;
  - name: >-
      createFromAadTokenCredentials(string, { getToken() => Promise<{
      accessToken: string, expiresOn?: string | Date | undefined, tokenType:
      string }> }, ServiceBusClientOptions)
    uid: >-
      @azure/service-bus -
      v1.1.10.ServiceBusClient.createFromAadTokenCredentials
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Creates a ServiceBusClient for the Service Bus Namespace represented by
      the given host using

      the TokenCredentials generated using the `@azure/ms-rest-nodeauth`
      library.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function createFromAadTokenCredentials(host: string, credentials:
        { getToken() => Promise<{ accessToken: string, expiresOn?: string | Date
        | undefined, tokenType: string }> }, options?: ServiceBusClientOptions):
        ServiceBusClient
      parameters:
        - id: host
          type: string
          description: |-
            Fully qualified domain name for ServiceBus.
            Most likely, {yournamespace}.servicebus.windows.net
        - id: credentials
          type: >-
            { getToken() =&gt; Promise&lt;{ accessToken: string, expiresOn?:
            string | Date | undefined, tokenType: string }&gt; }
          description: >-
            The Token credentials generated by using the

            `@azure/ms-rest-nodeauth` library. It can be one of the following:
             - ApplicationTokenCredentials
             - UserTokenCredentials
             - DeviceTokenCredentials
             - MSITokenCredentials
            Token audience (or resource in case of MSI based credentials) to use
            when creating the credentials is https://servicebus.azure.net/
        - id: options
          type: '@azure/service-bus - <xref uid="v1.1.10.ServiceBusClientOptions" />'
          description: |-
            Options to control ways to interact with the
            Service Bus Namespace.
      return:
        description: ''
        type: '@azure/service-bus - <xref uid="v1.1.10.ServiceBusClient" />'
  - name: 'createFromConnectionString(string, ServiceBusClientOptions)'
    uid: '@azure/service-bus - v1.1.10.ServiceBusClient.createFromConnectionString'
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Creates a ServiceBusClient for the Service Bus Namespace represented in
      the given connection

      string.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function createFromConnectionString(connectionString: string,
        options?: ServiceBusClientOptions): ServiceBusClient
      parameters:
        - id: connectionString
          type: string
          description: >-
            Connection string of the form

            'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'
        - id: options
          type: '@azure/service-bus - <xref uid="v1.1.10.ServiceBusClientOptions" />'
          description: ''
      return:
        description: ''
        type: '@azure/service-bus - <xref uid="v1.1.10.ServiceBusClient" />'
  - name: 'createFromTokenProvider(string, TokenProvider, ServiceBusClientOptions)'
    uid: '@azure/service-bus - v1.1.10.ServiceBusClient.createFromTokenProvider'
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Creates a ServiceBusClient for the Service Bus Namespace represented by
      the given host using

      the given TokenProvider.

      If you're using an own token provider against AAD, then set the "scopes"
      for service-bus

      to be `["https://servicebus.azure.net//user_impersonation"]` to get the
      appropriate token.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function createFromTokenProvider(host: string, tokenProvider:
        TokenProvider, options?: ServiceBusClientOptions): ServiceBusClient
      parameters:
        - id: host
          type: string
          description: |-
            Fully qualified domain name for Servicebus. Most likely,
            `<yournamespace>.servicebus.windows.net`.
        - id: tokenProvider
          type: TokenProvider
          description: >-
            Your custom implementation of the [Token
            Provider](https://github.com/Azure/amqp-common-js/blob/master/lib/auth/token.ts)

            interface.
        - id: options
          type: '@azure/service-bus - <xref uid="v1.1.10.ServiceBusClientOptions" />'
          description: |-
            Options to control ways to interact with the
            Service Bus Namespace.
      return:
        description: ''
        type: '@azure/service-bus - <xref uid="v1.1.10.ServiceBusClient" />'
  - name: createQueueClient(string)
    uid: '@azure/service-bus - v1.1.10.ServiceBusClient.createQueueClient'
    package: '@azure/service-bus - v1.1.10'
    summary: Creates a QueueClient for an existing Service Bus Queue.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createQueueClient(queueName: string): QueueClient'
      parameters:
        - id: queueName
          type: string
          description: The queue name.
      return:
        description: QueueClient.
        type: '@azure/service-bus - <xref uid="v1.1.10.QueueClient" />'
  - name: 'createSubscriptionClient(string, string)'
    uid: '@azure/service-bus - v1.1.10.ServiceBusClient.createSubscriptionClient'
    package: '@azure/service-bus - v1.1.10'
    summary: Creates a SubscriptionClient for an existing Service Bus Subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createSubscriptionClient(topicName: string, subscriptionName:
        string): SubscriptionClient
      parameters:
        - id: topicName
          type: string
          description: The topic name.
        - id: subscriptionName
          type: string
          description: The subscription name.
      return:
        description: SubscriptionClient.
        type: '@azure/service-bus - <xref uid="v1.1.10.SubscriptionClient" />'
  - name: createTopicClient(string)
    uid: '@azure/service-bus - v1.1.10.ServiceBusClient.createTopicClient'
    package: '@azure/service-bus - v1.1.10'
    summary: Creates a TopicClient for an existing Service Bus Topic.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createTopicClient(topicName: string): TopicClient'
      parameters:
        - id: topicName
          type: string
          description: The topic name.
      return:
        description: TopicClient.
        type: '@azure/service-bus - <xref uid="v1.1.10.TopicClient" />'
