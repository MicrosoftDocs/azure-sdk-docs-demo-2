### YamlMime:TSType
name: QueueClient
uid: '@azure/service-bus - v1.1.10.QueueClient'
package: '@azure/service-bus - v1.1.10'
summary: >-
  Describes the client that allows interacting with a Service Bus Queue.

  Use the `createQueueClient` function on the ServiceBusClient object to
  instantiate a QueueClient
fullName: QueueClient
remarks: ''
isDeprecated: false
type: class
properties:
  - name: entityPath
    uid: '@azure/service-bus - v1.1.10.QueueClient.entityPath'
    package: '@azure/service-bus - v1.1.10'
    summary: The path for the Service Bus Queue for which this client is created.
    fullName: entityPath
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'entityPath: string'
      return:
        description: ''
        type: string
  - name: id
    uid: '@azure/service-bus - v1.1.10.QueueClient.id'
    package: '@azure/service-bus - v1.1.10'
    summary: A unique identifier for this client.
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        description: ''
        type: string
methods:
  - name: close()
    uid: '@azure/service-bus - v1.1.10.QueueClient.close'
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Closes all the AMQP links for sender/receivers created by this client.

      Once closed, neither the QueueClient nor its sender/receivers can be used
      for any

      further operations.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function close(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: createReceiver(ReceiveMode)
    uid: '@azure/service-bus - v1.1.10.QueueClient.createReceiver'
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Creates a Receiver for receiving messages from a Queue which does not have
      sessions enabled.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode): Receiver'
      parameters:
        - id: receiveMode
          type: '@azure/service-bus - <xref uid="v1.1.10.ReceiveMode" />'
          description: >
            An enum indicating the mode in which messages should be received.
            Possible

            values are:

            - `ReceiveMode.peekLock`: Once a message is received in this mode,
            the receiver has a lock on

            the message for a particular duration. If the message is not settled
            by this time, it lands back

            on Service Bus to be fetched by the next receive operation.

            - `ReceiveMode.receiveAndDelete`: Messages received in this mode get
            automatically removed from

            Service Bus.
      return:
        description: >-
          Receiver A receiver to receive messages from a Queue which does not
          have

          sessions enabled.
        type: '@azure/service-bus - <xref uid="v1.1.10.Receiver" />'
  - name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    uid: '@azure/service-bus - v1.1.10.QueueClient.createReceiver_1'
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Creates a Receiver for receiving messages from a session enabled Queue.
      When no sessionId is

      given, a random session among the available sessions is used.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createReceiver(receiveMode: ReceiveMode, sessionOptions:
        SessionReceiverOptions): SessionReceiver
      parameters:
        - id: receiveMode
          type: '@azure/service-bus - <xref uid="v1.1.10.ReceiveMode" />'
          description: >-
            An enum indicating the mode in which messages should be received.
            Possible

            values are:

            - `ReceiveMode.peekLock`: Once a message is received in this mode,
            the receiver has a lock on

            the message for a particular duration. If the message is not settled
            by this time, it lands back

            on Service Bus to be fetched by the next receive operation.

            - `ReceiveMode.receiveAndDelete`: Messages received in this mode get
            automatically removed from

            Service Bus.
        - id: sessionOptions
          type: '@azure/service-bus - <xref uid="v1.1.10.SessionReceiverOptions" />'
          description: >
            Options to provide sessionId and duration of automatic lock renewal
            for

            the session receiver.
      return:
        description: SessionReceiver A receiver to receive from a session in the Queue.
        type: '@azure/service-bus - <xref uid="v1.1.10.SessionReceiver" />'
  - name: createSender()
    uid: '@azure/service-bus - v1.1.10.QueueClient.createSender'
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Creates a Sender to be used for sending messages, scheduling messages to
      be sent at a later time

      and cancelling such scheduled messages.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createSender(): Sender'
      return:
        description: ''
        type: '@azure/service-bus - <xref uid="v1.1.10.Sender" />'
  - name: getDeadLetterQueuePath(string)
    uid: '@azure/service-bus - v1.1.10.QueueClient.getDeadLetterQueuePath'
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Returns the corresponding dead letter queue name for the queue represented
      by the given name.

      Use this in the `createQueueClient` function on the `ServiceBusClient`
      instance to receive

      messages from a dead letter queue.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function getDeadLetterQueuePath(queueName: string): string'
      parameters:
        - id: queueName
          type: string
          description: >
            Name of the queue whose dead letter counterpart's name is being
            fetched
      return:
        description: ''
        type: string
  - name: peek(undefined | number)
    uid: '@azure/service-bus - v1.1.10.QueueClient.peek'
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Fetches the next batch of active messages (including deferred but not
      deadlettered messages).

      - The first call to `peek()` fetches the first active message. Each
      subsequent call fetches the

      subsequent message.

      - Unlike a `received` message, `peeked` message is a read-only version of
      the message.

      It cannot be `Completed/Abandoned/Deferred/Deadlettered`. The lock on it
      cannot be renewed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function peek(maxMessageCount?: undefined | number):
        Promise<ReceivedMessageInfo[]>
      parameters:
        - id: maxMessageCount
          type: undefined | number
          description: ''
      return:
        description: 'Promise<ReceivedMessageInfo[]>'
        type: >-
          Promise&lt;@azure/service-bus - <xref
          uid="v1.1.10.ReceivedMessageInfo" />[]&gt;
  - name: 'peekBySequenceNumber(Long, undefined | number)'
    uid: '@azure/service-bus - v1.1.10.QueueClient.peekBySequenceNumber'
    package: '@azure/service-bus - v1.1.10'
    summary: >-
      Peeks the desired number of active messages (including deferred but not
      deadlettered messages)

      from the specified sequence number.

      - Unlike a `received` message, `peeked` message is a read-only version of
      the message.

      It cannot be `Completed/Abandoned/Deferred/Deadlettered`. The lock on it
      cannot be renewed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function peekBySequenceNumber(fromSequenceNumber: Long,
        maxMessageCount?: undefined | number): Promise<ReceivedMessageInfo[]>
      parameters:
        - id: fromSequenceNumber
          type: Long
          description: The sequence number from where to read the message.
        - id: maxMessageCount
          type: undefined | number
          description: ''
      return:
        description: 'Promise<ReceivedMessageInfo[]>'
        type: >-
          Promise&lt;@azure/service-bus - <xref
          uid="v1.1.10.ReceivedMessageInfo" />[]&gt;
