### YamlMime:TSPackage
uid: '@azure-rest/confidential-ledger'
name: '@azure-rest/confidential-ledger'
summary: ''
type: package
interfaces:
  - '@azure-rest/confidential-ledger.ConfidentialLedgerEnclaves'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerError'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerErrorBody'
  - '@azure-rest/confidential-ledger.Consortium'
  - '@azure-rest/confidential-ledger.ConsortiumMember'
  - '@azure-rest/confidential-ledger.Constitution'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUser'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUser200Response'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserBodyParam'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserdefaultResponse'
  - '@azure-rest/confidential-ledger.DeleteUser204Response'
  - '@azure-rest/confidential-ledger.DeleteUserdefaultResponse'
  - '@azure-rest/confidential-ledger.EnclaveQuote'
  - '@azure-rest/confidential-ledger.GetConsortiumMembers'
  - '@azure-rest/confidential-ledger.GetConsortiumMembers200Response'
  - '@azure-rest/confidential-ledger.GetConsortiumMembersdefaultResponse'
  - '@azure-rest/confidential-ledger.GetConstitution'
  - '@azure-rest/confidential-ledger.GetConstitution200Response'
  - '@azure-rest/confidential-ledger.GetConstitutiondefaultResponse'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntry'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntry200Response'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntryQueryParam'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntryQueryParamProperties'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntrydefaultResponse'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotes'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotes200Response'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotesdefaultResponse'
  - '@azure-rest/confidential-ledger.GetLedgerEntries200Response'
  - '@azure-rest/confidential-ledger.GetLedgerEntriesQueryParam'
  - '@azure-rest/confidential-ledger.GetLedgerEntriesQueryParamProperties'
  - '@azure-rest/confidential-ledger.GetLedgerEntriesdefaultResponse'
  - '@azure-rest/confidential-ledger.GetLedgerEntry'
  - '@azure-rest/confidential-ledger.GetLedgerEntry200Response'
  - '@azure-rest/confidential-ledger.GetLedgerEntryQueryParam'
  - '@azure-rest/confidential-ledger.GetLedgerEntryQueryParamProperties'
  - '@azure-rest/confidential-ledger.GetLedgerEntrydefaultResponse'
  - '@azure-rest/confidential-ledger.GetReceipt'
  - '@azure-rest/confidential-ledger.GetReceipt200Response'
  - '@azure-rest/confidential-ledger.GetReceiptdefaultResponse'
  - '@azure-rest/confidential-ledger.GetTransactionStatus'
  - '@azure-rest/confidential-ledger.GetTransactionStatus200Response'
  - '@azure-rest/confidential-ledger.GetTransactionStatusdefaultResponse'
  - '@azure-rest/confidential-ledger.GetUser200Response'
  - '@azure-rest/confidential-ledger.GetUserdefaultResponse'
  - '@azure-rest/confidential-ledger.LedgerEntry'
  - '@azure-rest/confidential-ledger.LedgerIdentity'
  - '@azure-rest/confidential-ledger.LedgerQueryResult'
  - '@azure-rest/confidential-ledger.LedgerUser'
  - '@azure-rest/confidential-ledger.LedgerWriteResult'
  - '@azure-rest/confidential-ledger.MerkleProofElement'
  - '@azure-rest/confidential-ledger.PagedLedgerEntries'
  - '@azure-rest/confidential-ledger.PostLedgerEntry'
  - '@azure-rest/confidential-ledger.PostLedgerEntry200Headers'
  - '@azure-rest/confidential-ledger.PostLedgerEntry200Response'
  - '@azure-rest/confidential-ledger.PostLedgerEntryBodyParam'
  - '@azure-rest/confidential-ledger.PostLedgerEntryQueryParam'
  - '@azure-rest/confidential-ledger.PostLedgerEntryQueryParamProperties'
  - '@azure-rest/confidential-ledger.PostLedgerEntrydefaultResponse'
  - '@azure-rest/confidential-ledger.ReceiptContents'
  - '@azure-rest/confidential-ledger.RoleAssignment'
  - '@azure-rest/confidential-ledger.Routes'
  - '@azure-rest/confidential-ledger.TransactionReceipt'
  - '@azure-rest/confidential-ledger.TransactionStatus'
typeAliases:
  - '@azure-rest/confidential-ledger.ConfidentialLedgerQueryState'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerRestClient'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerUserRoleName'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserParameters'
  - '@azure-rest/confidential-ledger.DeleteUserParameters'
  - '@azure-rest/confidential-ledger.EnclaveQuotesDictionary'
  - '@azure-rest/confidential-ledger.GetConsortiumMembersParameters'
  - '@azure-rest/confidential-ledger.GetConstitutionParameters'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntryParameters'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotesParameters'
  - '@azure-rest/confidential-ledger.GetLedgerEntriesParameters'
  - '@azure-rest/confidential-ledger.GetLedgerEntryParameters'
  - '@azure-rest/confidential-ledger.GetReceiptParameters'
  - '@azure-rest/confidential-ledger.GetTransactionStatusParameters'
  - '@azure-rest/confidential-ledger.GetUserParameters'
  - '@azure-rest/confidential-ledger.PostLedgerEntryParameters'
  - '@azure-rest/confidential-ledger.TransactionState'
functions:
  - name: >-
      ConfidentialLedger(string, string, TokenCredential |
      CertificateCredential, ClientOptions)
    uid: '@azure-rest/confidential-ledger.ConfidentialLedger'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function ConfidentialLedger(ledgerBaseUrl: string, ledgerTlsCertificate:
        string, credentials: TokenCredential | CertificateCredential, options?:
        ClientOptions): ConfidentialLedgerRestClient
      parameters:
        - id: ledgerBaseUrl
          type: string
          description: ''
        - id: ledgerTlsCertificate
          type: string
          description: ''
        - id: credentials
          type: TokenCredential | CertificateCredential
          description: ''
        - id: options
          type: ClientOptions
          description: ''
      return:
        description: ''
        type: >-
          <xref
          uid="@azure-rest/confidential-ledger.ConfidentialLedgerRestClient" />
  - name: 'getLedgerIdentity(string, string)'
    uid: '@azure-rest/confidential-ledger.getLedgerIdentity'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLedgerIdentity(ledgerId: string, identityServiceBaseUrl?:
        string): Promise<LedgerIdentity>
      parameters:
        - id: ledgerId
          type: string
          description: ''
        - id: identityServiceBaseUrl
          type: string
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure-rest/confidential-ledger.LedgerIdentity"
          />&gt;
